{"version":3,"sources":["../../onboard/node_modules/@ethereumjs/common/dist.browser/chains/index.js","../../onboard/node_modules/@ethereumjs/common/dist.browser/hardforks/index.js","../../onboard/node_modules/@ethereumjs/common/dist.browser/eips/index.js","../../onboard/node_modules/crc-32/crc32.js","../../onboard/node_modules/@ethereumjs/common/dist.browser/index.js"],"names":["Object","defineProperty","exports","value","chains","names","mainnet","ropsten","rinkeby","kovan","goerli","hardforks","EIPs","2315","2537","2929","factory","CRC32","version","T","c","table","Array","n","Int32Array","signed_crc_table","bstr","seed","C","L","length","i","charCodeAt","buf","crc32_buf_8","str","d","DO_NOT_EXPORT_CRC","__assign","this","assign","t","s","arguments","p","prototype","hasOwnProperty","call","apply","__values","o","Symbol","iterator","m","next","done","TypeError","crc_32_1","chains_1","hardforks_1","eips_1","Common","opts","DEFAULT_HARDFORK","_supportedHardforks","_eips","_chainParams","setChain","chain","_hardfork","supportedHardforks","hardfork","setHardfork","eips","setEIPs","forCustomChain","baseChain","customChainParams","standardChainParams","_getChainParams","Error","e_1","_a","required_1","required_1_1","param","undefined","e_1_1","error","return","e_2","_isSupportedHardfork","changed","HARDFORK_CHANGES_1","HARDFORK_CHANGES_1_1","e_2_1","setHardforkByBlockNumber","blockNumber","e_3","_b","_c","hf","hardforkBlock","block","name","e_3_1","_chooseHardfork","onlySupported","_getHardfork","e_4","hfs","hfs_1","hfs_1_1","e_4_1","chainName","e_5","e_5_1","e_6","eips_2","eips_2_1","eip","minHF","gteHardfork","e_6_1","topic","e_7","paramByEIP","e_7_1","paramByHardfork","e_8","e_9","HARDFORK_CHANGES_2","HARDFORK_CHANGES_2_1","hfChanges","hfEIPs","hfEIPs_1","hfEIPs_1_1","valueEIP","e_9_1","v","e_8_1","eipParams","paramByBlock","activeHfs","activeHardforks","hardforkIsActiveOnBlock","hfBlock","activeOnBlock","hardforkGteHardfork","hardfork1","hardfork2","e_10","onlyActive","posHf1","posHf2","index","hardforks_2","hardforks_2_1","e_10_1","hardforkIsActiveOnChain","e_11","e_11_1","e_12","hfs_2","hfs_2_1","push","e_12_1","activeHardfork","isHardforkBlock","nextHardforkBlock","reduce","acc","isNextHardforkBlock","_calcForkHash","e_13","genesis","Buffer","from","hash","substr","hfBuffer","alloc","prevBlock","hfBlockBuffer","toString","padStart","concat","e_13_1","inputBuffer","Number","forkHash","data","hardforkForForkHash","resArray","filter","bootstrapNodes","chainId","networkId","consensusType","consensusAlgorithm","default"],"mappings":"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","file":"static/js/13.03008a17.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.chains = void 0;\nexports.chains = {\n  names: {\n    '1': 'mainnet',\n    '3': 'ropsten',\n    '4': 'rinkeby',\n    '42': 'kovan',\n    '5': 'goerli'\n  },\n  mainnet: require('./mainnet.json'),\n  ropsten: require('./ropsten.json'),\n  rinkeby: require('./rinkeby.json'),\n  kovan: require('./kovan.json'),\n  goerli: require('./goerli.json')\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hardforks = void 0;\nexports.hardforks = [['chainstart', require('./chainstart.json')], ['homestead', require('./homestead.json')], ['dao', require('./dao.json')], ['tangerineWhistle', require('./tangerineWhistle.json')], ['spuriousDragon', require('./spuriousDragon.json')], ['byzantium', require('./byzantium.json')], ['constantinople', require('./constantinople.json')], ['petersburg', require('./petersburg.json')], ['istanbul', require('./istanbul.json')], ['muirGlacier', require('./muirGlacier.json')], ['berlin', require('./berlin.json')]];","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EIPs = void 0;\nexports.EIPs = {\n  2315: require('./2315.json'),\n  2537: require('./2537.json'),\n  2929: require('./2929.json')\n};","/* crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n\n/* vim: set ts=2: */\n\n/*exported CRC32 */\nvar CRC32;\n\n(function (factory) {\n  /*jshint ignore:start */\n\n  /*eslint-disable */\n  if (typeof DO_NOT_EXPORT_CRC === 'undefined') {\n    if ('object' === typeof exports) {\n      factory(exports);\n    } else if ('function' === typeof define && define.amd) {\n      define(function () {\n        var module = {};\n        factory(module);\n        return module;\n      });\n    } else {\n      factory(CRC32 = {});\n    }\n  } else {\n    factory(CRC32 = {});\n  }\n  /*eslint-enable */\n\n  /*jshint ignore:end */\n\n})(function (CRC32) {\n  CRC32.version = '1.2.0';\n  /* see perf/crc32table.js */\n\n  /*global Int32Array */\n\n  function signed_crc_table() {\n    var c = 0,\n        table = new Array(256);\n\n    for (var n = 0; n != 256; ++n) {\n      c = n;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      c = c & 1 ? -306674912 ^ c >>> 1 : c >>> 1;\n      table[n] = c;\n    }\n\n    return typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n  }\n\n  var T = signed_crc_table();\n\n  function crc32_bstr(bstr, seed) {\n    var C = seed ^ -1,\n        L = bstr.length - 1;\n\n    for (var i = 0; i < L;) {\n      C = C >>> 8 ^ T[(C ^ bstr.charCodeAt(i++)) & 0xFF];\n      C = C >>> 8 ^ T[(C ^ bstr.charCodeAt(i++)) & 0xFF];\n    }\n\n    if (i === L) C = C >>> 8 ^ T[(C ^ bstr.charCodeAt(i)) & 0xFF];\n    return C ^ -1;\n  }\n\n  function crc32_buf(buf, seed) {\n    if (buf.length > 10000) return crc32_buf_8(buf, seed);\n    var C = seed ^ -1,\n        L = buf.length - 3;\n\n    for (var i = 0; i < L;) {\n      C = C >>> 8 ^ T[(C ^ buf[i++]) & 0xFF];\n      C = C >>> 8 ^ T[(C ^ buf[i++]) & 0xFF];\n      C = C >>> 8 ^ T[(C ^ buf[i++]) & 0xFF];\n      C = C >>> 8 ^ T[(C ^ buf[i++]) & 0xFF];\n    }\n\n    while (i < L + 3) {\n      C = C >>> 8 ^ T[(C ^ buf[i++]) & 0xFF];\n    }\n\n    return C ^ -1;\n  }\n\n  function crc32_buf_8(buf, seed) {\n    var C = seed ^ -1,\n        L = buf.length - 7;\n\n    for (var i = 0; i < L;) {\n      C = C >>> 8 ^ T[(C ^ buf[i++]) & 0xFF];\n      C = C >>> 8 ^ T[(C ^ buf[i++]) & 0xFF];\n      C = C >>> 8 ^ T[(C ^ buf[i++]) & 0xFF];\n      C = C >>> 8 ^ T[(C ^ buf[i++]) & 0xFF];\n      C = C >>> 8 ^ T[(C ^ buf[i++]) & 0xFF];\n      C = C >>> 8 ^ T[(C ^ buf[i++]) & 0xFF];\n      C = C >>> 8 ^ T[(C ^ buf[i++]) & 0xFF];\n      C = C >>> 8 ^ T[(C ^ buf[i++]) & 0xFF];\n    }\n\n    while (i < L + 7) {\n      C = C >>> 8 ^ T[(C ^ buf[i++]) & 0xFF];\n    }\n\n    return C ^ -1;\n  }\n\n  function crc32_str(str, seed) {\n    var C = seed ^ -1;\n\n    for (var i = 0, L = str.length, c, d; i < L;) {\n      c = str.charCodeAt(i++);\n\n      if (c < 0x80) {\n        C = C >>> 8 ^ T[(C ^ c) & 0xFF];\n      } else if (c < 0x800) {\n        C = C >>> 8 ^ T[(C ^ (192 | c >> 6 & 31)) & 0xFF];\n        C = C >>> 8 ^ T[(C ^ (128 | c & 63)) & 0xFF];\n      } else if (c >= 0xD800 && c < 0xE000) {\n        c = (c & 1023) + 64;\n        d = str.charCodeAt(i++) & 1023;\n        C = C >>> 8 ^ T[(C ^ (240 | c >> 8 & 7)) & 0xFF];\n        C = C >>> 8 ^ T[(C ^ (128 | c >> 2 & 63)) & 0xFF];\n        C = C >>> 8 ^ T[(C ^ (128 | d >> 6 & 15 | (c & 3) << 4)) & 0xFF];\n        C = C >>> 8 ^ T[(C ^ (128 | d & 63)) & 0xFF];\n      } else {\n        C = C >>> 8 ^ T[(C ^ (224 | c >> 12 & 15)) & 0xFF];\n        C = C >>> 8 ^ T[(C ^ (128 | c >> 6 & 63)) & 0xFF];\n        C = C >>> 8 ^ T[(C ^ (128 | c & 63)) & 0xFF];\n      }\n    }\n\n    return C ^ -1;\n  }\n\n  CRC32.table = T; // $FlowIgnore\n\n  CRC32.bstr = crc32_bstr; // $FlowIgnore\n\n  CRC32.buf = crc32_buf; // $FlowIgnore\n\n  CRC32.str = crc32_str;\n});","\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar crc_32_1 = require(\"crc-32\");\n\nvar chains_1 = require(\"./chains\");\n\nvar hardforks_1 = require(\"./hardforks\");\n\nvar eips_1 = require(\"./eips\");\n/**\n * Common class to access chain and hardfork parameters\n */\n\n\nvar Common =\n/** @class */\nfunction () {\n  /**\n   * @constructor\n   */\n  function Common(opts) {\n    this.DEFAULT_HARDFORK = 'istanbul';\n    this._supportedHardforks = [];\n    this._eips = [];\n    this._chainParams = this.setChain(opts.chain);\n    this._hardfork = this.DEFAULT_HARDFORK;\n\n    if (opts.supportedHardforks) {\n      this._supportedHardforks = opts.supportedHardforks;\n    }\n\n    if (opts.hardfork) {\n      this.setHardfork(opts.hardfork);\n    }\n\n    if (opts.eips) {\n      this.setEIPs(opts.eips);\n    }\n  }\n  /**\n   * Creates a Common object for a custom chain, based on a standard one. It uses all the [[Chain]]\n   * params from [[baseChain]] except the ones overridden in [[customChainParams]].\n   *\n   * @param baseChain The name (`mainnet`) or id (`1`) of a standard chain used to base the custom\n   * chain params on.\n   * @param customChainParams The custom parameters of the chain.\n   * @param hardfork String identifier ('byzantium') for hardfork (optional)\n   * @param supportedHardforks Limit parameter returns to the given hardforks (optional)\n   */\n\n\n  Common.forCustomChain = function (baseChain, customChainParams, hardfork, supportedHardforks) {\n    var standardChainParams = Common._getChainParams(baseChain);\n\n    return new Common({\n      chain: __assign(__assign({}, standardChainParams), customChainParams),\n      hardfork: hardfork,\n      supportedHardforks: supportedHardforks\n    });\n  };\n\n  Common._getChainParams = function (chain) {\n    if (typeof chain === 'number') {\n      if (chains_1.chains['names'][chain]) {\n        return chains_1.chains[chains_1.chains['names'][chain]];\n      }\n\n      throw new Error(\"Chain with ID \" + chain + \" not supported\");\n    }\n\n    if (chains_1.chains[chain]) {\n      return chains_1.chains[chain];\n    }\n\n    throw new Error(\"Chain with name \" + chain + \" not supported\");\n  };\n  /**\n   * Sets the chain\n   * @param chain String ('mainnet') or Number (1) chain\n   *     representation. Or, a Dictionary of chain parameters for a private network.\n   * @returns The dictionary with parameters set as chain\n   */\n\n\n  Common.prototype.setChain = function (chain) {\n    var e_1, _a;\n\n    if (typeof chain === 'number' || typeof chain === 'string') {\n      this._chainParams = Common._getChainParams(chain);\n    } else if (typeof chain === 'object') {\n      var required = ['networkId', 'genesis', 'hardforks', 'bootstrapNodes'];\n\n      try {\n        for (var required_1 = __values(required), required_1_1 = required_1.next(); !required_1_1.done; required_1_1 = required_1.next()) {\n          var param = required_1_1.value;\n\n          if (chain[param] === undefined) {\n            throw new Error(\"Missing required chain parameter: \" + param);\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (required_1_1 && !required_1_1.done && (_a = required_1.return)) _a.call(required_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n\n      this._chainParams = chain;\n    } else {\n      throw new Error('Wrong input format');\n    }\n\n    return this._chainParams;\n  };\n  /**\n   * Sets the hardfork to get params for\n   * @param hardfork String identifier (e.g. 'byzantium')\n   */\n\n\n  Common.prototype.setHardfork = function (hardfork) {\n    var e_2, _a;\n\n    if (!this._isSupportedHardfork(hardfork)) {\n      throw new Error(\"Hardfork \" + hardfork + \" not set as supported in supportedHardforks\");\n    }\n\n    var changed = false;\n\n    try {\n      for (var HARDFORK_CHANGES_1 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_1_1 = HARDFORK_CHANGES_1.next(); !HARDFORK_CHANGES_1_1.done; HARDFORK_CHANGES_1_1 = HARDFORK_CHANGES_1.next()) {\n        var hfChanges = HARDFORK_CHANGES_1_1.value;\n\n        if (hfChanges[0] === hardfork) {\n          this._hardfork = hardfork;\n          changed = true;\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (HARDFORK_CHANGES_1_1 && !HARDFORK_CHANGES_1_1.done && (_a = HARDFORK_CHANGES_1.return)) _a.call(HARDFORK_CHANGES_1);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    if (!changed) {\n      throw new Error(\"Hardfork with name \" + hardfork + \" not supported\");\n    }\n  };\n  /**\n   * Sets a new hardfork based on the block number provided\n   * @param blockNumber\n   * @returns The name of the HF set\n   */\n\n\n  Common.prototype.setHardforkByBlockNumber = function (blockNumber) {\n    var e_3, _a;\n\n    var hardfork = 'chainstart';\n\n    try {\n      for (var _b = __values(this.hardforks()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var hf = _c.value;\n        var hardforkBlock = hf.block; // Skip comparison for not applied HFs\n\n        if (hardforkBlock === null) {\n          continue;\n        }\n\n        if (blockNumber >= hardforkBlock) {\n          hardfork = hf.name;\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    this.setHardfork(hardfork);\n    return hardfork;\n  };\n  /**\n   * Internal helper function to choose between hardfork set and hardfork provided as param\n   * @param hardfork Hardfork given to function as a parameter\n   * @returns Hardfork chosen to be used\n   */\n\n\n  Common.prototype._chooseHardfork = function (hardfork, onlySupported) {\n    if (onlySupported === void 0) {\n      onlySupported = true;\n    }\n\n    if (!hardfork) {\n      hardfork = this._hardfork;\n    } else if (onlySupported && !this._isSupportedHardfork(hardfork)) {\n      throw new Error(\"Hardfork \" + hardfork + \" not set as supported in supportedHardforks\");\n    }\n\n    return hardfork;\n  };\n  /**\n   * Internal helper function, returns the params for the given hardfork for the chain set\n   * @param hardfork Hardfork name\n   * @returns Dictionary with hardfork params\n   */\n\n\n  Common.prototype._getHardfork = function (hardfork) {\n    var e_4, _a;\n\n    var hfs = this.hardforks();\n\n    try {\n      for (var hfs_1 = __values(hfs), hfs_1_1 = hfs_1.next(); !hfs_1_1.done; hfs_1_1 = hfs_1.next()) {\n        var hf = hfs_1_1.value;\n        if (hf['name'] === hardfork) return hf;\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (hfs_1_1 && !hfs_1_1.done && (_a = hfs_1.return)) _a.call(hfs_1);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    throw new Error(\"Hardfork \" + hardfork + \" not defined for chain \" + this.chainName());\n  };\n  /**\n   * Internal helper function to check if a hardfork is set to be supported by the library\n   * @param hardfork Hardfork name\n   * @returns True if hardfork is supported\n   */\n\n\n  Common.prototype._isSupportedHardfork = function (hardfork) {\n    var e_5, _a;\n\n    if (this._supportedHardforks.length > 0) {\n      try {\n        for (var _b = __values(this._supportedHardforks), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var supportedHf = _c.value;\n          if (hardfork === supportedHf) return true;\n        }\n      } catch (e_5_1) {\n        e_5 = {\n          error: e_5_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_5) throw e_5.error;\n        }\n      }\n    } else {\n      return true;\n    }\n\n    return false;\n  };\n  /**\n   * Sets the active EIPs\n   * @param eips\n   */\n\n\n  Common.prototype.setEIPs = function (eips) {\n    var e_6, _a;\n\n    if (eips === void 0) {\n      eips = [];\n    }\n\n    try {\n      for (var eips_2 = __values(eips), eips_2_1 = eips_2.next(); !eips_2_1.done; eips_2_1 = eips_2.next()) {\n        var eip = eips_2_1.value;\n\n        if (!(eip in eips_1.EIPs)) {\n          throw new Error(eip + \" not supported\");\n        }\n\n        var minHF = this.gteHardfork(eips_1.EIPs[eip]['minimumHardfork']);\n\n        if (!minHF) {\n          throw new Error(eip + \" cannot be activated on hardfork \" + this.hardfork() + \", minimumHardfork: \" + minHF);\n        }\n      }\n    } catch (e_6_1) {\n      e_6 = {\n        error: e_6_1\n      };\n    } finally {\n      try {\n        if (eips_2_1 && !eips_2_1.done && (_a = eips_2.return)) _a.call(eips_2);\n      } finally {\n        if (e_6) throw e_6.error;\n      }\n    }\n\n    this._eips = eips;\n  };\n  /**\n   * Returns a parameter for the current chain setup\n   *\n   * If the parameter is present in an EIP, the EIP always takes precendence.\n   * Otherwise the parameter if taken from the latest applied HF with\n   * a change on the respective parameter.\n   *\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @returns The value requested or `null` if not found\n   */\n\n\n  Common.prototype.param = function (topic, name) {\n    var e_7, _a; // TODO: consider the case that different active EIPs\n    // can change the same parameter\n\n\n    var value = null;\n\n    try {\n      for (var _b = __values(this._eips), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var eip = _c.value;\n        value = this.paramByEIP(topic, name, eip);\n\n        if (value !== null) {\n          return value;\n        }\n      }\n    } catch (e_7_1) {\n      e_7 = {\n        error: e_7_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_7) throw e_7.error;\n      }\n    }\n\n    return this.paramByHardfork(topic, name, this._hardfork);\n  };\n  /**\n   * Returns the parameter corresponding to a hardfork\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param hardfork Hardfork name\n   * @returns The value requested or `null` if not found\n   */\n\n\n  Common.prototype.paramByHardfork = function (topic, name, hardfork) {\n    var e_8, _a, e_9, _b;\n\n    hardfork = this._chooseHardfork(hardfork);\n    var value = null;\n\n    try {\n      for (var HARDFORK_CHANGES_2 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_2_1 = HARDFORK_CHANGES_2.next(); !HARDFORK_CHANGES_2_1.done; HARDFORK_CHANGES_2_1 = HARDFORK_CHANGES_2.next()) {\n        var hfChanges = HARDFORK_CHANGES_2_1.value; // EIP-referencing HF file (e.g. berlin.json)\n\n        if (hfChanges[1].hasOwnProperty('eips')) {\n          // eslint-disable-line\n          var hfEIPs = hfChanges[1]['eips'];\n\n          try {\n            for (var hfEIPs_1 = (e_9 = void 0, __values(hfEIPs)), hfEIPs_1_1 = hfEIPs_1.next(); !hfEIPs_1_1.done; hfEIPs_1_1 = hfEIPs_1.next()) {\n              var eip = hfEIPs_1_1.value;\n              var valueEIP = this.paramByEIP(topic, name, eip);\n              value = valueEIP !== null ? valueEIP : value;\n            }\n          } catch (e_9_1) {\n            e_9 = {\n              error: e_9_1\n            };\n          } finally {\n            try {\n              if (hfEIPs_1_1 && !hfEIPs_1_1.done && (_b = hfEIPs_1.return)) _b.call(hfEIPs_1);\n            } finally {\n              if (e_9) throw e_9.error;\n            }\n          } // Paramater-inlining HF file (e.g. istanbul.json)\n\n        } else {\n          if (!hfChanges[1][topic]) {\n            throw new Error(\"Topic \" + topic + \" not defined\");\n          }\n\n          if (hfChanges[1][topic][name] !== undefined) {\n            value = hfChanges[1][topic][name].v;\n          }\n        }\n\n        if (hfChanges[0] === hardfork) break;\n      }\n    } catch (e_8_1) {\n      e_8 = {\n        error: e_8_1\n      };\n    } finally {\n      try {\n        if (HARDFORK_CHANGES_2_1 && !HARDFORK_CHANGES_2_1.done && (_a = HARDFORK_CHANGES_2.return)) _a.call(HARDFORK_CHANGES_2);\n      } finally {\n        if (e_8) throw e_8.error;\n      }\n    }\n\n    return value;\n  };\n  /**\n   * Returns a parameter corresponding to an EIP\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param eip Number of the EIP\n   * @returns The value requested or `null` if not found\n   */\n\n\n  Common.prototype.paramByEIP = function (topic, name, eip) {\n    if (!(eip in eips_1.EIPs)) {\n      throw new Error(eip + \" not supported\");\n    }\n\n    var eipParams = eips_1.EIPs[eip];\n\n    if (!(topic in eipParams)) {\n      throw new Error(\"Topic \" + topic + \" not defined\");\n    }\n\n    if (eipParams[topic][name] === undefined) {\n      return null;\n    }\n\n    var value = eipParams[topic][name].v;\n    return value;\n  };\n  /**\n   * Returns a parameter for the hardfork active on block number\n   * @param topic Parameter topic\n   * @param name Parameter name\n   * @param blockNumber Block number\n   */\n\n\n  Common.prototype.paramByBlock = function (topic, name, blockNumber) {\n    var activeHfs = this.activeHardforks(blockNumber);\n    var hardfork = activeHfs[activeHfs.length - 1]['name'];\n    return this.paramByHardfork(topic, name, hardfork);\n  };\n  /**\n   * Checks if set or provided hardfork is active on block number\n   * @param hardfork Hardfork name or null (for HF set)\n   * @param blockNumber\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if HF is active on block number\n   */\n\n\n  Common.prototype.hardforkIsActiveOnBlock = function (hardfork, blockNumber, opts) {\n    opts = opts !== undefined ? opts : {};\n    var onlySupported = opts.onlySupported === undefined ? false : opts.onlySupported;\n    hardfork = this._chooseHardfork(hardfork, onlySupported);\n    var hfBlock = this.hardforkBlock(hardfork);\n    if (hfBlock !== null && blockNumber >= hfBlock) return true;\n    return false;\n  };\n  /**\n   * Alias to hardforkIsActiveOnBlock when hardfork is set\n   * @param blockNumber\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if HF is active on block number\n   */\n\n\n  Common.prototype.activeOnBlock = function (blockNumber, opts) {\n    return this.hardforkIsActiveOnBlock(null, blockNumber, opts);\n  };\n  /**\n   * Sequence based check if given or set HF1 is greater than or equal HF2\n   * @param hardfork1 Hardfork name or null (if set)\n   * @param hardfork2 Hardfork name\n   * @param opts Hardfork options\n   * @returns True if HF1 gte HF2\n   */\n\n\n  Common.prototype.hardforkGteHardfork = function (hardfork1, hardfork2, opts) {\n    var e_10, _a;\n\n    opts = opts !== undefined ? opts : {};\n    var onlyActive = opts.onlyActive === undefined ? false : opts.onlyActive;\n    hardfork1 = this._chooseHardfork(hardfork1, opts.onlySupported);\n    var hardforks;\n\n    if (onlyActive) {\n      hardforks = this.activeHardforks(null, opts);\n    } else {\n      hardforks = this.hardforks();\n    }\n\n    var posHf1 = -1,\n        posHf2 = -1;\n    var index = 0;\n\n    try {\n      for (var hardforks_2 = __values(hardforks), hardforks_2_1 = hardforks_2.next(); !hardforks_2_1.done; hardforks_2_1 = hardforks_2.next()) {\n        var hf = hardforks_2_1.value;\n        if (hf['name'] === hardfork1) posHf1 = index;\n        if (hf['name'] === hardfork2) posHf2 = index;\n        index += 1;\n      }\n    } catch (e_10_1) {\n      e_10 = {\n        error: e_10_1\n      };\n    } finally {\n      try {\n        if (hardforks_2_1 && !hardforks_2_1.done && (_a = hardforks_2.return)) _a.call(hardforks_2);\n      } finally {\n        if (e_10) throw e_10.error;\n      }\n    }\n\n    return posHf1 >= posHf2;\n  };\n  /**\n   * Alias to hardforkGteHardfork when hardfork is set\n   * @param hardfork Hardfork name\n   * @param opts Hardfork options\n   * @returns True if hardfork set is greater than hardfork provided\n   */\n\n\n  Common.prototype.gteHardfork = function (hardfork, opts) {\n    return this.hardforkGteHardfork(null, hardfork, opts);\n  };\n  /**\n   * Checks if given or set hardfork is active on the chain\n   * @param hardfork Hardfork name, optional if HF set\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if hardfork is active on the chain\n   */\n\n\n  Common.prototype.hardforkIsActiveOnChain = function (hardfork, opts) {\n    var e_11, _a;\n\n    opts = opts !== undefined ? opts : {};\n    var onlySupported = opts.onlySupported === undefined ? false : opts.onlySupported;\n    hardfork = this._chooseHardfork(hardfork, onlySupported);\n\n    try {\n      for (var _b = __values(this.hardforks()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var hf = _c.value;\n        if (hf['name'] === hardfork && hf['block'] !== null) return true;\n      }\n    } catch (e_11_1) {\n      e_11 = {\n        error: e_11_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_11) throw e_11.error;\n      }\n    }\n\n    return false;\n  };\n  /**\n   * Returns the active hardfork switches for the current chain\n   * @param blockNumber up to block if provided, otherwise for the whole chain\n   * @param opts Hardfork options (onlyActive unused)\n   * @return Array with hardfork arrays\n   */\n\n\n  Common.prototype.activeHardforks = function (blockNumber, opts) {\n    var e_12, _a;\n\n    opts = opts !== undefined ? opts : {};\n    var activeHardforks = [];\n    var hfs = this.hardforks();\n\n    try {\n      for (var hfs_2 = __values(hfs), hfs_2_1 = hfs_2.next(); !hfs_2_1.done; hfs_2_1 = hfs_2.next()) {\n        var hf = hfs_2_1.value;\n        if (hf['block'] === null) continue;\n        if (blockNumber !== undefined && blockNumber !== null && blockNumber < hf['block']) break;\n        if (opts.onlySupported && !this._isSupportedHardfork(hf['name'])) continue;\n        activeHardforks.push(hf);\n      }\n    } catch (e_12_1) {\n      e_12 = {\n        error: e_12_1\n      };\n    } finally {\n      try {\n        if (hfs_2_1 && !hfs_2_1.done && (_a = hfs_2.return)) _a.call(hfs_2);\n      } finally {\n        if (e_12) throw e_12.error;\n      }\n    }\n\n    return activeHardforks;\n  };\n  /**\n   * Returns the latest active hardfork name for chain or block or throws if unavailable\n   * @param blockNumber up to block if provided, otherwise for the whole chain\n   * @param opts Hardfork options (onlyActive unused)\n   * @return Hardfork name\n   */\n\n\n  Common.prototype.activeHardfork = function (blockNumber, opts) {\n    opts = opts !== undefined ? opts : {};\n    var activeHardforks = this.activeHardforks(blockNumber, opts);\n\n    if (activeHardforks.length > 0) {\n      return activeHardforks[activeHardforks.length - 1]['name'];\n    } else {\n      throw new Error(\"No (supported) active hardfork found\");\n    }\n  };\n  /**\n   * Returns the hardfork change block for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number\n   */\n\n\n  Common.prototype.hardforkBlock = function (hardfork) {\n    hardfork = this._chooseHardfork(hardfork, false);\n    return this._getHardfork(hardfork)['block'];\n  };\n  /**\n   * True if block number provided is the hardfork (given or set) change block\n   * @param blockNumber Number of the block to check\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns True if blockNumber is HF block\n   */\n\n\n  Common.prototype.isHardforkBlock = function (blockNumber, hardfork) {\n    hardfork = this._chooseHardfork(hardfork, false);\n    return this.hardforkBlock(hardfork) === blockNumber;\n  };\n  /**\n   * Returns the change block for the next hardfork after the hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if not available\n   */\n\n\n  Common.prototype.nextHardforkBlock = function (hardfork) {\n    hardfork = this._chooseHardfork(hardfork, false);\n    var hfBlock = this.hardforkBlock(hardfork); // Next fork block number or null if none available\n    // Logic: if accumulator is still null and on the first occurence of\n    // a block greater than the current hfBlock set the accumulator,\n    // pass on the accumulator as the final result from this time on\n\n    var nextHfBlock = this.hardforks().reduce(function (acc, hf) {\n      return hf.block > hfBlock && acc === null ? hf.block : acc;\n    }, null);\n    return nextHfBlock;\n  };\n  /**\n   * True if block number provided is the hardfork change block following the hardfork given or set\n   * @param blockNumber Number of the block to check\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns True if blockNumber is HF block\n   */\n\n\n  Common.prototype.isNextHardforkBlock = function (blockNumber, hardfork) {\n    hardfork = this._chooseHardfork(hardfork, false);\n    return this.nextHardforkBlock(hardfork) === blockNumber;\n  };\n  /**\n   * Internal helper function to calculate a fork hash\n   * @param hardfork Hardfork name\n   * @returns Fork hash as hex string\n   */\n\n\n  Common.prototype._calcForkHash = function (hardfork) {\n    var e_13, _a;\n\n    var genesis = Buffer.from(this.genesis().hash.substr(2), 'hex');\n    var hfBuffer = Buffer.alloc(0);\n    var prevBlock = 0;\n\n    try {\n      for (var _b = __values(this.hardforks()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var hf = _c.value;\n        var block = hf.block; // Skip for chainstart (0), not applied HFs (null) and\n        // when already applied on same block number HFs\n\n        if (block !== 0 && block !== null && block !== prevBlock) {\n          var hfBlockBuffer = Buffer.from(block.toString(16).padStart(16, '0'), 'hex');\n          hfBuffer = Buffer.concat([hfBuffer, hfBlockBuffer]);\n        }\n\n        if (hf.name === hardfork) break;\n        prevBlock = block;\n      }\n    } catch (e_13_1) {\n      e_13 = {\n        error: e_13_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_13) throw e_13.error;\n      }\n    }\n\n    var inputBuffer = Buffer.concat([genesis, hfBuffer]); // CRC32 delivers result as signed (negative) 32-bit integer,\n    // convert to hex string\n\n    var forkhash = new Number(crc_32_1.buf(inputBuffer) >>> 0).toString(16);\n    return \"0x\" + forkhash;\n  };\n  /**\n   * Returns an eth/64 compliant fork hash (EIP-2124)\n   * @param hardfork Hardfork name, optional if HF set\n   */\n\n\n  Common.prototype.forkHash = function (hardfork) {\n    hardfork = this._chooseHardfork(hardfork, false);\n\n    var data = this._getHardfork(hardfork);\n\n    if (data['block'] === null) {\n      var msg = 'No fork hash calculation possible for non-applied or future hardfork';\n      throw new Error(msg);\n    }\n\n    if (data['forkHash'] !== undefined) {\n      return data['forkHash'];\n    }\n\n    return this._calcForkHash(hardfork);\n  };\n  /**\n   *\n   * @param forkHash Fork hash as a hex string\n   * @returns Array with hardfork data (name, block, forkHash)\n   */\n\n\n  Common.prototype.hardforkForForkHash = function (forkHash) {\n    var resArray = this.hardforks().filter(function (hf) {\n      return hf.forkHash === forkHash;\n    });\n    return resArray.length === 1 ? resArray[0] : null;\n  };\n  /**\n   * Returns the Genesis parameters of current chain\n   * @returns Genesis dictionary\n   */\n\n\n  Common.prototype.genesis = function () {\n    return this._chainParams['genesis'];\n  };\n  /**\n   * Returns the hardforks for current chain\n   * @returns {Array} Array with arrays of hardforks\n   */\n\n\n  Common.prototype.hardforks = function () {\n    return this._chainParams['hardforks'];\n  };\n  /**\n   * Returns bootstrap nodes for the current chain\n   * @returns {Dictionary} Dict with bootstrap nodes\n   */\n\n\n  Common.prototype.bootstrapNodes = function () {\n    return this._chainParams['bootstrapNodes'];\n  };\n  /**\n   * Returns the hardfork set\n   * @returns Hardfork name\n   */\n\n\n  Common.prototype.hardfork = function () {\n    return this._hardfork;\n  };\n  /**\n   * Returns the Id of current chain\n   * @returns chain Id\n   */\n\n\n  Common.prototype.chainId = function () {\n    return this._chainParams['chainId'];\n  };\n  /**\n   * Returns the name of current chain\n   * @returns chain name (lower case)\n   */\n\n\n  Common.prototype.chainName = function () {\n    return chains_1.chains['names'][this.chainId()] || this._chainParams['name'];\n  };\n  /**\n   * Returns the Id of current network\n   * @returns network Id\n   */\n\n\n  Common.prototype.networkId = function () {\n    return this._chainParams['networkId'];\n  };\n  /**\n   * Returns the active EIPs\n   * @returns List of EIPs\n   */\n\n\n  Common.prototype.eips = function () {\n    return this._eips;\n  };\n  /**\n   * Returns the consensus type of the network\n   * Possible values: \"pow\"|\"poa\"\n   */\n\n\n  Common.prototype.consensusType = function () {\n    return this._chainParams['consensus']['type'];\n  };\n  /**\n   * Returns the concrete consensus implementation\n   * algorithm or protocol for the network\n   * e.g. \"ethash\" for \"pow\" consensus type or\n   * \"clique\" for \"poa\" consensus type\n   */\n\n\n  Common.prototype.consensusAlgorithm = function () {\n    return this._chainParams['consensus']['algorithm'];\n  };\n\n  return Common;\n}();\n\nexports.default = Common;"],"sourceRoot":""}