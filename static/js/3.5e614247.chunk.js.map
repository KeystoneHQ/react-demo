{"version":3,"sources":["../node_modules/bnc-onboard-staging/node_modules/hash.js/lib/hash/sha/common.js","../node_modules/bnc-onboard-staging/node_modules/hash.js/lib/hash/sha/256.js","../node_modules/bnc-onboard-staging/node_modules/hash.js/lib/hash/sha/512.js","../node_modules/bnc-onboard-staging/node_modules/hash.js/lib/hash/sha.js","../node_modules/bnc-onboard-staging/node_modules/hash.js/lib/hash/sha/1.js","../node_modules/bnc-onboard-staging/node_modules/hash.js/lib/hash/sha/224.js","../node_modules/bnc-onboard-staging/node_modules/hash.js/lib/hash/sha/384.js","../node_modules/bnc-onboard-staging/node_modules/hash.js/lib/hash/ripemd.js","../node_modules/bnc-onboard-staging/node_modules/hash.js/lib/hash/hmac.js","../node_modules/bnc-onboard-staging/node_modules/inherits/inherits_browser.js","../node_modules/bnc-onboard-staging/node_modules/bn.js/lib/bn.js","../node_modules/bnc-onboard-staging/node_modules/minimalistic-assert/index.js","../node_modules/bnc-onboard-staging/node_modules/hash.js/lib/hash.js","../node_modules/bnc-onboard-staging/node_modules/hash.js/lib/hash/utils.js","../node_modules/bnc-onboard-staging/node_modules/hash.js/lib/hash/common.js"],"names":["rotr32","ch32","x","y","z","maj32","p32","exports","ft_1","s","s0_256","s1_256","g0_256","g1_256","utils","common","shaCommon","assert","sum32","sum32_4","sum32_5","BlockHash","sha256_K","SHA256","this","call","h","k","W","Array","inherits","module","blockSize","outSize","hmacStrength","padLength","prototype","_update","msg","start","i","length","a","b","c","d","e","f","g","T1","T2","_digest","enc","toHex32","split32","rotr64_hi","rotr64_lo","shr64_hi","shr64_lo","sum64","sum64_hi","sum64_lo","sum64_4_hi","sum64_4_lo","sum64_5_hi","sum64_5_lo","sha512_K","SHA512","ch64_hi","xh","xl","yh","yl","zh","r","ch64_lo","zl","maj64_hi","maj64_lo","s0_512_hi","s0_512_lo","s1_512_hi","s1_512_lo","g0_512_hi","g0_512_lo","g1_512_hi","g1_512_lo","_prepareBlock","c0_hi","c0_lo","c1_hi","c1_lo","c2_hi","c2_lo","c3_hi","c3_lo","ah","al","bh","bl","ch","cl","dh","dl","eh","el","fh","fl","gh","gl","hh","hl","c4_hi","c4_lo","T1_hi","T1_lo","T2_hi","T2_lo","sha1","sha224","sha256","sha384","sha512","rotl32","sha1_K","SHA1","t","SHA224","slice","SHA384","sum32_3","RIPEMD160","endian","j","K","Kh","ripemd160","A","B","C","D","E","Ah","Bh","Ch","Dh","Eh","T","rh","sh","Hmac","hash","key","Hash","inner","outer","_init","toArray","update","digest","push","Object","create","ctor","superCtor","super_","constructor","value","enumerable","writable","configurable","TempCtor","val","Error","BN","number","base","isBN","negative","words","red","Buffer","wordSize","window","parseHex4Bits","string","index","charCodeAt","parseHexByte","lowerBound","parseBase","str","end","mul","len","Math","min","num","isArray","max","left","right","cmp","_initNumber","_initArray","toString","replace","_parseHex","_parseBase","ceil","w","off","strip","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","dest","clone","_expand","size","_normSign","inspect","zeros","groupSizes","groupBases","smallMulTo","self","out","lo","carry","ncarry","rword","maxJ","padding","groupSize","groupBase","isZero","modn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","ArrayType","byteLength","reqLength","littleEndian","res","q","andln","iushrn","clz32","_countBits","_zeroBits","bitLength","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","mulTo","hncarry","bigMulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","toBitArray","iushln","bits","carryMask","newCarry","ishln","hint","extended","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","name","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","undefined","_strip","input","output","outLen","prev","next","mod3","one","nOne","lpow","inv","wnd","current","currentLen","mont","u","equal","sha","ripemd","hmac","isSurrogatePair","htonl","zero2","zero8","parseInt","toHex","join32","buf","pos","pending","pendingTotal","_delta8","_delta32","concat","_pad","bytes"],"mappings":"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AAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,IAC/Q0E,EAAK,CAAC,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,IAChR3I,EAAI,CAAC,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAC1R4I,EAAK,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GA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","file":"static/js/3.5e614247.chunk.js","sourcesContent":["'use strict';\n\nvar utils = require('../utils');\n\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0) return ch32(x, y, z);\n  if (s === 1 || s === 3) return p32(x, y, z);\n  if (s === 2) return maj32(x, y, z);\n}\n\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return x & y ^ ~x & z;\n}\n\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return x & y ^ x & z ^ y & z;\n}\n\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\n\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\n\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\n\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ x >>> 3;\n}\n\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ x >>> 10;\n}\n\nexports.g1_256 = g1_256;","'use strict';\n\nvar utils = require('../utils');\n\nvar common = require('../common');\n\nvar shaCommon = require('./common');\n\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\nvar BlockHash = common.BlockHash;\nvar sha256_K = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256)) return new SHA256();\n  BlockHash.call(this);\n  this.h = [0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\n\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++) {\n    W[i] = msg[start + i];\n  }\n\n  for (; i < W.length; i++) {\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n  }\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n  assert(this.k.length === W.length);\n\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex') return utils.toHex32(this.h, 'big');else return utils.split32(this.h, 'big');\n};","'use strict';\n\nvar utils = require('../utils');\n\nvar common = require('../common');\n\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\nvar BlockHash = common.BlockHash;\nvar sha512_K = [0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd, 0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc, 0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019, 0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118, 0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe, 0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2, 0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1, 0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694, 0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3, 0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65, 0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483, 0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5, 0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210, 0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4, 0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725, 0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70, 0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926, 0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df, 0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8, 0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b, 0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001, 0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30, 0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910, 0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8, 0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53, 0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8, 0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb, 0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3, 0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60, 0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec, 0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9, 0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b, 0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207, 0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178, 0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6, 0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b, 0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493, 0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c, 0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a, 0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512)) return new SHA512();\n  BlockHash.call(this);\n  this.h = [0x6a09e667, 0xf3bcc908, 0xbb67ae85, 0x84caa73b, 0x3c6ef372, 0xfe94f82b, 0xa54ff53a, 0x5f1d36f1, 0x510e527f, 0xade682d1, 0x9b05688c, 0x2b3e6c1f, 0x1f83d9ab, 0xfb41bd6b, 0x5be0cd19, 0x137e2179];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\n\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W; // 32 x 32bit words\n\n  for (var i = 0; i < 32; i++) {\n    W[i] = msg[start + i];\n  }\n\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]); // i - 2\n\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14]; // i - 7\n\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]); // i - 15\n\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32]; // i - 16\n\n    var c3_lo = W[i - 31];\n    W[i] = sum64_4_hi(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n  assert(this.k.length === W.length);\n\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n    var T1_hi = sum64_5_hi(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo, c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(c0_hi, c0_lo, c1_hi, c1_lo, c2_hi, c2_lo, c3_hi, c3_lo, c4_hi, c4_lo);\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n    hh = gh;\n    hl = gl;\n    gh = fh;\n    gl = fl;\n    fh = eh;\n    fl = el;\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n    dh = ch;\n    dl = cl;\n    ch = bh;\n    cl = bl;\n    bh = ah;\n    bl = al;\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex') return utils.toHex32(this.h, 'big');else return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = xh & yh ^ ~xh & zh;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = xl & yl ^ ~xl & zl;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = xh & yh ^ xh & zh ^ yh & zh;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = xl & yl ^ xl & zl ^ yl & zl;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2); // 34\n\n  var c2_hi = rotr64_hi(xl, xh, 7); // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2); // 34\n\n  var c2_lo = rotr64_lo(xl, xh, 7); // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9); // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9); // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29); // 61\n\n  var c2_hi = shr64_hi(xh, xl, 6);\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0) r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29); // 61\n\n  var c2_lo = shr64_lo(xh, xl, 6);\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0) r += 0x100000000;\n  return r;\n}","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');","'use strict';\n\nvar utils = require('../utils');\n\nvar common = require('../common');\n\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\nvar sha1_K = [0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xCA62C1D6];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1)) return new SHA1();\n  BlockHash.call(this);\n  this.h = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++) {\n    W[i] = msg[start + i];\n  }\n\n  for (; i < W.length; i++) {\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n  }\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex') return utils.toHex32(this.h, 'big');else return utils.split32(this.h, 'big');\n};","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224)) return new SHA224();\n  SHA256.call(this);\n  this.h = [0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939, 0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4];\n}\n\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex') return utils.toHex32(this.h.slice(0, 7), 'big');else return utils.split32(this.h.slice(0, 7), 'big');\n};","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384)) return new SHA384();\n  SHA512.call(this);\n  this.h = [0xcbbb9d5d, 0xc1059ed8, 0x629a292a, 0x367cd507, 0x9159015a, 0x3070dd17, 0x152fecd8, 0xf70e5939, 0x67332667, 0xffc00b31, 0x8eb44a87, 0x68581511, 0xdb0c2e0d, 0x64f98fa7, 0x47b5481d, 0xbefa4fa4];\n}\n\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex') return utils.toHex32(this.h.slice(0, 12), 'big');else return utils.split32(this.h.slice(0, 12), 'big');\n};","'use strict';\n\nvar utils = require('./utils');\n\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160)) return new RIPEMD160();\n  BlockHash.call(this);\n  this.h = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n  this.endian = 'little';\n}\n\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(rotl32(sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)), s[j]), E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(rotl32(sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)), sh[j]), Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex') return utils.toHex32(this.h, 'little');else return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15) return x ^ y ^ z;else if (j <= 31) return x & y | ~x & z;else if (j <= 47) return (x | ~y) ^ z;else if (j <= 63) return x & z | y & ~z;else return x ^ (y | ~z);\n}\n\nfunction K(j) {\n  if (j <= 15) return 0x00000000;else if (j <= 31) return 0x5a827999;else if (j <= 47) return 0x6ed9eba1;else if (j <= 63) return 0x8f1bbcdc;else return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15) return 0x50a28be6;else if (j <= 31) return 0x5c4dd124;else if (j <= 47) return 0x6d703ef3;else if (j <= 63) return 0x7a6d76e9;else return 0x00000000;\n}\n\nvar r = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13];\nvar rh = [5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11];\nvar s = [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6];\nvar sh = [8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11];","'use strict';\n\nvar utils = require('./utils');\n\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac)) return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\n\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize) key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize); // Add padding to key\n\n  for (var i = key.length; i < this.blockSize; i++) {\n    key.push(0);\n  }\n\n  for (i = 0; i < key.length; i++) {\n    key[i] ^= 0x36;\n  }\n\n  this.inner = new this.Hash().update(key); // 0x36 ^ 0x5c = 0x6a\n\n  for (i = 0; i < key.length; i++) {\n    key[i] ^= 0x6a;\n  }\n\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor;\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor;\n\n      var TempCtor = function TempCtor() {};\n\n      TempCtor.prototype = superCtor.prototype;\n      ctor.prototype = new TempCtor();\n      ctor.prototype.constructor = ctor;\n    }\n  };\n}","(function (module, exports) {\n  'use strict'; // Utils\n\n  function assert(val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  } // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n\n\n  function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n\n    var TempCtor = function TempCtor() {};\n\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  } // BN\n\n\n  function BN(number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0; // Reduction context\n\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n  var Buffer;\n\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {}\n\n  BN.isBN = function isBN(num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' && num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max(left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min(left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init(number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber(number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n\n      this.words = [number & 0x3ffffff, number / 0x4000000 & 0x3ffffff, 1];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return; // Reverse the bytes\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray(number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | number[i - 1] << 8 | number[i - 2] << 16;\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | number[i + 1] << 8 | number[i + 2] << 16;\n        this.words[j] |= w << off & 0x3ffffff;\n        this.words[j + 1] = w >>> 26 - off & 0x3ffffff;\n        off += 24;\n\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n\n    return this.strip();\n  };\n\n  function parseHex4Bits(string, index) {\n    var c = string.charCodeAt(index); // 'A' - 'F'\n\n    if (c >= 65 && c <= 70) {\n      return c - 55; // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87; // '0' - '9'\n    } else {\n      return c - 48 & 0xf;\n    }\n  }\n\n  function parseHexByte(string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex(number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    } // 24-bits chunks\n\n\n    var off = 0;\n    var j = 0;\n    var w;\n\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase(str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n      r *= mul; // 'a'\n\n      if (c >= 49) {\n        r += c - 49 + 0xa; // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa; // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase(number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1; // Find length of limb in base\n\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n\n    limbLen--;\n    limbPow = limbPow / base | 0;\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n    var word = 0;\n\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n      this.imuln(limbPow);\n\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy(dest) {\n    dest.words = new Array(this.length);\n\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone() {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand(size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n\n    return this;\n  }; // Remove leading `0` from `this`\n\n\n  BN.prototype.strip = function strip() {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign() {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect() {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n  /*\n   var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n   var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n   */\n\n\n  var zeros = ['', '0', '00', '000', '0000', '00000', '000000', '0000000', '00000000', '000000000', '0000000000', '00000000000', '000000000000', '0000000000000', '00000000000000', '000000000000000', '0000000000000000', '00000000000000000', '000000000000000000', '0000000000000000000', '00000000000000000000', '000000000000000000000', '0000000000000000000000', '00000000000000000000000', '000000000000000000000000', '0000000000000000000000000'];\n  var groupSizes = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5];\n  var groupBases = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];\n\n  BN.prototype.toString = function toString(base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n    var out;\n\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = ((w << off | carry) & 0xffffff).toString(16);\n        carry = w >>> 24 - off & 0xffffff;\n\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n\n        off += 2;\n\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base]; // var groupBase = Math.pow(base, groupSize);\n\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber() {\n    var ret = this.words[0];\n\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + this.words[1] * 0x4000000;\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n\n    return this.negative !== 0 ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON() {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer(endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray(endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike(ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n    var b, i;\n    var q = this.clone();\n\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits(w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits(w) {\n      var t = w;\n      var r = 0;\n\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits(w) {\n    // Short-cut\n    if (w === 0) return 26;\n    var t = w;\n    var r = 0;\n\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n\n    return r;\n  }; // Return number of used bits in a BN\n\n\n  BN.prototype.bitLength = function bitLength() {\n    var w = this.words[this.length - 1];\n\n    var hi = this._countBits(w);\n\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray(num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = bit / 26 | 0;\n      var wbit = bit % 26;\n      w[bit] = (num.words[off] & 1 << wbit) >>> wbit;\n    }\n\n    return w;\n  } // Number of trailing zero bits\n\n\n  BN.prototype.zeroBits = function zeroBits() {\n    if (this.isZero()) return 0;\n    var r = 0;\n\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n\n      r += b;\n      if (b !== 26) break;\n    }\n\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength() {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos(width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos(width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg() {\n    return this.negative !== 0;\n  }; // Return negative clone of `this`\n\n\n  BN.prototype.neg = function neg() {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg() {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  }; // Or `num` with `this` in-place\n\n\n  BN.prototype.iuor = function iuor(num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  }; // Or `num` with `this`\n\n\n  BN.prototype.or = function or(num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor(num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  }; // And `num` with `this` in-place\n\n\n  BN.prototype.iuand = function iuand(num) {\n    // b = min-length(num, this)\n    var b;\n\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  }; // And `num` with `this`\n\n\n  BN.prototype.and = function and(num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand(num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  }; // Xor `num` with `this` in-place\n\n\n  BN.prototype.iuxor = function iuxor(num) {\n    // a.length > b.length\n    var a;\n    var b;\n\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor(num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  }; // Xor `num` with `this`\n\n\n  BN.prototype.xor = function xor(num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor(num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  }; // Not ``this`` with ``width`` bitwidth\n\n\n  BN.prototype.inotn = function inotn(width) {\n    assert(typeof width === 'number' && width >= 0);\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26; // Extend the buffer with leading zeroes\n\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    } // Handle complete words\n\n\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    } // Handle the residue\n\n\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & 0x3ffffff >> 26 - bitsLeft;\n    } // And remove leading zeroes\n\n\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn(width) {\n    return this.clone().inotn(width);\n  }; // Set `bit` of `this`\n\n\n  BN.prototype.setn = function setn(bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var off = bit / 26 | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | 1 << wbit;\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  }; // Add `num` to `this` in-place\n\n\n  BN.prototype.iadd = function iadd(num) {\n    var r; // negative + positive\n\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign(); // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    } // a.length > b.length\n\n\n    var a, b;\n\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++; // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  }; // Add `num` to `this`\n\n\n  BN.prototype.add = function add(num) {\n    var res;\n\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n    return num.clone().iadd(this);\n  }; // Subtract `num` from `this` in-place\n\n\n  BN.prototype.isub = function isub(num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign(); // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    } // At this point both numbers are positive\n\n\n    var cmp = this.cmp(num); // Optimization - zeroify\n\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    } // a > b\n\n\n    var a, b;\n\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    } // Copy rest of the words\n\n\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  }; // Subtract `num` from `this`\n\n\n  BN.prototype.sub = function sub(num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo(self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = self.length + num.length | 0;\n    out.length = len;\n    len = len - 1 | 0; // Peel one iteration (compiler can't do it, because of code complexity)\n\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n    var lo = r & 0x3ffffff;\n    var carry = r / 0x4000000 | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += r / 0x4000000 | 0;\n        rword = r & 0x3ffffff;\n      }\n\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  } // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n\n\n  var comb10MulTo = function comb10MulTo(self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = mid + Math.imul(ah0, bl0) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w0 >>> 26) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = mid + Math.imul(ah1, bl0) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = lo + Math.imul(al0, bl1) | 0;\n    mid = mid + Math.imul(al0, bh1) | 0;\n    mid = mid + Math.imul(ah0, bl1) | 0;\n    hi = hi + Math.imul(ah0, bh1) | 0;\n    var w1 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w1 >>> 26) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = mid + Math.imul(ah2, bl0) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = lo + Math.imul(al1, bl1) | 0;\n    mid = mid + Math.imul(al1, bh1) | 0;\n    mid = mid + Math.imul(ah1, bl1) | 0;\n    hi = hi + Math.imul(ah1, bh1) | 0;\n    lo = lo + Math.imul(al0, bl2) | 0;\n    mid = mid + Math.imul(al0, bh2) | 0;\n    mid = mid + Math.imul(ah0, bl2) | 0;\n    hi = hi + Math.imul(ah0, bh2) | 0;\n    var w2 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w2 >>> 26) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = mid + Math.imul(ah3, bl0) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = lo + Math.imul(al2, bl1) | 0;\n    mid = mid + Math.imul(al2, bh1) | 0;\n    mid = mid + Math.imul(ah2, bl1) | 0;\n    hi = hi + Math.imul(ah2, bh1) | 0;\n    lo = lo + Math.imul(al1, bl2) | 0;\n    mid = mid + Math.imul(al1, bh2) | 0;\n    mid = mid + Math.imul(ah1, bl2) | 0;\n    hi = hi + Math.imul(ah1, bh2) | 0;\n    lo = lo + Math.imul(al0, bl3) | 0;\n    mid = mid + Math.imul(al0, bh3) | 0;\n    mid = mid + Math.imul(ah0, bl3) | 0;\n    hi = hi + Math.imul(ah0, bh3) | 0;\n    var w3 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w3 >>> 26) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = mid + Math.imul(ah4, bl0) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = lo + Math.imul(al3, bl1) | 0;\n    mid = mid + Math.imul(al3, bh1) | 0;\n    mid = mid + Math.imul(ah3, bl1) | 0;\n    hi = hi + Math.imul(ah3, bh1) | 0;\n    lo = lo + Math.imul(al2, bl2) | 0;\n    mid = mid + Math.imul(al2, bh2) | 0;\n    mid = mid + Math.imul(ah2, bl2) | 0;\n    hi = hi + Math.imul(ah2, bh2) | 0;\n    lo = lo + Math.imul(al1, bl3) | 0;\n    mid = mid + Math.imul(al1, bh3) | 0;\n    mid = mid + Math.imul(ah1, bl3) | 0;\n    hi = hi + Math.imul(ah1, bh3) | 0;\n    lo = lo + Math.imul(al0, bl4) | 0;\n    mid = mid + Math.imul(al0, bh4) | 0;\n    mid = mid + Math.imul(ah0, bl4) | 0;\n    hi = hi + Math.imul(ah0, bh4) | 0;\n    var w4 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w4 >>> 26) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = mid + Math.imul(ah5, bl0) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = lo + Math.imul(al4, bl1) | 0;\n    mid = mid + Math.imul(al4, bh1) | 0;\n    mid = mid + Math.imul(ah4, bl1) | 0;\n    hi = hi + Math.imul(ah4, bh1) | 0;\n    lo = lo + Math.imul(al3, bl2) | 0;\n    mid = mid + Math.imul(al3, bh2) | 0;\n    mid = mid + Math.imul(ah3, bl2) | 0;\n    hi = hi + Math.imul(ah3, bh2) | 0;\n    lo = lo + Math.imul(al2, bl3) | 0;\n    mid = mid + Math.imul(al2, bh3) | 0;\n    mid = mid + Math.imul(ah2, bl3) | 0;\n    hi = hi + Math.imul(ah2, bh3) | 0;\n    lo = lo + Math.imul(al1, bl4) | 0;\n    mid = mid + Math.imul(al1, bh4) | 0;\n    mid = mid + Math.imul(ah1, bl4) | 0;\n    hi = hi + Math.imul(ah1, bh4) | 0;\n    lo = lo + Math.imul(al0, bl5) | 0;\n    mid = mid + Math.imul(al0, bh5) | 0;\n    mid = mid + Math.imul(ah0, bl5) | 0;\n    hi = hi + Math.imul(ah0, bh5) | 0;\n    var w5 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w5 >>> 26) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = mid + Math.imul(ah6, bl0) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = lo + Math.imul(al5, bl1) | 0;\n    mid = mid + Math.imul(al5, bh1) | 0;\n    mid = mid + Math.imul(ah5, bl1) | 0;\n    hi = hi + Math.imul(ah5, bh1) | 0;\n    lo = lo + Math.imul(al4, bl2) | 0;\n    mid = mid + Math.imul(al4, bh2) | 0;\n    mid = mid + Math.imul(ah4, bl2) | 0;\n    hi = hi + Math.imul(ah4, bh2) | 0;\n    lo = lo + Math.imul(al3, bl3) | 0;\n    mid = mid + Math.imul(al3, bh3) | 0;\n    mid = mid + Math.imul(ah3, bl3) | 0;\n    hi = hi + Math.imul(ah3, bh3) | 0;\n    lo = lo + Math.imul(al2, bl4) | 0;\n    mid = mid + Math.imul(al2, bh4) | 0;\n    mid = mid + Math.imul(ah2, bl4) | 0;\n    hi = hi + Math.imul(ah2, bh4) | 0;\n    lo = lo + Math.imul(al1, bl5) | 0;\n    mid = mid + Math.imul(al1, bh5) | 0;\n    mid = mid + Math.imul(ah1, bl5) | 0;\n    hi = hi + Math.imul(ah1, bh5) | 0;\n    lo = lo + Math.imul(al0, bl6) | 0;\n    mid = mid + Math.imul(al0, bh6) | 0;\n    mid = mid + Math.imul(ah0, bl6) | 0;\n    hi = hi + Math.imul(ah0, bh6) | 0;\n    var w6 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w6 >>> 26) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = mid + Math.imul(ah7, bl0) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = lo + Math.imul(al6, bl1) | 0;\n    mid = mid + Math.imul(al6, bh1) | 0;\n    mid = mid + Math.imul(ah6, bl1) | 0;\n    hi = hi + Math.imul(ah6, bh1) | 0;\n    lo = lo + Math.imul(al5, bl2) | 0;\n    mid = mid + Math.imul(al5, bh2) | 0;\n    mid = mid + Math.imul(ah5, bl2) | 0;\n    hi = hi + Math.imul(ah5, bh2) | 0;\n    lo = lo + Math.imul(al4, bl3) | 0;\n    mid = mid + Math.imul(al4, bh3) | 0;\n    mid = mid + Math.imul(ah4, bl3) | 0;\n    hi = hi + Math.imul(ah4, bh3) | 0;\n    lo = lo + Math.imul(al3, bl4) | 0;\n    mid = mid + Math.imul(al3, bh4) | 0;\n    mid = mid + Math.imul(ah3, bl4) | 0;\n    hi = hi + Math.imul(ah3, bh4) | 0;\n    lo = lo + Math.imul(al2, bl5) | 0;\n    mid = mid + Math.imul(al2, bh5) | 0;\n    mid = mid + Math.imul(ah2, bl5) | 0;\n    hi = hi + Math.imul(ah2, bh5) | 0;\n    lo = lo + Math.imul(al1, bl6) | 0;\n    mid = mid + Math.imul(al1, bh6) | 0;\n    mid = mid + Math.imul(ah1, bl6) | 0;\n    hi = hi + Math.imul(ah1, bh6) | 0;\n    lo = lo + Math.imul(al0, bl7) | 0;\n    mid = mid + Math.imul(al0, bh7) | 0;\n    mid = mid + Math.imul(ah0, bl7) | 0;\n    hi = hi + Math.imul(ah0, bh7) | 0;\n    var w7 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w7 >>> 26) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = mid + Math.imul(ah8, bl0) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = lo + Math.imul(al7, bl1) | 0;\n    mid = mid + Math.imul(al7, bh1) | 0;\n    mid = mid + Math.imul(ah7, bl1) | 0;\n    hi = hi + Math.imul(ah7, bh1) | 0;\n    lo = lo + Math.imul(al6, bl2) | 0;\n    mid = mid + Math.imul(al6, bh2) | 0;\n    mid = mid + Math.imul(ah6, bl2) | 0;\n    hi = hi + Math.imul(ah6, bh2) | 0;\n    lo = lo + Math.imul(al5, bl3) | 0;\n    mid = mid + Math.imul(al5, bh3) | 0;\n    mid = mid + Math.imul(ah5, bl3) | 0;\n    hi = hi + Math.imul(ah5, bh3) | 0;\n    lo = lo + Math.imul(al4, bl4) | 0;\n    mid = mid + Math.imul(al4, bh4) | 0;\n    mid = mid + Math.imul(ah4, bl4) | 0;\n    hi = hi + Math.imul(ah4, bh4) | 0;\n    lo = lo + Math.imul(al3, bl5) | 0;\n    mid = mid + Math.imul(al3, bh5) | 0;\n    mid = mid + Math.imul(ah3, bl5) | 0;\n    hi = hi + Math.imul(ah3, bh5) | 0;\n    lo = lo + Math.imul(al2, bl6) | 0;\n    mid = mid + Math.imul(al2, bh6) | 0;\n    mid = mid + Math.imul(ah2, bl6) | 0;\n    hi = hi + Math.imul(ah2, bh6) | 0;\n    lo = lo + Math.imul(al1, bl7) | 0;\n    mid = mid + Math.imul(al1, bh7) | 0;\n    mid = mid + Math.imul(ah1, bl7) | 0;\n    hi = hi + Math.imul(ah1, bh7) | 0;\n    lo = lo + Math.imul(al0, bl8) | 0;\n    mid = mid + Math.imul(al0, bh8) | 0;\n    mid = mid + Math.imul(ah0, bl8) | 0;\n    hi = hi + Math.imul(ah0, bh8) | 0;\n    var w8 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w8 >>> 26) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = mid + Math.imul(ah9, bl0) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = lo + Math.imul(al8, bl1) | 0;\n    mid = mid + Math.imul(al8, bh1) | 0;\n    mid = mid + Math.imul(ah8, bl1) | 0;\n    hi = hi + Math.imul(ah8, bh1) | 0;\n    lo = lo + Math.imul(al7, bl2) | 0;\n    mid = mid + Math.imul(al7, bh2) | 0;\n    mid = mid + Math.imul(ah7, bl2) | 0;\n    hi = hi + Math.imul(ah7, bh2) | 0;\n    lo = lo + Math.imul(al6, bl3) | 0;\n    mid = mid + Math.imul(al6, bh3) | 0;\n    mid = mid + Math.imul(ah6, bl3) | 0;\n    hi = hi + Math.imul(ah6, bh3) | 0;\n    lo = lo + Math.imul(al5, bl4) | 0;\n    mid = mid + Math.imul(al5, bh4) | 0;\n    mid = mid + Math.imul(ah5, bl4) | 0;\n    hi = hi + Math.imul(ah5, bh4) | 0;\n    lo = lo + Math.imul(al4, bl5) | 0;\n    mid = mid + Math.imul(al4, bh5) | 0;\n    mid = mid + Math.imul(ah4, bl5) | 0;\n    hi = hi + Math.imul(ah4, bh5) | 0;\n    lo = lo + Math.imul(al3, bl6) | 0;\n    mid = mid + Math.imul(al3, bh6) | 0;\n    mid = mid + Math.imul(ah3, bl6) | 0;\n    hi = hi + Math.imul(ah3, bh6) | 0;\n    lo = lo + Math.imul(al2, bl7) | 0;\n    mid = mid + Math.imul(al2, bh7) | 0;\n    mid = mid + Math.imul(ah2, bl7) | 0;\n    hi = hi + Math.imul(ah2, bh7) | 0;\n    lo = lo + Math.imul(al1, bl8) | 0;\n    mid = mid + Math.imul(al1, bh8) | 0;\n    mid = mid + Math.imul(ah1, bl8) | 0;\n    hi = hi + Math.imul(ah1, bh8) | 0;\n    lo = lo + Math.imul(al0, bl9) | 0;\n    mid = mid + Math.imul(al0, bh9) | 0;\n    mid = mid + Math.imul(ah0, bl9) | 0;\n    hi = hi + Math.imul(ah0, bh9) | 0;\n    var w9 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w9 >>> 26) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = mid + Math.imul(ah9, bl1) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = lo + Math.imul(al8, bl2) | 0;\n    mid = mid + Math.imul(al8, bh2) | 0;\n    mid = mid + Math.imul(ah8, bl2) | 0;\n    hi = hi + Math.imul(ah8, bh2) | 0;\n    lo = lo + Math.imul(al7, bl3) | 0;\n    mid = mid + Math.imul(al7, bh3) | 0;\n    mid = mid + Math.imul(ah7, bl3) | 0;\n    hi = hi + Math.imul(ah7, bh3) | 0;\n    lo = lo + Math.imul(al6, bl4) | 0;\n    mid = mid + Math.imul(al6, bh4) | 0;\n    mid = mid + Math.imul(ah6, bl4) | 0;\n    hi = hi + Math.imul(ah6, bh4) | 0;\n    lo = lo + Math.imul(al5, bl5) | 0;\n    mid = mid + Math.imul(al5, bh5) | 0;\n    mid = mid + Math.imul(ah5, bl5) | 0;\n    hi = hi + Math.imul(ah5, bh5) | 0;\n    lo = lo + Math.imul(al4, bl6) | 0;\n    mid = mid + Math.imul(al4, bh6) | 0;\n    mid = mid + Math.imul(ah4, bl6) | 0;\n    hi = hi + Math.imul(ah4, bh6) | 0;\n    lo = lo + Math.imul(al3, bl7) | 0;\n    mid = mid + Math.imul(al3, bh7) | 0;\n    mid = mid + Math.imul(ah3, bl7) | 0;\n    hi = hi + Math.imul(ah3, bh7) | 0;\n    lo = lo + Math.imul(al2, bl8) | 0;\n    mid = mid + Math.imul(al2, bh8) | 0;\n    mid = mid + Math.imul(ah2, bl8) | 0;\n    hi = hi + Math.imul(ah2, bh8) | 0;\n    lo = lo + Math.imul(al1, bl9) | 0;\n    mid = mid + Math.imul(al1, bh9) | 0;\n    mid = mid + Math.imul(ah1, bl9) | 0;\n    hi = hi + Math.imul(ah1, bh9) | 0;\n    var w10 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w10 >>> 26) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = mid + Math.imul(ah9, bl2) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = lo + Math.imul(al8, bl3) | 0;\n    mid = mid + Math.imul(al8, bh3) | 0;\n    mid = mid + Math.imul(ah8, bl3) | 0;\n    hi = hi + Math.imul(ah8, bh3) | 0;\n    lo = lo + Math.imul(al7, bl4) | 0;\n    mid = mid + Math.imul(al7, bh4) | 0;\n    mid = mid + Math.imul(ah7, bl4) | 0;\n    hi = hi + Math.imul(ah7, bh4) | 0;\n    lo = lo + Math.imul(al6, bl5) | 0;\n    mid = mid + Math.imul(al6, bh5) | 0;\n    mid = mid + Math.imul(ah6, bl5) | 0;\n    hi = hi + Math.imul(ah6, bh5) | 0;\n    lo = lo + Math.imul(al5, bl6) | 0;\n    mid = mid + Math.imul(al5, bh6) | 0;\n    mid = mid + Math.imul(ah5, bl6) | 0;\n    hi = hi + Math.imul(ah5, bh6) | 0;\n    lo = lo + Math.imul(al4, bl7) | 0;\n    mid = mid + Math.imul(al4, bh7) | 0;\n    mid = mid + Math.imul(ah4, bl7) | 0;\n    hi = hi + Math.imul(ah4, bh7) | 0;\n    lo = lo + Math.imul(al3, bl8) | 0;\n    mid = mid + Math.imul(al3, bh8) | 0;\n    mid = mid + Math.imul(ah3, bl8) | 0;\n    hi = hi + Math.imul(ah3, bh8) | 0;\n    lo = lo + Math.imul(al2, bl9) | 0;\n    mid = mid + Math.imul(al2, bh9) | 0;\n    mid = mid + Math.imul(ah2, bl9) | 0;\n    hi = hi + Math.imul(ah2, bh9) | 0;\n    var w11 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w11 >>> 26) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = mid + Math.imul(ah9, bl3) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = lo + Math.imul(al8, bl4) | 0;\n    mid = mid + Math.imul(al8, bh4) | 0;\n    mid = mid + Math.imul(ah8, bl4) | 0;\n    hi = hi + Math.imul(ah8, bh4) | 0;\n    lo = lo + Math.imul(al7, bl5) | 0;\n    mid = mid + Math.imul(al7, bh5) | 0;\n    mid = mid + Math.imul(ah7, bl5) | 0;\n    hi = hi + Math.imul(ah7, bh5) | 0;\n    lo = lo + Math.imul(al6, bl6) | 0;\n    mid = mid + Math.imul(al6, bh6) | 0;\n    mid = mid + Math.imul(ah6, bl6) | 0;\n    hi = hi + Math.imul(ah6, bh6) | 0;\n    lo = lo + Math.imul(al5, bl7) | 0;\n    mid = mid + Math.imul(al5, bh7) | 0;\n    mid = mid + Math.imul(ah5, bl7) | 0;\n    hi = hi + Math.imul(ah5, bh7) | 0;\n    lo = lo + Math.imul(al4, bl8) | 0;\n    mid = mid + Math.imul(al4, bh8) | 0;\n    mid = mid + Math.imul(ah4, bl8) | 0;\n    hi = hi + Math.imul(ah4, bh8) | 0;\n    lo = lo + Math.imul(al3, bl9) | 0;\n    mid = mid + Math.imul(al3, bh9) | 0;\n    mid = mid + Math.imul(ah3, bl9) | 0;\n    hi = hi + Math.imul(ah3, bh9) | 0;\n    var w12 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w12 >>> 26) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = mid + Math.imul(ah9, bl4) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = lo + Math.imul(al8, bl5) | 0;\n    mid = mid + Math.imul(al8, bh5) | 0;\n    mid = mid + Math.imul(ah8, bl5) | 0;\n    hi = hi + Math.imul(ah8, bh5) | 0;\n    lo = lo + Math.imul(al7, bl6) | 0;\n    mid = mid + Math.imul(al7, bh6) | 0;\n    mid = mid + Math.imul(ah7, bl6) | 0;\n    hi = hi + Math.imul(ah7, bh6) | 0;\n    lo = lo + Math.imul(al6, bl7) | 0;\n    mid = mid + Math.imul(al6, bh7) | 0;\n    mid = mid + Math.imul(ah6, bl7) | 0;\n    hi = hi + Math.imul(ah6, bh7) | 0;\n    lo = lo + Math.imul(al5, bl8) | 0;\n    mid = mid + Math.imul(al5, bh8) | 0;\n    mid = mid + Math.imul(ah5, bl8) | 0;\n    hi = hi + Math.imul(ah5, bh8) | 0;\n    lo = lo + Math.imul(al4, bl9) | 0;\n    mid = mid + Math.imul(al4, bh9) | 0;\n    mid = mid + Math.imul(ah4, bl9) | 0;\n    hi = hi + Math.imul(ah4, bh9) | 0;\n    var w13 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w13 >>> 26) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = mid + Math.imul(ah9, bl5) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = lo + Math.imul(al8, bl6) | 0;\n    mid = mid + Math.imul(al8, bh6) | 0;\n    mid = mid + Math.imul(ah8, bl6) | 0;\n    hi = hi + Math.imul(ah8, bh6) | 0;\n    lo = lo + Math.imul(al7, bl7) | 0;\n    mid = mid + Math.imul(al7, bh7) | 0;\n    mid = mid + Math.imul(ah7, bl7) | 0;\n    hi = hi + Math.imul(ah7, bh7) | 0;\n    lo = lo + Math.imul(al6, bl8) | 0;\n    mid = mid + Math.imul(al6, bh8) | 0;\n    mid = mid + Math.imul(ah6, bl8) | 0;\n    hi = hi + Math.imul(ah6, bh8) | 0;\n    lo = lo + Math.imul(al5, bl9) | 0;\n    mid = mid + Math.imul(al5, bh9) | 0;\n    mid = mid + Math.imul(ah5, bl9) | 0;\n    hi = hi + Math.imul(ah5, bh9) | 0;\n    var w14 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w14 >>> 26) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = mid + Math.imul(ah9, bl6) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = lo + Math.imul(al8, bl7) | 0;\n    mid = mid + Math.imul(al8, bh7) | 0;\n    mid = mid + Math.imul(ah8, bl7) | 0;\n    hi = hi + Math.imul(ah8, bh7) | 0;\n    lo = lo + Math.imul(al7, bl8) | 0;\n    mid = mid + Math.imul(al7, bh8) | 0;\n    mid = mid + Math.imul(ah7, bl8) | 0;\n    hi = hi + Math.imul(ah7, bh8) | 0;\n    lo = lo + Math.imul(al6, bl9) | 0;\n    mid = mid + Math.imul(al6, bh9) | 0;\n    mid = mid + Math.imul(ah6, bl9) | 0;\n    hi = hi + Math.imul(ah6, bh9) | 0;\n    var w15 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w15 >>> 26) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = mid + Math.imul(ah9, bl7) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = lo + Math.imul(al8, bl8) | 0;\n    mid = mid + Math.imul(al8, bh8) | 0;\n    mid = mid + Math.imul(ah8, bl8) | 0;\n    hi = hi + Math.imul(ah8, bh8) | 0;\n    lo = lo + Math.imul(al7, bl9) | 0;\n    mid = mid + Math.imul(al7, bh9) | 0;\n    mid = mid + Math.imul(ah7, bl9) | 0;\n    hi = hi + Math.imul(ah7, bh9) | 0;\n    var w16 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w16 >>> 26) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = mid + Math.imul(ah9, bl8) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = lo + Math.imul(al8, bl9) | 0;\n    mid = mid + Math.imul(al8, bh9) | 0;\n    mid = mid + Math.imul(ah8, bl9) | 0;\n    hi = hi + Math.imul(ah8, bh9) | 0;\n    var w17 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w17 >>> 26) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = mid + Math.imul(ah9, bl9) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (c + lo | 0) + ((mid & 0x1fff) << 13) | 0;\n    c = (hi + (mid >>> 13) | 0) + (w18 >>> 26) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n\n    return out;\n  }; // Polyfill comb\n\n\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo(self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n    var carry = 0;\n    var hncarry = 0;\n\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n        var lo = r & 0x3ffffff;\n        ncarry = ncarry + (r / 0x4000000 | 0) | 0;\n        lo = lo + rword | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = ncarry + (lo >>> 26) | 0;\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo(self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo(num, out) {\n    var res;\n    var len = this.length + num.length;\n\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  }; // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n\n  function FFTM(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT(N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  }; // Returns binary-reversed representation of `x`\n\n\n  FFTM.prototype.revBin = function revBin(x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n    var rb = 0;\n\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << l - i - 1;\n      x >>= 1;\n    }\n\n    return rb;\n  }; // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n\n\n  FFTM.prototype.permute = function permute(rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform(rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n          var rx = rtwdf_ * ro - itwdf_ * io;\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n          /* jshint maxdepth : false */\n\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b(n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate(rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n      t = iws[i];\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b(ws, N) {\n    var carry = 0;\n\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 + Math.round(ws[2 * i] / N) + carry;\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b(ws, len, rws, N) {\n    var carry = 0;\n\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n      rws[2 * i] = carry & 0x1fff;\n      carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff;\n      carry = carry >>> 13;\n    } // Pad with zeroes\n\n\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub(N) {\n    var ph = new Array(N);\n\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp(x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n    var rmws = out.words;\n    rmws.length = N;\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  }; // Multiply `this` by `num`\n\n\n  BN.prototype.mul = function mul(num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  }; // Multiply employing FFT\n\n\n  BN.prototype.mulf = function mulf(num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  }; // In-place Multiplication\n\n\n  BN.prototype.imul = function imul(num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000); // Carry\n\n    var carry = 0;\n\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += w / 0x4000000 | 0; // NOTE: lo is 27bit maximum\n\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln(num) {\n    return this.clone().imuln(num);\n  }; // `this` * `this`\n\n\n  BN.prototype.sqr = function sqr() {\n    return this.mul(this);\n  }; // `this` * `this` in-place\n\n\n  BN.prototype.isqr = function isqr() {\n    return this.imul(this.clone());\n  }; // Math.pow(`this`, `num`)\n\n\n  BN.prototype.pow = function pow(num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1); // Skip leading zeroes\n\n    var res = this;\n\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  }; // Shift-left in-place\n\n\n  BN.prototype.iushln = function iushln(bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = 0x3ffffff >>> 26 - r << 26 - r;\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = (this.words[i] | 0) - newCarry << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> 26 - r;\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln(bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  }; // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n\n\n  BN.prototype.iushrn = function iushrn(bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n\n    if (hint) {\n      h = (hint - hint % 26) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n    var maskedWords = extended;\n    h -= s;\n    h = Math.max(0, h); // Extended mode, copy masked part\n\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {// No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = carry << 26 - r | word >>> r;\n      carry = word & mask;\n    } // Push carried bits as a mask\n\n\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn(bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  }; // Shift-left\n\n\n  BN.prototype.shln = function shln(bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln(bits) {\n    return this.clone().iushln(bits);\n  }; // Shift-right\n\n\n  BN.prototype.shrn = function shrn(bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn(bits) {\n    return this.clone().iushrn(bits);\n  }; // Test if n bit is set\n\n\n  BN.prototype.testn = function testn(bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n    if (this.length <= s) return false; // Check bit and return\n\n    var w = this.words[s];\n    return !!(w & q);\n  }; // Return only lowers bits of number (in-place)\n\n\n  BN.prototype.imaskn = function imaskn(bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ 0x3ffffff >>> r << r;\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  }; // Return only lowers bits of number\n\n\n  BN.prototype.maskn = function maskn(bits) {\n    return this.clone().imaskn(bits);\n  }; // Add plain number `num` to `this`\n\n\n  BN.prototype.iaddn = function iaddn(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num); // Possible sign change\n\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    } // Add without checks\n\n\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn(num) {\n    this.words[0] += num; // Carry\n\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n\n    this.length = Math.max(this.length, i + 1);\n    return this;\n  }; // Subtract plain number `num` from `this`\n\n\n  BN.prototype.isubn = function isubn(num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn(num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn(num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs() {\n    this.negative = 0;\n    return this;\n  };\n\n  BN.prototype.abs = function abs() {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul(num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - (right / 0x4000000 | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip(); // Subtraction overflow\n\n    assert(carry === -1);\n    carry = 0;\n\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n\n    this.negative = 1;\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv(num, mode) {\n    var shift = this.length - num.length;\n    var a = this.clone();\n    var b = num; // Normalize\n\n    var bhi = b.words[b.length - 1] | 0;\n\n    var bhiBits = this._countBits(bhi);\n\n    shift = 26 - bhiBits;\n\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    } // Initialize quotient\n\n\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n\n    if (diff.negative === 0) {\n      a = diff;\n\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 + (a.words[b.length + j - 1] | 0); // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n\n      qj = Math.min(qj / bhi | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n\n        a._ishlnsubmul(b, 1, j);\n\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n\n    if (q) {\n      q.strip();\n    }\n\n    a.strip(); // Denormalize\n\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  }; // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n\n\n  BN.prototype.divmod = function divmod(num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    } // Both numbers are positive at this point\n    // Strip both numbers to approximate shift value\n\n\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    } // Very short reduction\n\n\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  }; // Find `this` / `num`\n\n\n  BN.prototype.div = function div(num) {\n    return this.divmod(num, 'div', false).div;\n  }; // Find `this` % `num`\n\n\n  BN.prototype.mod = function mod(num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod(num) {\n    return this.divmod(num, 'mod', true).mod;\n  }; // Find Round(`this` / `num`)\n\n\n  BN.prototype.divRound = function divRound(num) {\n    var dm = this.divmod(num); // Fast case - exact division\n\n    if (dm.mod.isZero()) return dm.div;\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half); // Round down\n\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div; // Round up\n\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn(num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n    var acc = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  }; // In-place division by number\n\n\n  BN.prototype.idivn = function idivn(num) {\n    assert(num <= 0x3ffffff);\n    var carry = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = w / num | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn(num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd(p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    } // A * x + B * y = x\n\n\n    var A = new BN(1);\n    var B = new BN(0); // C * x + D * y = y\n\n    var C = new BN(0);\n    var D = new BN(1);\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1) {\n        ;\n      }\n\n      if (i > 0) {\n        x.iushrn(i);\n\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1) {\n        ;\n      }\n\n      if (j > 0) {\n        y.iushrn(j);\n\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  }; // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n\n\n  BN.prototype._invmp = function _invmp(p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1) {\n        ;\n      }\n\n      if (i > 0) {\n        a.iushrn(i);\n\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1) {\n        ;\n      }\n\n      if (j > 0) {\n        b.iushrn(j);\n\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd(num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0; // Remove common factor of two\n\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  }; // Invert number in the field F(num)\n\n\n  BN.prototype.invm = function invm(num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven() {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd() {\n    return (this.words[0] & 1) === 1;\n  }; // And first word and num\n\n\n  BN.prototype.andln = function andln(num) {\n    return this.words[0] & num;\n  }; // Increment at the bit position in-line\n\n\n  BN.prototype.bincn = function bincn(bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r; // Fast case: bit is much higher than all existing words\n\n    if (this.length <= s) {\n      this._expand(s + 1);\n\n      this.words[s] |= q;\n      return this;\n    } // Add bit and propagate, if needed\n\n\n    var carry = q;\n\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero() {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn(num) {\n    var negative = num < 0;\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n    this.strip();\n    var res;\n\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  }; // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n\n\n  BN.prototype.cmp = function cmp(num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  }; // Unsigned comparison\n\n\n  BN.prototype.ucmp = function ucmp(num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n    var res = 0;\n\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n      if (a === b) continue;\n\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n\n      break;\n    }\n\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn(num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt(num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten(num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte(num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn(num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt(num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten(num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte(num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn(num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq(num) {\n    return this.cmp(num) === 0;\n  }; //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n\n\n  BN.red = function red(num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed(ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed() {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed(ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed(ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd(num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd(num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub(num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub(num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl(num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul(num) {\n    assert(this.red, 'redMul works only with red numbers');\n\n    this.red._verify2(this, num);\n\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul(num) {\n    assert(this.red, 'redMul works only with red numbers');\n\n    this.red._verify2(this, num);\n\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr() {\n    assert(this.red, 'redSqr works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr() {\n    assert(this.red, 'redISqr works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.isqr(this);\n  }; // Square root over p\n\n\n  BN.prototype.redSqrt = function redSqrt() {\n    assert(this.red, 'redSqrt works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm() {\n    assert(this.red, 'redInvm works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.invm(this);\n  }; // Return negative clone of `this` % `red modulo`\n\n\n  BN.prototype.redNeg = function redNeg() {\n    assert(this.red, 'redNeg works only with red numbers');\n\n    this.red._verify1(this);\n\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow(num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n\n    this.red._verify1(this);\n\n    return this.red.pow(this, num);\n  }; // Prime numbers with efficient reduction\n\n\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  }; // Pseudo-Mersenne prime\n\n  function MPrime(name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp() {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce(num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split(input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK(num) {\n    return num.imul(this.k);\n  };\n\n  function K256() {\n    MPrime.call(this, 'k256', 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split(input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n    var outLen = Math.min(input.length, 9);\n\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    } // Shift by 9 limbs\n\n\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = (next & mask) << 4 | prev >>> 22;\n      prev = next;\n    }\n\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK(num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2; // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n\n    var lo = 0;\n\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + (lo / 0x4000000 | 0);\n    } // Fast length reduction\n\n\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n\n    return num;\n  };\n\n  function P224() {\n    MPrime.call(this, 'p224', 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n\n  inherits(P224, MPrime);\n\n  function P192() {\n    MPrime.call(this, 'p192', 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n\n  inherits(P192, MPrime);\n\n  function P25519() {\n    // 2 ^ 255 - 19\n    MPrime.call(this, '25519', '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK(num) {\n    // K = 0x13\n    var carry = 0;\n\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n      num.words[i] = lo;\n      carry = hi;\n    }\n\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n\n    return num;\n  }; // Exported mostly for testing purposes, use plain name instead\n\n\n  BN._prime = function prime(name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n    var prime;\n\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n\n    primes[name] = prime;\n    return prime;\n  }; //\n  // Base reduction engine\n  //\n\n\n  function Red(m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1(a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2(a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red, 'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod(a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg(a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add(a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd(a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n\n    return res;\n  };\n\n  Red.prototype.sub = function sub(a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub(a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n\n    return res;\n  };\n\n  Red.prototype.shl = function shl(a, num) {\n    this._verify1(a);\n\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul(a, b) {\n    this._verify2(a, b);\n\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul(a, b) {\n    this._verify2(a, b);\n\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr(a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr(a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt(a) {\n    if (a.isZero()) return a.clone();\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1); // Fast case\n\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    } // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n\n\n    var q = this.m.subn(1);\n    var s = 0;\n\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n\n    assert(!q.isZero());\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg(); // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm(a) {\n    var inv = a._invmp(this.m);\n\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow(a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = word >> j & 1;\n\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo(num) {\n    var r = num.umod(this.m);\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom(num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  }; //\n  // Montgomery method engine\n  //\n\n\n  BN.mont = function mont(num) {\n    return new Mont(num);\n  };\n\n  function Mont(m) {\n    Red.call(this, m);\n    this.shift = this.m.bitLength();\n\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - this.shift % 26;\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo(num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom(num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul(a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul(a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm(a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val) throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r) throw new Error(msg || 'Assertion failed: ' + l + ' != ' + r);\n};","var hash = exports;\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac'); // Proxy hash functions to the main object\n\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;","'use strict';\n\nvar assert = require('minimalistic-assert');\n\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg)) return msg.slice();\n  if (!msg) return [];\n  var res = [];\n\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = c >> 6 | 192;\n          res[p++] = c & 63 | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = c >> 18 | 240;\n          res[p++] = c >> 12 & 63 | 128;\n          res[p++] = c >> 6 & 63 | 128;\n          res[p++] = c & 63 | 128;\n        } else {\n          res[p++] = c >> 12 | 224;\n          res[p++] = c >> 6 & 63 | 128;\n          res[p++] = c & 63 | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0) msg = '0' + msg;\n\n      for (i = 0; i < msg.length; i += 2) {\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n      }\n    }\n  } else {\n    for (i = 0; i < msg.length; i++) {\n      res[i] = msg[i] | 0;\n    }\n  }\n\n  return res;\n}\n\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n\n  for (var i = 0; i < msg.length; i++) {\n    res += zero2(msg[i].toString(16));\n  }\n\n  return res;\n}\n\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = w >>> 24 | w >>> 8 & 0xff00 | w << 8 & 0xff0000 | (w & 0xff) << 24;\n  return res >>> 0;\n}\n\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little') w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n\n  return res;\n}\n\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1) return '0' + word;else return word;\n}\n\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7) return '0' + word;else if (word.length === 6) return '00' + word;else if (word.length === 5) return '000' + word;else if (word.length === 4) return '0000' + word;else if (word.length === 3) return '00000' + word;else if (word.length === 2) return '000000' + word;else if (word.length === 1) return '0000000' + word;else return word;\n}\n\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big') w = msg[k] << 24 | msg[k + 1] << 16 | msg[k + 2] << 8 | msg[k + 3];else w = msg[k + 3] << 24 | msg[k + 2] << 16 | msg[k + 1] << 8 | msg[k];\n    res[i] = w >>> 0;\n  }\n\n  return res;\n}\n\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = m >>> 16 & 0xff;\n      res[k + 2] = m >>> 8 & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = m >>> 16 & 0xff;\n      res[k + 1] = m >>> 8 & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n\n  return res;\n}\n\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return w >>> b | w << 32 - b;\n}\n\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return w << b | w >>> 32 - b;\n}\n\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return a + b >>> 0;\n}\n\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return a + b + c >>> 0;\n}\n\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return a + b + c + d >>> 0;\n}\n\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return a + b + c + d + e >>> 0;\n}\n\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n  var lo = al + bl >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\n\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = al + bl >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\n\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\n\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = lo + bl >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = lo + cl >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = lo + dl >>> 0;\n  carry += lo < dl ? 1 : 0;\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\n\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\n\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = lo + bl >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = lo + cl >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = lo + dl >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = lo + el >>> 0;\n  carry += lo < el ? 1 : 0;\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\n\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n  return lo >>> 0;\n}\n\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = al << 32 - num | ah >>> num;\n  return r >>> 0;\n}\n\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = ah << 32 - num | al >>> num;\n  return r >>> 0;\n}\n\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\n\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = ah << 32 - num | al >>> num;\n  return r >>> 0;\n}\n\nexports.shr64_lo = shr64_lo;","'use strict';\n\nvar utils = require('./utils');\n\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\n\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending) this.pending = msg;else this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length; // Enough data, try updating\n\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending; // Process pending data in blocks\n\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0) this.pending = null;\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n\n    for (var i = 0; i < msg.length; i += this._delta32) {\n      this._update(msg, i, i + this._delta32);\n    }\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - (len + this.padLength) % bytes;\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n\n  for (var i = 1; i < k; i++) {\n    res[i] = 0;\n  } // Append length\n\n\n  len <<= 3;\n\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++) {\n      res[i++] = 0;\n    }\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = len >>> 24 & 0xff;\n    res[i++] = len >>> 16 & 0xff;\n    res[i++] = len >>> 8 & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = len >>> 8 & 0xff;\n    res[i++] = len >>> 16 & 0xff;\n    res[i++] = len >>> 24 & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++) {\n      res[i++] = 0;\n    }\n  }\n\n  return res;\n};"],"sourceRoot":""}