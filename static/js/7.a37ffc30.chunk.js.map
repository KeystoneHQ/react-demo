{"version":3,"sources":["../node_modules/ethereumjs-common/dist/index.js","../node_modules/ethereumjs-common/dist/chains/index.js","../node_modules/ethereumjs-common/dist/hardforks/index.js"],"names":["__assign","this","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","defineProperty","exports","value","chains_1","hardforks_1","Common","chain","hardfork","supportedHardforks","_chainParams","setChain","_hardfork","_supportedHardforks","undefined","setHardfork","forCustomChain","baseChain","customChainParams","standardChainParams","_getChainParams","chains","Error","_i","required_1","param","_isSupportedHardfork","changed","hardforkChanges_1","hardforks","_chooseHardfork","onlySupported","_getHardfork","hfs_1","hf","chainName","_a","topic","name","hardforkChanges_2","hfChanges","v","paramByBlock","blockNumber","activeHfs","activeHardforks","hardforkIsActiveOnBlock","opts","hfBlock","hardforkBlock","activeOnBlock","hardforkGteHardfork","hardfork1","hardfork2","onlyActive","posHf1","posHf2","index","hardforks_2","gteHardfork","hardforkIsActiveOnChain","hfs_2","push","activeHardfork","isHardforkBlock","consensus","finality","genesis","bootstrapNodes","chainId","networkId","default","names","mainnet","ropsten","rinkeby","kovan","goerli"],"mappings":"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","file":"static/js/7.a37ffc30.chunk.js","sourcesContent":["\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar chains_1 = require(\"./chains\");\n\nvar hardforks_1 = require(\"./hardforks\");\n/**\n * Common class to access chain and hardfork parameters\n */\n\n\nvar Common =\n/** @class */\nfunction () {\n  /**\n   * @constructor\n   * @param chain String ('mainnet') or Number (1) chain\n   * @param hardfork String identifier ('byzantium') for hardfork (optional)\n   * @param supportedHardforks Limit parameter returns to the given hardforks (optional)\n   */\n  function Common(chain, hardfork, supportedHardforks) {\n    this._chainParams = this.setChain(chain);\n    this._hardfork = null;\n    this._supportedHardforks = supportedHardforks === undefined ? [] : supportedHardforks;\n\n    if (hardfork) {\n      this.setHardfork(hardfork);\n    }\n  }\n  /**\n   * Creates a Common object for a custom chain, based on a standard one. It uses all the [[Chain]]\n   * params from [[baseChain]] except the ones overridden in [[customChainParams]].\n   *\n   * @param baseChain The name (`mainnet`) or id (`1`) of a standard chain used to base the custom\n   * chain params on.\n   * @param customChainParams The custom parameters of the chain.\n   * @param hardfork String identifier ('byzantium') for hardfork (optional)\n   * @param supportedHardforks Limit parameter returns to the given hardforks (optional)\n   */\n\n\n  Common.forCustomChain = function (baseChain, customChainParams, hardfork, supportedHardforks) {\n    var standardChainParams = Common._getChainParams(baseChain);\n\n    return new Common(__assign(__assign({}, standardChainParams), customChainParams), hardfork, supportedHardforks);\n  };\n\n  Common._getChainParams = function (chain) {\n    if (typeof chain === 'number') {\n      if (chains_1.chains['names'][chain]) {\n        return chains_1.chains[chains_1.chains['names'][chain]];\n      }\n\n      throw new Error(\"Chain with ID \" + chain + \" not supported\");\n    }\n\n    if (chains_1.chains[chain]) {\n      return chains_1.chains[chain];\n    }\n\n    throw new Error(\"Chain with name \" + chain + \" not supported\");\n  };\n  /**\n   * Sets the chain\n   * @param chain String ('mainnet') or Number (1) chain\n   *     representation. Or, a Dictionary of chain parameters for a private network.\n   * @returns The dictionary with parameters set as chain\n   */\n\n\n  Common.prototype.setChain = function (chain) {\n    if (typeof chain === 'number' || typeof chain === 'string') {\n      this._chainParams = Common._getChainParams(chain);\n    } else if (typeof chain === 'object') {\n      var required = ['networkId', 'genesis', 'hardforks', 'bootstrapNodes'];\n\n      for (var _i = 0, required_1 = required; _i < required_1.length; _i++) {\n        var param = required_1[_i];\n\n        if (chain[param] === undefined) {\n          throw new Error(\"Missing required chain parameter: \" + param);\n        }\n      }\n\n      this._chainParams = chain;\n    } else {\n      throw new Error('Wrong input format');\n    }\n\n    return this._chainParams;\n  };\n  /**\n   * Sets the hardfork to get params for\n   * @param hardfork String identifier ('byzantium')\n   */\n\n\n  Common.prototype.setHardfork = function (hardfork) {\n    if (!this._isSupportedHardfork(hardfork)) {\n      throw new Error(\"Hardfork \" + hardfork + \" not set as supported in supportedHardforks\");\n    }\n\n    var changed = false;\n\n    for (var _i = 0, hardforkChanges_1 = hardforks_1.hardforks; _i < hardforkChanges_1.length; _i++) {\n      var hfChanges = hardforkChanges_1[_i];\n\n      if (hfChanges[0] === hardfork) {\n        this._hardfork = hardfork;\n        changed = true;\n      }\n    }\n\n    if (!changed) {\n      throw new Error(\"Hardfork with name \" + hardfork + \" not supported\");\n    }\n  };\n  /**\n   * Internal helper function to choose between hardfork set and hardfork provided as param\n   * @param hardfork Hardfork given to function as a parameter\n   * @returns Hardfork chosen to be used\n   */\n\n\n  Common.prototype._chooseHardfork = function (hardfork, onlySupported) {\n    onlySupported = onlySupported === undefined ? true : onlySupported;\n\n    if (!hardfork) {\n      if (!this._hardfork) {\n        throw new Error('Method called with neither a hardfork set nor provided by param');\n      } else {\n        hardfork = this._hardfork;\n      }\n    } else if (onlySupported && !this._isSupportedHardfork(hardfork)) {\n      throw new Error(\"Hardfork \" + hardfork + \" not set as supported in supportedHardforks\");\n    }\n\n    return hardfork;\n  };\n  /**\n   * Internal helper function, returns the params for the given hardfork for the chain set\n   * @param hardfork Hardfork name\n   * @returns Dictionary with hardfork params\n   */\n\n\n  Common.prototype._getHardfork = function (hardfork) {\n    var hfs = this.hardforks();\n\n    for (var _i = 0, hfs_1 = hfs; _i < hfs_1.length; _i++) {\n      var hf = hfs_1[_i];\n      if (hf['name'] === hardfork) return hf;\n    }\n\n    throw new Error(\"Hardfork \" + hardfork + \" not defined for chain \" + this.chainName());\n  };\n  /**\n   * Internal helper function to check if a hardfork is set to be supported by the library\n   * @param hardfork Hardfork name\n   * @returns True if hardfork is supported\n   */\n\n\n  Common.prototype._isSupportedHardfork = function (hardfork) {\n    if (this._supportedHardforks.length > 0) {\n      for (var _i = 0, _a = this._supportedHardforks; _i < _a.length; _i++) {\n        var supportedHf = _a[_i];\n        if (hardfork === supportedHf) return true;\n      }\n    } else {\n      return true;\n    }\n\n    return false;\n  };\n  /**\n   * Returns the parameter corresponding to a hardfork\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow', 'casper', 'sharding')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param hardfork Hardfork name, optional if hardfork set\n   */\n\n\n  Common.prototype.param = function (topic, name, hardfork) {\n    hardfork = this._chooseHardfork(hardfork);\n    var value;\n\n    for (var _i = 0, hardforkChanges_2 = hardforks_1.hardforks; _i < hardforkChanges_2.length; _i++) {\n      var hfChanges = hardforkChanges_2[_i];\n\n      if (!hfChanges[1][topic]) {\n        throw new Error(\"Topic \" + topic + \" not defined\");\n      }\n\n      if (hfChanges[1][topic][name] !== undefined) {\n        value = hfChanges[1][topic][name].v;\n      }\n\n      if (hfChanges[0] === hardfork) break;\n    }\n\n    if (value === undefined) {\n      throw new Error(topic + \" value for \" + name + \" not found\");\n    }\n\n    return value;\n  };\n  /**\n   * Returns a parameter for the hardfork active on block number\n   * @param topic Parameter topic\n   * @param name Parameter name\n   * @param blockNumber Block number\n   */\n\n\n  Common.prototype.paramByBlock = function (topic, name, blockNumber) {\n    var activeHfs = this.activeHardforks(blockNumber);\n    var hardfork = activeHfs[activeHfs.length - 1]['name'];\n    return this.param(topic, name, hardfork);\n  };\n  /**\n   * Checks if set or provided hardfork is active on block number\n   * @param hardfork Hardfork name or null (for HF set)\n   * @param blockNumber\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if HF is active on block number\n   */\n\n\n  Common.prototype.hardforkIsActiveOnBlock = function (hardfork, blockNumber, opts) {\n    opts = opts !== undefined ? opts : {};\n    var onlySupported = opts.onlySupported === undefined ? false : opts.onlySupported;\n    hardfork = this._chooseHardfork(hardfork, onlySupported);\n    var hfBlock = this.hardforkBlock(hardfork);\n    if (hfBlock !== null && blockNumber >= hfBlock) return true;\n    return false;\n  };\n  /**\n   * Alias to hardforkIsActiveOnBlock when hardfork is set\n   * @param blockNumber\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if HF is active on block number\n   */\n\n\n  Common.prototype.activeOnBlock = function (blockNumber, opts) {\n    return this.hardforkIsActiveOnBlock(null, blockNumber, opts);\n  };\n  /**\n   * Sequence based check if given or set HF1 is greater than or equal HF2\n   * @param hardfork1 Hardfork name or null (if set)\n   * @param hardfork2 Hardfork name\n   * @param opts Hardfork options\n   * @returns True if HF1 gte HF2\n   */\n\n\n  Common.prototype.hardforkGteHardfork = function (hardfork1, hardfork2, opts) {\n    opts = opts !== undefined ? opts : {};\n    var onlyActive = opts.onlyActive === undefined ? false : opts.onlyActive;\n    hardfork1 = this._chooseHardfork(hardfork1, opts.onlySupported);\n    var hardforks;\n\n    if (onlyActive) {\n      hardforks = this.activeHardforks(null, opts);\n    } else {\n      hardforks = this.hardforks();\n    }\n\n    var posHf1 = -1,\n        posHf2 = -1;\n    var index = 0;\n\n    for (var _i = 0, hardforks_2 = hardforks; _i < hardforks_2.length; _i++) {\n      var hf = hardforks_2[_i];\n      if (hf['name'] === hardfork1) posHf1 = index;\n      if (hf['name'] === hardfork2) posHf2 = index;\n      index += 1;\n    }\n\n    return posHf1 >= posHf2;\n  };\n  /**\n   * Alias to hardforkGteHardfork when hardfork is set\n   * @param hardfork Hardfork name\n   * @param opts Hardfork options\n   * @returns True if hardfork set is greater than hardfork provided\n   */\n\n\n  Common.prototype.gteHardfork = function (hardfork, opts) {\n    return this.hardforkGteHardfork(null, hardfork, opts);\n  };\n  /**\n   * Checks if given or set hardfork is active on the chain\n   * @param hardfork Hardfork name, optional if HF set\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if hardfork is active on the chain\n   */\n\n\n  Common.prototype.hardforkIsActiveOnChain = function (hardfork, opts) {\n    opts = opts !== undefined ? opts : {};\n    var onlySupported = opts.onlySupported === undefined ? false : opts.onlySupported;\n    hardfork = this._chooseHardfork(hardfork, onlySupported);\n\n    for (var _i = 0, _a = this.hardforks(); _i < _a.length; _i++) {\n      var hf = _a[_i];\n      if (hf['name'] === hardfork && hf['block'] !== null) return true;\n    }\n\n    return false;\n  };\n  /**\n   * Returns the active hardfork switches for the current chain\n   * @param blockNumber up to block if provided, otherwise for the whole chain\n   * @param opts Hardfork options (onlyActive unused)\n   * @return Array with hardfork arrays\n   */\n\n\n  Common.prototype.activeHardforks = function (blockNumber, opts) {\n    opts = opts !== undefined ? opts : {};\n    var activeHardforks = [];\n    var hfs = this.hardforks();\n\n    for (var _i = 0, hfs_2 = hfs; _i < hfs_2.length; _i++) {\n      var hf = hfs_2[_i];\n      if (hf['block'] === null) continue;\n      if (blockNumber !== undefined && blockNumber !== null && blockNumber < hf['block']) break;\n      if (opts.onlySupported && !this._isSupportedHardfork(hf['name'])) continue;\n      activeHardforks.push(hf);\n    }\n\n    return activeHardforks;\n  };\n  /**\n   * Returns the latest active hardfork name for chain or block or throws if unavailable\n   * @param blockNumber up to block if provided, otherwise for the whole chain\n   * @param opts Hardfork options (onlyActive unused)\n   * @return Hardfork name\n   */\n\n\n  Common.prototype.activeHardfork = function (blockNumber, opts) {\n    opts = opts !== undefined ? opts : {};\n    var activeHardforks = this.activeHardforks(blockNumber, opts);\n\n    if (activeHardforks.length > 0) {\n      return activeHardforks[activeHardforks.length - 1]['name'];\n    } else {\n      throw new Error(\"No (supported) active hardfork found\");\n    }\n  };\n  /**\n   * Returns the hardfork change block for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number\n   */\n\n\n  Common.prototype.hardforkBlock = function (hardfork) {\n    hardfork = this._chooseHardfork(hardfork, false);\n    return this._getHardfork(hardfork)['block'];\n  };\n  /**\n   * True if block number provided is the hardfork (given or set) change block of the current chain\n   * @param blockNumber Number of the block to check\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns True if blockNumber is HF block\n   */\n\n\n  Common.prototype.isHardforkBlock = function (blockNumber, hardfork) {\n    hardfork = this._chooseHardfork(hardfork, false);\n\n    if (this.hardforkBlock(hardfork) === blockNumber) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  /**\n   * Provide the consensus type for the hardfork set or provided as param\n   * @param hardfork Hardfork name, optional if hardfork set\n   * @returns Consensus type (e.g. 'pow', 'poa')\n   */\n\n\n  Common.prototype.consensus = function (hardfork) {\n    hardfork = this._chooseHardfork(hardfork);\n    return this._getHardfork(hardfork)['consensus'];\n  };\n  /**\n   * Provide the finality type for the hardfork set or provided as param\n   * @param {String} hardfork Hardfork name, optional if hardfork set\n   * @returns {String} Finality type (e.g. 'pos', null of no finality)\n   */\n\n\n  Common.prototype.finality = function (hardfork) {\n    hardfork = this._chooseHardfork(hardfork);\n    return this._getHardfork(hardfork)['finality'];\n  };\n  /**\n   * Returns the Genesis parameters of current chain\n   * @returns Genesis dictionary\n   */\n\n\n  Common.prototype.genesis = function () {\n    return this._chainParams['genesis'];\n  };\n  /**\n   * Returns the hardforks for current chain\n   * @returns {Array} Array with arrays of hardforks\n   */\n\n\n  Common.prototype.hardforks = function () {\n    return this._chainParams['hardforks'];\n  };\n  /**\n   * Returns bootstrap nodes for the current chain\n   * @returns {Dictionary} Dict with bootstrap nodes\n   */\n\n\n  Common.prototype.bootstrapNodes = function () {\n    return this._chainParams['bootstrapNodes'];\n  };\n  /**\n   * Returns the hardfork set\n   * @returns Hardfork name\n   */\n\n\n  Common.prototype.hardfork = function () {\n    return this._hardfork;\n  };\n  /**\n   * Returns the Id of current chain\n   * @returns chain Id\n   */\n\n\n  Common.prototype.chainId = function () {\n    return this._chainParams['chainId'];\n  };\n  /**\n   * Returns the name of current chain\n   * @returns chain name (lower case)\n   */\n\n\n  Common.prototype.chainName = function () {\n    return chains_1.chains['names'][this.chainId()] || this._chainParams['name'];\n  };\n  /**\n   * Returns the Id of current network\n   * @returns network Id\n   */\n\n\n  Common.prototype.networkId = function () {\n    return this._chainParams['networkId'];\n  };\n\n  return Common;\n}();\n\nexports.default = Common;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.chains = void 0;\nexports.chains = {\n  names: {\n    '1': 'mainnet',\n    '3': 'ropsten',\n    '4': 'rinkeby',\n    '42': 'kovan',\n    '5': 'goerli'\n  },\n  mainnet: require('./mainnet.json'),\n  ropsten: require('./ropsten.json'),\n  rinkeby: require('./rinkeby.json'),\n  kovan: require('./kovan.json'),\n  goerli: require('./goerli.json')\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hardforks = void 0;\nexports.hardforks = [['chainstart', require('./chainstart.json')], ['homestead', require('./homestead.json')], ['dao', require('./dao.json')], ['tangerineWhistle', require('./tangerineWhistle.json')], ['spuriousDragon', require('./spuriousDragon.json')], ['byzantium', require('./byzantium.json')], ['constantinople', require('./constantinople.json')], ['petersburg', require('./petersburg.json')], ['istanbul', require('./istanbul.json')], ['muirGlacier', require('./muirGlacier.json')]];"],"sourceRoot":""}