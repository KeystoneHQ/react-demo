{"version":3,"sources":["../../onboard/dist/esm/trezor-865a59ed.js"],"names":["_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","push","value","length","err","_iterableToArrayLimit","_unsupportedIterableToArray","TypeError","_nonIterableRest","_toConsumableArray","_arrayLikeToArray","_arrayWithoutHoles","iter","from","_iterableToArray","_nonIterableSpread","o","minLen","n","Object","prototype","toString","slice","constructor","name","test","len","arr2","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","undefined","trezorProvider","_x2","_trezorProvider","mark","_callee13","options","TrezorConnectLibrary","EthereumTx","ethUtil","_yield$import","createProvider","_yield$import2","generateAddresses","isValidPath","TrezorConnect","DEVICE_EVENT","DEVICE","TREZOR_DEFAULT_PATH","networkId","email","appUrl","rpcUrl","BigNumber","networkName","resetWalletState","dPath","addressToPath","enabled","customPath","account","provider","disconnect","setPath","_setPath","isCustomPath","enable","getAddress","_getAddress","addresses","setPrimaryAccount","getPublicKey","_getPublicKey","getPrimaryAddress","getMoreAccounts","_getMoreAccounts","_getAccounts","_getAccounts2","getBalances","getBalance","trezorSignTransaction","_signTransaction","_signTransaction2","_signMessage","_signMessage2","wrap","_context13","prev","_callee12","message","_","address","path","_context12","size","entries","abrupt","ethereumSignMessage","stripHexPrefix","data","hex","response","success","payload","toChecksumAddress","Error","signature","concat","stop","_x9","_callee11","transactionData","transaction","trezorResult","_context11","values","Transaction","chain","sent","v","r","s","serialize","_x8","nonce","gasPrice","gas","to","ethereumSignTransaction","gasLimit","chainId","sendAsync","jsonrpc","method","params","id","e","res","result","all","map","_ref3","_callee5","balance","_context5","_x7","_callee10","getMore","_context10","t0","forEach","_ref4","set","_x6","_callee9","accounts","_context9","_callee8","_context8","coin","publicKey","chainCode","serializedPath","accountIndex","findIndex","_ref","unshift","splice","Map","keys","_callee7","errorMsg","_context7","ethereumGetAddress","showOnTrezor","_x5","_callee6","custom","_context6","_x3","_x4","manifest","getAccounts","callback","signTransaction","processMessage","messageData","processPersonalMessage","signMessage","signPersonalMessage","on","event","type","DISCONNECT","disconnected","walletName","send","preferred","label","iconSrc","svg","wallet","_wallet","_callee4","helpers","_context4","connect","get","_get","_callee","_context","network","_get2","_callee2","_context2","_get3","_callee3","_context3","_x","desktop","mobile","osExclusions"],"mappings":"0IAAA,2BAEA,SAASA,EAAeC,EAAKC,GAC3B,OAqCF,SAAyBD,GACvB,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EAtCxBI,CAAgBJ,IAOzB,SAA+BA,EAAKC,GAClC,IAAII,EAAKL,IAA0B,qBAAXM,QAA0BN,EAAIM,OAAOC,WAAaP,EAAI,eAE9E,GAAU,MAANK,EAAY,OAChB,IAIIG,EAAIC,EAJJC,EAAO,GACPC,GAAK,EACLC,GAAK,EAIT,IACE,IAAKP,EAAKA,EAAGQ,KAAKb,KAAQW,GAAMH,EAAKH,EAAGS,QAAQC,QAC9CL,EAAKM,KAAKR,EAAGS,QAEThB,GAAKS,EAAKQ,SAAWjB,GAH4BU,GAAK,IAK5D,MAAOQ,GACPP,GAAK,EACLH,EAAKU,EACL,QACA,IACOR,GAAsB,MAAhBN,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIO,EAAI,MAAMH,GAIlB,OAAOC,EAlCwBU,CAAsBpB,EAAKC,IAAMoB,EAA4BrB,EAAKC,IAGnG,WACE,MAAM,IAAIqB,UAAU,6IAJmFC,GAyCzG,SAASC,EAAmBxB,GAC1B,OAoBF,SAA4BA,GAC1B,GAAIE,MAAMC,QAAQH,GAAM,OAAOyB,EAAkBzB,GArB1C0B,CAAmB1B,IAgB5B,SAA0B2B,GACxB,GAAsB,qBAAXrB,QAAmD,MAAzBqB,EAAKrB,OAAOC,WAA2C,MAAtBoB,EAAK,cAAuB,OAAOzB,MAAM0B,KAAKD,GAjBlFE,CAAiB7B,IAAQqB,EAA4BrB,IAGzF,WACE,MAAM,IAAIsB,UAAU,wIAJ2EQ,GAOjG,SAAST,EAA4BU,EAAGC,GACtC,GAAKD,EAAL,CACA,GAAiB,kBAANA,EAAgB,OAAON,EAAkBM,EAAGC,GACvD,IAAIC,EAAIC,OAAOC,UAAUC,SAASvB,KAAKkB,GAAGM,MAAM,GAAI,GAEpD,MADU,WAANJ,GAAkBF,EAAEO,cAAaL,EAAIF,EAAEO,YAAYC,MAC7C,QAANN,GAAqB,QAANA,EAAoB/B,MAAM0B,KAAKG,GACxC,cAANE,GAAqB,2CAA2CO,KAAKP,GAAWR,EAAkBM,EAAGC,QAAzG,GAWF,SAASP,EAAkBzB,EAAKyC,IACnB,MAAPA,GAAeA,EAAMzC,EAAIkB,UAAQuB,EAAMzC,EAAIkB,QAE/C,IAAK,IAAIjB,EAAI,EAAGyC,EAAO,IAAIxC,MAAMuC,GAAMxC,EAAIwC,EAAKxC,IAC9CyC,EAAKzC,GAAKD,EAAIC,GAGhB,OAAOyC,EAGT,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBjC,EAAQkC,EAAKlC,MACjB,MAAOmC,GAEP,YADAN,EAAOM,GAILD,EAAKpC,KACP8B,EAAQ5B,GAERoC,QAAQR,QAAQ5B,GAAOqC,KAAKP,EAAOC,GAIvC,SAASO,EAAkBC,GACzB,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUR,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAM9B,GACb0B,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQ/B,GAGlE,SAAS+B,EAAO7B,GACdwB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAAS7B,GAGnE4B,OAAMe,OAkJZ,SAASC,EAAeC,GACtB,OAAOC,EAAgBJ,MAAMH,KAAME,WAGrC,SAASK,IA6lBP,OA5lBAA,EAAkBV,EAAgC,IAAoBW,MAAK,SAASC,EAAUC,GAC5F,IAAIC,EAAsBC,EAAYC,EAASC,EAAeC,EAAgBC,EAAgBC,EAAmBC,EAAaC,EAAeC,EAAcC,EAAQC,EAAqBC,EAAWC,EAAOC,EAAQC,EAAQC,EAAWC,EAAaC,EAAkBC,EAAOC,EAAeC,EAASC,EAAYC,EAASC,EAAUC,EAAYC,EAASC,EAAUC,EAAcC,EAAQC,EAAYC,EAAaC,EAAWC,EAAmBC,EAAcC,EAAeC,EAAmBC,EAAiBC,EAAkBC,EAAcC,EAAeC,EAAaC,EAAYC,EAAuBC,EAAkBC,EAAmBC,EAAcC,GAEjoB,OAAO,IAAoBC,MAAK,SAAoBC,GAClD,OACE,OAAQA,EAAWC,KAAOD,EAAWxG,MACnC,KAAK,EAqeH,OApeAsG,GAAgB,WA4Cd,OA3CAA,GAAgB7D,EAAgC,IAAoBW,MAAK,SAASsD,EAAUC,GAC1F,IAAIC,EAAGC,EAASC,EAEhB,OAAO,IAAoBP,MAAK,SAAoBQ,GAClD,OACE,OAAQA,EAAWN,KAAOM,EAAW/G,MACnC,KAAK,EACH,GAA6B,IAAvB2E,EAAcqC,KAAa,CAC/BD,EAAW/G,KAAO,EAClB,MAIF,OADA+G,EAAW/G,KAAO,EACXoF,IAET,KAAK,EAEH,OADAwB,EAAI3H,EAAeyB,EAAmBiE,EAAcsC,WAAW,GAAI,GAAIJ,EAAUD,EAAE,GAAIE,EAAOF,EAAE,GACzFG,EAAWG,OAAO,SAAU,IAAI3E,SAAQ,SAAUR,EAASC,GAChE+B,EAAcoD,oBAAoB,CAChCL,KAAMA,EACNH,QAASlD,EAAQ2D,eAAeT,EAAQU,MACxCC,KAAK,IACJ9E,MAAK,SAAU+E,GAChB,GAAIA,EAASC,QAAS,CAChBD,EAASE,QAAQZ,UAAYpD,EAAQiE,kBAAkBb,IACzD7E,EAAO,IAAI2F,MAAM,6CAGnB,IAAIC,EAAY,KAAKC,OAAON,EAASE,QAAQG,WAC7C7F,EAAQ6F,QAER5F,EAAO,IAAI2F,MAAMJ,EAASE,SAAWF,EAASE,QAAQnF,OAAS,gDAKvE,KAAK,EACL,IAAK,MACH,OAAOyE,EAAWe,UAGvBpB,QAEgB3D,MAAMH,KAAME,YAGnCuD,EAAe,SAAuB0B,GACpC,OAAOzB,GAAcvD,MAAMH,KAAME,YAGnCsD,EAAoB,WA+ClB,OA9CAA,EAAoB3D,EAAgC,IAAoBW,MAAK,SAAS4E,EAAUC,GAC9F,IAAInB,EAAMoB,EAAaC,EAAcP,EACrC,OAAO,IAAoBrB,MAAK,SAAoB6B,GAClD,OACE,OAAQA,EAAW3B,KAAO2B,EAAWpI,MACnC,KAAK,EACH,GAA6B,IAAvB2E,EAAcqC,KAAa,CAC/BoB,EAAWpI,KAAO,EAClB,MAIF,OADAoI,EAAWpI,KAAO,EACXoF,IAET,KAAK,EAMH,OALA0B,EAAOpG,EAAmBiE,EAAc0D,UAAU,GAClDH,EAAc,IAAI1E,EAAW8E,YAAYL,EAAiB,CACxDM,MAAO/D,EAAYL,KAErBiE,EAAWpI,KAAO,EACXkG,EAAsBY,EAAMmB,GAErC,KAAK,EAGH,IAFAE,EAAeC,EAAWI,MAEThB,QAAS,CACxBY,EAAWpI,KAAO,GAClB,MAGF,MAAM,IAAI2H,MAAMQ,EAAaV,QAAQnF,OAEvC,KAAK,GAKH,OAJAsF,EAAYO,EAAaV,QACzBS,EAAYO,EAAIb,EAAUa,EAC1BP,EAAYQ,EAAId,EAAUc,EAC1BR,EAAYS,EAAIf,EAAUe,EACnBP,EAAWlB,OAAO,SAAU,KAAKW,OAAOK,EAAYU,YAAYtH,SAAS,SAElF,KAAK,GACL,IAAK,MACH,OAAO8G,EAAWN,UAGvBE,QAEoBjF,MAAMH,KAAME,YAGvCqD,EAAmB,SAA2B0C,GAC5C,OAAOzC,EAAkBrD,MAAMH,KAAME,YAGvCoD,EAAwB,SAA+BY,EAAMmB,GAC3D,IAAIa,EAAQb,EAAgBa,MACxBC,EAAWd,EAAgBc,SAC3BC,EAAMf,EAAgBe,IACtBC,EAAKhB,EAAgBgB,GACrB9I,EAAQ8H,EAAgB9H,MACxBkH,EAAOY,EAAgBZ,KAC3B,OAAOtD,EAAcmF,wBAAwB,CAC3CpC,KAAMA,EACNoB,YAAa,CACXY,MAAOA,EACPC,SAAUA,EACVI,SAAUH,EACVC,GAAIA,EACJ9I,MAAOA,GAAS,GAChBkH,KAAMA,GAAQ,GACd+B,QAASjF,MAKf8B,EAAa,SAAqBY,GAChC,OAAO,IAAItE,SAAQ,SAAUR,EAASC,GACpC+C,EAASsE,UAAU,CACjBC,QAAS,MACTC,OAAQ,iBACRC,OAAQ,CAAC3C,EAAS,UAClB4C,GAAI,KACH,SAAUC,EAAGC,GACdD,GAAK1H,EAAO0H,GACZ,IAAIE,EAASD,GAAOA,EAAIC,OAGtB7H,EADY,MAAV6H,EACM,IAAIrF,EAAUqF,GAAQtI,SAAS,IAE/B,aAMhB0E,EAAc,SAAsBT,GAClC,OAAOhD,QAAQsH,IAAItE,EAAUuE,KAAI,SAAUjD,GACzC,OAAO,IAAItE,QAAsB,WAC/B,IAAIwH,EAAQtH,EAAgC,IAAoBW,MAAK,SAAS4G,EAASjI,GACrF,IAAIkI,EACJ,OAAO,IAAoB1D,MAAK,SAAmB2D,GACjD,OACE,OAAQA,EAAUzD,KAAOyD,EAAUlK,MACjC,KAAK,EAEH,OADAkK,EAAUlK,KAAO,EACViG,EAAWY,GAEpB,KAAK,EACHoD,EAAUC,EAAU1B,KACpBzG,EAAQ,CACN8E,QAASA,EACToD,QAASA,IAGb,KAAK,EACL,IAAK,MACH,OAAOC,EAAUpC,UAGtBkC,OAGL,OAAO,SAAUG,GACf,OAAOJ,EAAMhH,MAAMH,KAAME,YA1BI,SAgCrCiD,EAAgB,WA8Dd,OA7DAA,EAAgBtD,EAAgC,IAAoBW,MAAK,SAASgH,EAAUC,GAE1F,OAAO,IAAoB9D,MAAK,SAAoB+D,GAClD,OACE,OAAQA,EAAW7D,KAAO6D,EAAWtK,MACnC,KAAK,EACH,GAAI4E,EAAS,CACX0F,EAAWtK,KAAO,EAClB,MAGF,OAAOsK,EAAWpD,OAAO,SAAU,MAAClE,IAEtC,KAAK,EACH,KAAM2B,EAAcqC,KAAO,IAAMqD,EAAU,CACzCC,EAAWtK,KAAO,EAClB,MAGF,OAAOsK,EAAWpD,OAAO,SAAU3B,KAErC,KAAK,EAKH,GAJc,KAAVb,IACFA,EAAQR,GAGNY,EAAS,CACXwF,EAAWtK,KAAO,GAClB,MAKF,OAFAsK,EAAW7D,KAAO,EAClB6D,EAAWtK,KAAO,EACXyF,IAET,KAAK,EACHX,EAAUwF,EAAW9B,KACrB8B,EAAWtK,KAAO,GAClB,MAEF,KAAK,GAGH,MAFAsK,EAAW7D,KAAO,GAClB6D,EAAWC,GAAKD,EAAkB,MAAE,GAC9BA,EAAWC,GAEnB,KAAK,GAOH,OANc1G,EAAkBiB,EAASH,EAAcqC,MAC3CwD,SAAQ,SAAUC,GAC5B,IAAI/F,EAAQ+F,EAAM/F,MACdmC,EAAU4D,EAAM5D,QACpBlC,EAAc+F,IAAI7D,EAASnC,MAEtB4F,EAAWpD,OAAO,SAAU3B,KAErC,KAAK,GACL,IAAK,MACH,OAAO+E,EAAWxC,UAGvBsC,EAAW,KAAM,CAAC,CAAC,EAAG,WAENrH,MAAMH,KAAME,YAGnCgD,EAAe,SAAuB6E,GACpC,OAAO5E,EAAchD,MAAMH,KAAME,YAGnC+C,EAAmB,WAqBjB,OApBAA,EAAmBpD,EAAgC,IAAoBW,MAAK,SAASwH,IACnF,IAAIC,EACJ,OAAO,IAAoBtE,MAAK,SAAmBuE,GACjD,OACE,OAAQA,EAAUrE,KAAOqE,EAAU9K,MACjC,KAAK,EAEH,OADA8K,EAAU9K,KAAO,EACV8F,GAAa,GAEtB,KAAK,EAEH,OADA+E,EAAWC,EAAUtC,KACdsC,EAAU5D,OAAO,SAAUlB,EAAY6E,IAEhD,KAAK,EACL,IAAK,MACH,OAAOC,EAAUhD,UAGtB8C,QAEmB7H,MAAMH,KAAME,YAGtC8C,EAAkB,WAChB,OAAOC,EAAiB9C,MAAMH,KAAME,YAGtC6C,EAAoB,WAClB,OAAOf,EAAUW,IAAY,QAAKvC,GAGpC0C,EAAgB,WAoDd,OAnDAA,EAAgBjD,EAAgC,IAAoBW,MAAK,SAAS2H,IAChF,IAAInB,EACJ,OAAO,IAAoBrD,MAAK,SAAmByE,GACjD,OACE,OAAQA,EAAUvE,KAAOuE,EAAUhL,MACjC,KAAK,EACH,GAAI0E,EAAO,CACTsG,EAAUhL,KAAO,EACjB,MAGF,MAAM,IAAI2H,MAAM,qDAElB,KAAK,EAGH,OAFAqD,EAAUvE,KAAO,EACjBuE,EAAUhL,KAAO,EACV+D,EAAc0B,aAAa,CAChCqB,KAAMpC,EACNuG,KAAM,QAGV,KAAK,EAGH,IAFArB,EAASoB,EAAUxC,MAERhB,QAAS,CAClBwD,EAAUhL,KAAO,EACjB,MAGF,MAAM,IAAI2H,MAAMiC,EAAOnC,QAAQnF,OAEjC,KAAK,EAMH,OALAwC,EAAU,CACRoG,UAAWtB,EAAOnC,QAAQyD,UAC1BC,UAAWvB,EAAOnC,QAAQ0D,UAC1BrE,KAAM8C,EAAOnC,QAAQ2D,gBAEhBJ,EAAU9D,OAAO,SAAUpC,GAEpC,KAAK,GAGH,MAFAkG,EAAUvE,KAAO,GACjBuE,EAAUT,GAAKS,EAAiB,MAAE,GAC5B,IAAIrD,MAAM,sDAElB,KAAK,GACL,IAAK,MACH,OAAOqD,EAAUlD,UAGtBiD,EAAU,KAAM,CAAC,CAAC,EAAG,WAELhI,MAAMH,KAAME,YAGnC2C,EAAe,WACb,OAAOC,EAAc3C,MAAMH,KAAME,YAGnC0C,EAAoB,SAA4BqB,GAE9C,IAAIgE,EAAWnK,EAAmBiE,EAAcsC,WAE5CoE,EAAeR,EAASS,WAAU,SAAUC,GAI9C,OAHYtM,EAAesM,EAAM,GACN,KAED1E,KAG5BgE,EAASW,QAAQX,EAASY,OAAOJ,EAAc,GAAG,IAElD1G,EAAgB,IAAI+G,IAAIb,IAG1BtF,EAAY,WACV,OAAOnG,MAAM0B,KAAK6D,EAAcgH,SAGlCrG,EAAc,WAwCZ,OAvCAA,EAAc7C,EAAgC,IAAoBW,MAAK,SAASwI,EAAS9E,GACvF,IAAI+E,EAAUjC,EACd,OAAO,IAAoBrD,MAAK,SAAmBuF,GACjD,OACE,OAAQA,EAAUrF,KAAOqF,EAAU9L,MACjC,KAAK,EAIH,OAHA6L,EAAW,sCAAsChE,OAAOf,GACxDgF,EAAUrF,KAAO,EACjBqF,EAAU9L,KAAO,EACV+D,EAAcgI,mBAAmB,CACtCjF,KAAMA,EACNkF,cAAc,IAGlB,KAAK,EAGH,IAFApC,EAASkC,EAAUtD,MAERhB,QAAS,CAClBsE,EAAU9L,KAAO,EACjB,MAGF,MAAM,IAAI2H,MAAMkE,GAElB,KAAK,EACH,OAAOC,EAAU5E,OAAO,SAAU0C,EAAOnC,QAAQZ,SAEnD,KAAK,GAGH,MAFAiF,EAAUrF,KAAO,GACjBqF,EAAUvB,GAAKuB,EAAiB,MAAE,GAC5B,IAAInE,MAAMkE,GAElB,KAAK,GACL,IAAK,MACH,OAAOC,EAAUhE,UAGtB8D,EAAU,KAAM,CAAC,CAAC,EAAG,WAEP7I,MAAMH,KAAME,YAGjCuC,EAAa,SAAsB4G,GACjC,OAAO3G,EAAYvC,MAAMH,KAAME,YAGjCsC,EAAS,WAEP,OADAR,GAAU,EACHkB,KAGTX,EAAe,WACb,OAAON,GAGTK,EAAW,WAqDT,OApDAA,EAAWzC,EAAgC,IAAoBW,MAAK,SAAS8I,EAASpF,EAAMqF,GAC1F,IAAItF,EACJ,OAAO,IAAoBN,MAAK,SAAmB6F,GACjD,OACE,OAAQA,EAAU3F,KAAO2F,EAAUpM,MACjC,KAAK,EACH,GAAI8D,EAAYgD,GAAO,CACrBsF,EAAUpM,KAAO,EACjB,MAGF,OAAOoM,EAAUlF,OAAO,UAAU,GAEpC,KAAK,EAMH,GALIJ,IAASpC,IAEXC,EAAgB,IAAI+G,MAGjBS,EAAQ,CACXC,EAAUpM,KAAO,GACjB,MAKF,OAFAoM,EAAU3F,KAAO,EACjB2F,EAAUpM,KAAO,EACVqF,EAAWyB,GAEpB,KAAK,EAKH,OAJAD,EAAUuF,EAAU5D,KACpB7D,EAAc+F,IAAI7D,EAASC,GAC3BpC,EAAQoC,EACRjC,GAAa,EACNuH,EAAUlF,OAAO,UAAU,GAEpC,KAAK,GAGH,MAFAkF,EAAU3F,KAAO,GACjB2F,EAAU7B,GAAK6B,EAAiB,MAAE,GAC5B,IAAIzE,MAAM,qDAAqDE,OAAOf,IAE9E,KAAK,GAGH,OAFAjC,GAAa,EACbH,EAAQoC,EACDsF,EAAUlF,OAAO,UAAU,GAEpC,KAAK,GACL,IAAK,MACH,OAAOkF,EAAUtE,UAGtBoE,EAAU,KAAM,CAAC,CAAC,EAAG,WAEVnJ,MAAMH,KAAME,YAG9BmC,EAAU,SAAmBoH,EAAKC,GAChC,OAAOpH,EAASnC,MAAMH,KAAME,YAG9BkC,EAAa,WACXN,EAAQ,GACRC,EAAgB,IAAI+G,IACpB9G,GAAU,EACVG,EAAS+C,QAGXtB,EAAWxG,KAAO,GACX,oCAET,KAAK,GAGH,OAFAuD,EAAuBiD,EAAWgC,KAClChC,EAAWxG,KAAO,GACX,8EAET,KAAK,GAGH,OAFAwD,EAAagD,EAAWgC,KACxBhC,EAAWxG,KAAO,GACX,8EAET,KAAK,GAGH,OAFAyD,EAAU+C,EAAWgC,KACrBhC,EAAWxG,KAAO,GACX,yEAET,KAAK,GAIH,OAHA0D,EAAgB8C,EAAWgC,KAC3B7E,EAAiBD,EAAuB,QACxC8C,EAAWxG,KAAO,GACX,0EAET,KAAK,GAiFH,OAhFA4D,EAAiB4C,EAAWgC,KAC5B3E,EAAoBD,EAAeC,kBACnCC,EAAcF,EAAeE,YAC7BC,EAAgBR,EAA8B,QAAGS,EAAeT,EAAqBS,aAAcC,EAASV,EAAqBU,OACjIC,EAAsB,iBACtBC,EAAYb,EAAQa,UAAWC,EAAQd,EAAQc,MAAOC,EAASf,EAAQe,OAAQC,EAAShB,EAAQgB,OAAQC,EAAYjB,EAAQiB,UAAWC,EAAclB,EAAQkB,YAAaC,EAAmBnB,EAAQmB,iBACrMC,EAAQ,GACRC,EAAgB,IAAI+G,IACpB9G,GAAU,EACVC,GAAa,EACbd,EAAcwI,SAAS,CACrBnI,MAAOA,EACPC,OAAQA,IAEVU,EAAWpB,EAAe,CACxB6I,YAAa,SAAqBC,GAChC3G,IAAetD,MAAK,SAAUmH,GAC5B,OAAO8C,EAAS,KAAM9C,MACd,OAAE,SAAUtJ,GACpB,OAAOoM,EAASpM,EAAK,UAGzBqM,gBAAiB,SAAyBzE,EAAiBwE,GACzDtG,EAAiB8B,GAAiBzF,MAAK,SAAUmH,GAC/C,OAAO8C,EAAS,KAAM9C,MACd,OAAE,SAAUtJ,GACpB,OAAOoM,EAASpM,EAAK,UAGzBsM,eAAgB,SAAwBC,EAAaH,GACnDpG,EAAauG,GAAapK,MAAK,SAAUmH,GACvC,OAAO8C,EAAS,KAAM9C,MACd,OAAE,SAAUtJ,GACpB,OAAOoM,EAASpM,EAAK,UAGzBwM,uBAAwB,SAAgCD,EAAaH,GACnEpG,EAAauG,GAAapK,MAAK,SAAUmH,GACvC,OAAO8C,EAAS,KAAM9C,MACd,OAAE,SAAUtJ,GACpB,OAAOoM,EAASpM,EAAK,UAGzByM,YAAa,SAAqBF,EAAaH,GAC7CpG,EAAauG,GAAapK,MAAK,SAAUmH,GACvC,OAAO8C,EAAS,KAAM9C,MACd,OAAE,SAAUtJ,GACpB,OAAOoM,EAASpM,EAAK,UAGzB0M,oBAAqB,SAA6BH,EAAaH,GAC7DpG,EAAauG,GAAapK,MAAK,SAAUmH,GACvC,OAAO8C,EAAS,KAAM9C,MACd,OAAE,SAAUtJ,GACpB,OAAOoM,EAASpM,EAAK,UAGzBiE,OAAQA,IAEVP,EAAciJ,GAAGhJ,GAAc,SAAUiJ,GACnCA,EAAMC,OAASjJ,EAAOkJ,aACxBpI,EAAS+C,OACTrD,EAAiB,CACf2I,cAAc,EACdC,WAAY,eAIlBtI,EAASE,QAAUA,EACnBF,EAASL,MAAQA,EACjBK,EAASK,OAASA,EAClBL,EAASS,kBAAoBA,EAC7BT,EAASY,kBAAoBA,EAC7BZ,EAASyH,YAAc1G,EACvBf,EAASa,gBAAkBA,EAC3Bb,EAASkB,WAAaA,EACtBlB,EAASiB,YAAcA,EACvBjB,EAASuI,KAAOvI,EAASsE,UACzBtE,EAASC,WAAaA,EACtBD,EAASI,aAAeA,EACjBqB,EAAWU,OAAO,SAAUnC,GAErC,KAAK,GACL,IAAK,MACH,OAAOyB,EAAWsB,UAGvBzE,QAEkBN,MAAMH,KAAME,WAGtB,UA/uBf,SAAgBQ,GACd,IAAIgB,EAAShB,EAAQgB,OACjBH,EAAYb,EAAQa,UACpBC,EAAQd,EAAQc,MAChBC,EAASf,EAAQe,OACjBkJ,EAAYjK,EAAQiK,UACpBC,EAAQlK,EAAQkK,MAChBC,EAAUnK,EAAQmK,QAEtB,MAAO,CACLhM,KAAM+L,GAAS,SACfE,IAHQpK,EAAQoK,KAVH,2wBAcbD,QAASA,EACTE,OAAQ,WACN,IAAIC,EAAUnL,EAAgC,IAAoBW,MAAK,SAASyK,EAASC,GACvF,IAAIvJ,EAAWC,EAAaC,EAAkBM,EAC9C,OAAO,IAAoBwB,MAAK,SAAmBwH,GACjD,OACE,OAAQA,EAAUtH,KAAOsH,EAAU/N,MACjC,KAAK,EAGH,OAFAuE,EAAYuJ,EAAQvJ,UAAWC,EAAcsJ,EAAQtJ,YAAaC,EAAmBqJ,EAAQrJ,iBAC7FsJ,EAAU/N,KAAO,EACViD,EAAe,CACpBqB,OAAQA,EACRH,UAAWA,EACXC,MAAOA,EACPC,OAAQA,EACRE,UAAWA,EACXC,YAAaA,EACbC,iBAAkBA,IAGtB,KAAK,EAEH,OADAM,EAAWgJ,EAAUvF,KACduF,EAAU7G,OAAO,SAAU,CAChCnC,SAAUA,EACV,UAAa,CACXtD,KAAM,SACNuM,QAASjJ,EAASK,OAClBJ,WAAYD,EAASC,WACrB6B,QAAS,CACPoH,IAAK,WACH,IAAIC,EAAOzL,EAAgC,IAAoBW,MAAK,SAAS+K,IAC3E,OAAO,IAAoB5H,MAAK,SAAkB6H,GAChD,OACE,OAAQA,EAAS3H,KAAO2H,EAASpO,MAC/B,KAAK,EACH,OAAOoO,EAASlH,OAAO,SAAUnC,EAASY,qBAE5C,KAAK,EACL,IAAK,MACH,OAAOyI,EAAStG,UAGrBqG,OAOL,OAJA,WACE,OAAOD,EAAKnL,MAAMH,KAAME,YAjBvB,IAuBPuL,QAAS,CACPJ,IAAK,WACH,IAAIK,EAAQ7L,EAAgC,IAAoBW,MAAK,SAASmL,IAC5E,OAAO,IAAoBhI,MAAK,SAAmBiI,GACjD,OACE,OAAQA,EAAU/H,KAAO+H,EAAUxO,MACjC,KAAK,EACH,OAAOwO,EAAUtH,OAAO,SAAU/C,GAEpC,KAAK,EACL,IAAK,MACH,OAAOqK,EAAU1G,UAGtByG,OAOL,OAJA,WACE,OAAOD,EAAMvL,MAAMH,KAAME,YAjBxB,IAuBPmH,QAAS,CACPgE,IAAK,WACH,IAAIQ,EAAQhM,EAAgC,IAAoBW,MAAK,SAASsL,IAC5E,IAAI7H,EACJ,OAAO,IAAoBN,MAAK,SAAmBoI,GACjD,OACE,OAAQA,EAAUlI,KAAOkI,EAAU3O,MACjC,KAAK,EAEH,OADA6G,EAAU9B,EAASY,oBACZgJ,EAAUzH,OAAO,SAAUL,GAAW9B,EAASkB,WAAWY,IAEnE,KAAK,EACL,IAAK,MACH,OAAO8H,EAAU7G,UAGtB4G,OAOL,OAJA,WACE,OAAOD,EAAM1L,MAAMH,KAAME,YAnBxB,OA4Bb,KAAK,EACL,IAAK,MACH,OAAOiL,EAAUjG,UAGtB+F,OAOL,OAJA,SAAgBe,GACd,OAAOhB,EAAQ7K,MAAMH,KAAME,YAjHvB,GAsHRoK,KAAM,WACN2B,SAAS,EACTC,QAAQ,EACRC,aAAc,CAAC,OACfxB,UAAWA","file":"static/js/129.e87c61e8.chunk.js","sourcesContent":["import _regeneratorRuntime from \"/Users/sora/keystone/react-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]);\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nvar trezorIcon = \"\\n\\t<svg width=\\\"40px\\\" height=\\\"40px\\\" viewBox=\\\"0 0 114 166\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n\\t\\t<g id=\\\"Styles\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n\\t\\t\\t<path d=\\\"M17,51.453125 L17,40 C17,17.90861 34.90861,-1.0658141e-14 57,-1.0658141e-14 C79.09139,-1.0658141e-14 97,17.90861 97,40 L97,51.453125 L113.736328,51.453125 L113.736328,139.193359 L57.5,166 L0,139.193359 L0,51.453125 L17,51.453125 Z M37,51.453125 L77,51.453125 L77,40 L76.9678398,40 C76.3750564,29.406335 67.6617997,21 57,21 C46.3382003,21 37.6249436,29.406335 37.0321602,40 L37,40 L37,51.453125 Z M23,72 L23,125 L56.8681641,140.966797 L91,125 L91,72 L23,72 Z\\\" id=\\\"Trezor-logo\\\" fill=\\\"currentColor\\\"></path>\\n\\t\\t</g>\\n\\t</svg>\\n\";\n\nfunction trezor(options) {\n  var rpcUrl = options.rpcUrl,\n      networkId = options.networkId,\n      email = options.email,\n      appUrl = options.appUrl,\n      preferred = options.preferred,\n      label = options.label,\n      iconSrc = options.iconSrc,\n      svg = options.svg;\n  return {\n    name: label || 'Trezor',\n    svg: svg || trezorIcon,\n    iconSrc: iconSrc,\n    wallet: function () {\n      var _wallet = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(helpers) {\n        var BigNumber, networkName, resetWalletState, provider;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                BigNumber = helpers.BigNumber, networkName = helpers.networkName, resetWalletState = helpers.resetWalletState;\n                _context4.next = 3;\n                return trezorProvider({\n                  rpcUrl: rpcUrl,\n                  networkId: networkId,\n                  email: email,\n                  appUrl: appUrl,\n                  BigNumber: BigNumber,\n                  networkName: networkName,\n                  resetWalletState: resetWalletState\n                });\n\n              case 3:\n                provider = _context4.sent;\n                return _context4.abrupt(\"return\", {\n                  provider: provider,\n                  \"interface\": {\n                    name: 'Trezor',\n                    connect: provider.enable,\n                    disconnect: provider.disconnect,\n                    address: {\n                      get: function () {\n                        var _get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                          return _regeneratorRuntime.wrap(function _callee$(_context) {\n                            while (1) {\n                              switch (_context.prev = _context.next) {\n                                case 0:\n                                  return _context.abrupt(\"return\", provider.getPrimaryAddress());\n\n                                case 1:\n                                case \"end\":\n                                  return _context.stop();\n                              }\n                            }\n                          }, _callee);\n                        }));\n\n                        function get() {\n                          return _get.apply(this, arguments);\n                        }\n\n                        return get;\n                      }()\n                    },\n                    network: {\n                      get: function () {\n                        var _get2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                            while (1) {\n                              switch (_context2.prev = _context2.next) {\n                                case 0:\n                                  return _context2.abrupt(\"return\", networkId);\n\n                                case 1:\n                                case \"end\":\n                                  return _context2.stop();\n                              }\n                            }\n                          }, _callee2);\n                        }));\n\n                        function get() {\n                          return _get2.apply(this, arguments);\n                        }\n\n                        return get;\n                      }()\n                    },\n                    balance: {\n                      get: function () {\n                        var _get3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n                          var address;\n                          return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                            while (1) {\n                              switch (_context3.prev = _context3.next) {\n                                case 0:\n                                  address = provider.getPrimaryAddress();\n                                  return _context3.abrupt(\"return\", address && provider.getBalance(address));\n\n                                case 2:\n                                case \"end\":\n                                  return _context3.stop();\n                              }\n                            }\n                          }, _callee3);\n                        }));\n\n                        function get() {\n                          return _get3.apply(this, arguments);\n                        }\n\n                        return get;\n                      }()\n                    }\n                  }\n                });\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function wallet(_x) {\n        return _wallet.apply(this, arguments);\n      }\n\n      return wallet;\n    }(),\n    type: 'hardware',\n    desktop: true,\n    mobile: true,\n    osExclusions: ['iOS'],\n    preferred: preferred\n  };\n}\n\nfunction trezorProvider(_x2) {\n  return _trezorProvider.apply(this, arguments);\n}\n\nfunction _trezorProvider() {\n  _trezorProvider = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(options) {\n    var TrezorConnectLibrary, EthereumTx, ethUtil, _yield$import, createProvider, _yield$import2, generateAddresses, isValidPath, TrezorConnect, DEVICE_EVENT, DEVICE, TREZOR_DEFAULT_PATH, networkId, email, appUrl, rpcUrl, BigNumber, networkName, resetWalletState, dPath, addressToPath, enabled, customPath, account, provider, disconnect, setPath, _setPath, isCustomPath, enable, getAddress, _getAddress, addresses, setPrimaryAccount, getPublicKey, _getPublicKey, getPrimaryAddress, getMoreAccounts, _getMoreAccounts, _getAccounts, _getAccounts2, getBalances, getBalance, trezorSignTransaction, _signTransaction, _signTransaction2, _signMessage, _signMessage2;\n\n    return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            _signMessage2 = function _signMessage4() {\n              _signMessage2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(message) {\n                var _, address, path;\n\n                return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n                  while (1) {\n                    switch (_context12.prev = _context12.next) {\n                      case 0:\n                        if (!(addressToPath.size === 0)) {\n                          _context12.next = 3;\n                          break;\n                        }\n\n                        _context12.next = 3;\n                        return enable();\n\n                      case 3:\n                        _ = _slicedToArray(_toConsumableArray(addressToPath.entries())[0], 2), address = _[0], path = _[1];\n                        return _context12.abrupt(\"return\", new Promise(function (resolve, reject) {\n                          TrezorConnect.ethereumSignMessage({\n                            path: path,\n                            message: ethUtil.stripHexPrefix(message.data),\n                            hex: true\n                          }).then(function (response) {\n                            if (response.success) {\n                              if (response.payload.address !== ethUtil.toChecksumAddress(address)) {\n                                reject(new Error('signature doesnt match the right address'));\n                              }\n\n                              var signature = \"0x\".concat(response.payload.signature);\n                              resolve(signature);\n                            } else {\n                              reject(new Error(response.payload && response.payload.error || 'There was an error signing a message'));\n                            }\n                          });\n                        }));\n\n                      case 5:\n                      case \"end\":\n                        return _context12.stop();\n                    }\n                  }\n                }, _callee12);\n              }));\n              return _signMessage2.apply(this, arguments);\n            };\n\n            _signMessage = function _signMessage3(_x9) {\n              return _signMessage2.apply(this, arguments);\n            };\n\n            _signTransaction2 = function _signTransaction4() {\n              _signTransaction2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(transactionData) {\n                var path, transaction, trezorResult, signature;\n                return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n                  while (1) {\n                    switch (_context11.prev = _context11.next) {\n                      case 0:\n                        if (!(addressToPath.size === 0)) {\n                          _context11.next = 3;\n                          break;\n                        }\n\n                        _context11.next = 3;\n                        return enable();\n\n                      case 3:\n                        path = _toConsumableArray(addressToPath.values())[0];\n                        transaction = new EthereumTx.Transaction(transactionData, {\n                          chain: networkName(networkId)\n                        });\n                        _context11.next = 7;\n                        return trezorSignTransaction(path, transactionData);\n\n                      case 7:\n                        trezorResult = _context11.sent;\n\n                        if (trezorResult.success) {\n                          _context11.next = 10;\n                          break;\n                        }\n\n                        throw new Error(trezorResult.payload.error);\n\n                      case 10:\n                        signature = trezorResult.payload;\n                        transaction.v = signature.v;\n                        transaction.r = signature.r;\n                        transaction.s = signature.s;\n                        return _context11.abrupt(\"return\", \"0x\".concat(transaction.serialize().toString('hex')));\n\n                      case 15:\n                      case \"end\":\n                        return _context11.stop();\n                    }\n                  }\n                }, _callee11);\n              }));\n              return _signTransaction2.apply(this, arguments);\n            };\n\n            _signTransaction = function _signTransaction3(_x8) {\n              return _signTransaction2.apply(this, arguments);\n            };\n\n            trezorSignTransaction = function _trezorSignTransactio(path, transactionData) {\n              var nonce = transactionData.nonce,\n                  gasPrice = transactionData.gasPrice,\n                  gas = transactionData.gas,\n                  to = transactionData.to,\n                  value = transactionData.value,\n                  data = transactionData.data;\n              return TrezorConnect.ethereumSignTransaction({\n                path: path,\n                transaction: {\n                  nonce: nonce,\n                  gasPrice: gasPrice,\n                  gasLimit: gas,\n                  to: to,\n                  value: value || '',\n                  data: data || '',\n                  chainId: networkId\n                }\n              });\n            };\n\n            getBalance = function _getBalance(address) {\n              return new Promise(function (resolve, reject) {\n                provider.sendAsync({\n                  jsonrpc: '2.0',\n                  method: 'eth_getBalance',\n                  params: [address, 'latest'],\n                  id: 42\n                }, function (e, res) {\n                  e && reject(e);\n                  var result = res && res.result;\n\n                  if (result != null) {\n                    resolve(new BigNumber(result).toString(10));\n                  } else {\n                    resolve(null);\n                  }\n                });\n              });\n            };\n\n            getBalances = function _getBalances(addresses) {\n              return Promise.all(addresses.map(function (address) {\n                return new Promise( /*#__PURE__*/function () {\n                  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(resolve) {\n                    var balance;\n                    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                      while (1) {\n                        switch (_context5.prev = _context5.next) {\n                          case 0:\n                            _context5.next = 2;\n                            return getBalance(address);\n\n                          case 2:\n                            balance = _context5.sent;\n                            resolve({\n                              address: address,\n                              balance: balance\n                            });\n\n                          case 4:\n                          case \"end\":\n                            return _context5.stop();\n                        }\n                      }\n                    }, _callee5);\n                  }));\n\n                  return function (_x7) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }());\n              }));\n            };\n\n            _getAccounts2 = function _getAccounts4() {\n              _getAccounts2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(getMore) {\n                var addressInfo;\n                return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n                  while (1) {\n                    switch (_context10.prev = _context10.next) {\n                      case 0:\n                        if (enabled) {\n                          _context10.next = 2;\n                          break;\n                        }\n\n                        return _context10.abrupt(\"return\", [undefined]);\n\n                      case 2:\n                        if (!(addressToPath.size > 0 && !getMore)) {\n                          _context10.next = 4;\n                          break;\n                        }\n\n                        return _context10.abrupt(\"return\", addresses());\n\n                      case 4:\n                        if (dPath === '') {\n                          dPath = TREZOR_DEFAULT_PATH;\n                        }\n\n                        if (account) {\n                          _context10.next = 15;\n                          break;\n                        }\n\n                        _context10.prev = 6;\n                        _context10.next = 9;\n                        return getPublicKey();\n\n                      case 9:\n                        account = _context10.sent;\n                        _context10.next = 15;\n                        break;\n\n                      case 12:\n                        _context10.prev = 12;\n                        _context10.t0 = _context10[\"catch\"](6);\n                        throw _context10.t0;\n\n                      case 15:\n                        addressInfo = generateAddresses(account, addressToPath.size);\n                        addressInfo.forEach(function (_ref4) {\n                          var dPath = _ref4.dPath,\n                              address = _ref4.address;\n                          addressToPath.set(address, dPath);\n                        });\n                        return _context10.abrupt(\"return\", addresses());\n\n                      case 18:\n                      case \"end\":\n                        return _context10.stop();\n                    }\n                  }\n                }, _callee10, null, [[6, 12]]);\n              }));\n              return _getAccounts2.apply(this, arguments);\n            };\n\n            _getAccounts = function _getAccounts3(_x6) {\n              return _getAccounts2.apply(this, arguments);\n            };\n\n            _getMoreAccounts = function _getMoreAccounts3() {\n              _getMoreAccounts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n                var accounts;\n                return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n                  while (1) {\n                    switch (_context9.prev = _context9.next) {\n                      case 0:\n                        _context9.next = 2;\n                        return _getAccounts(true);\n\n                      case 2:\n                        accounts = _context9.sent;\n                        return _context9.abrupt(\"return\", getBalances(accounts));\n\n                      case 4:\n                      case \"end\":\n                        return _context9.stop();\n                    }\n                  }\n                }, _callee9);\n              }));\n              return _getMoreAccounts.apply(this, arguments);\n            };\n\n            getMoreAccounts = function _getMoreAccounts2() {\n              return _getMoreAccounts.apply(this, arguments);\n            };\n\n            getPrimaryAddress = function _getPrimaryAddress() {\n              return enabled ? addresses()[0] : undefined;\n            };\n\n            _getPublicKey = function _getPublicKey3() {\n              _getPublicKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n                var result;\n                return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n                  while (1) {\n                    switch (_context8.prev = _context8.next) {\n                      case 0:\n                        if (dPath) {\n                          _context8.next = 2;\n                          break;\n                        }\n\n                        throw new Error('a derivation path is needed to get the public key');\n\n                      case 2:\n                        _context8.prev = 2;\n                        _context8.next = 5;\n                        return TrezorConnect.getPublicKey({\n                          path: dPath,\n                          coin: 'eth'\n                        });\n\n                      case 5:\n                        result = _context8.sent;\n\n                        if (result.success) {\n                          _context8.next = 8;\n                          break;\n                        }\n\n                        throw new Error(result.payload.error);\n\n                      case 8:\n                        account = {\n                          publicKey: result.payload.publicKey,\n                          chainCode: result.payload.chainCode,\n                          path: result.payload.serializedPath\n                        };\n                        return _context8.abrupt(\"return\", account);\n\n                      case 12:\n                        _context8.prev = 12;\n                        _context8.t0 = _context8[\"catch\"](2);\n                        throw new Error('There was an error accessing your Trezor accounts.');\n\n                      case 15:\n                      case \"end\":\n                        return _context8.stop();\n                    }\n                  }\n                }, _callee8, null, [[2, 12]]);\n              }));\n              return _getPublicKey.apply(this, arguments);\n            };\n\n            getPublicKey = function _getPublicKey2() {\n              return _getPublicKey.apply(this, arguments);\n            };\n\n            setPrimaryAccount = function _setPrimaryAccount(address) {\n              // make a copy and put in an array\n              var accounts = _toConsumableArray(addressToPath.entries());\n\n              var accountIndex = accounts.findIndex(function (_ref) {\n                var _ref2 = _slicedToArray(_ref, 1),\n                    accountAddress = _ref2[0];\n\n                return accountAddress === address;\n              }); // pull the item at the account index out of the array and place at the front\n\n              accounts.unshift(accounts.splice(accountIndex, 1)[0]); // reassign addressToPath to new ordered accounts\n\n              addressToPath = new Map(accounts);\n            };\n\n            addresses = function _addresses() {\n              return Array.from(addressToPath.keys());\n            };\n\n            _getAddress = function _getAddress3() {\n              _getAddress = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(path) {\n                var errorMsg, result;\n                return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n                  while (1) {\n                    switch (_context7.prev = _context7.next) {\n                      case 0:\n                        errorMsg = \"Unable to derive address from path \".concat(path);\n                        _context7.prev = 1;\n                        _context7.next = 4;\n                        return TrezorConnect.ethereumGetAddress({\n                          path: path,\n                          showOnTrezor: false\n                        });\n\n                      case 4:\n                        result = _context7.sent;\n\n                        if (result.success) {\n                          _context7.next = 7;\n                          break;\n                        }\n\n                        throw new Error(errorMsg);\n\n                      case 7:\n                        return _context7.abrupt(\"return\", result.payload.address);\n\n                      case 10:\n                        _context7.prev = 10;\n                        _context7.t0 = _context7[\"catch\"](1);\n                        throw new Error(errorMsg);\n\n                      case 13:\n                      case \"end\":\n                        return _context7.stop();\n                    }\n                  }\n                }, _callee7, null, [[1, 10]]);\n              }));\n              return _getAddress.apply(this, arguments);\n            };\n\n            getAddress = function _getAddress2(_x5) {\n              return _getAddress.apply(this, arguments);\n            };\n\n            enable = function _enable() {\n              enabled = true;\n              return _getAccounts();\n            };\n\n            isCustomPath = function _isCustomPath() {\n              return customPath;\n            };\n\n            _setPath = function _setPath3() {\n              _setPath = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(path, custom) {\n                var address;\n                return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                  while (1) {\n                    switch (_context6.prev = _context6.next) {\n                      case 0:\n                        if (isValidPath(path)) {\n                          _context6.next = 2;\n                          break;\n                        }\n\n                        return _context6.abrupt(\"return\", false);\n\n                      case 2:\n                        if (path !== dPath) {\n                          // clear any exsting addresses if different path\n                          addressToPath = new Map();\n                        }\n\n                        if (!custom) {\n                          _context6.next = 17;\n                          break;\n                        }\n\n                        _context6.prev = 4;\n                        _context6.next = 7;\n                        return getAddress(path);\n\n                      case 7:\n                        address = _context6.sent;\n                        addressToPath.set(address, path);\n                        dPath = path;\n                        customPath = true;\n                        return _context6.abrupt(\"return\", true);\n\n                      case 14:\n                        _context6.prev = 14;\n                        _context6.t0 = _context6[\"catch\"](4);\n                        throw new Error(\"There was a problem deriving an address from path \".concat(path));\n\n                      case 17:\n                        customPath = false;\n                        dPath = path;\n                        return _context6.abrupt(\"return\", true);\n\n                      case 20:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }\n                }, _callee6, null, [[4, 14]]);\n              }));\n              return _setPath.apply(this, arguments);\n            };\n\n            setPath = function _setPath2(_x3, _x4) {\n              return _setPath.apply(this, arguments);\n            };\n\n            disconnect = function _disconnect() {\n              dPath = '';\n              addressToPath = new Map();\n              enabled = false;\n              provider.stop();\n            };\n\n            _context13.next = 25;\n            return import('trezor-connect');\n\n          case 25:\n            TrezorConnectLibrary = _context13.sent;\n            _context13.next = 28;\n            return import('ethereumjs-tx');\n\n          case 28:\n            EthereumTx = _context13.sent;\n            _context13.next = 31;\n            return import('ethereumjs-util');\n\n          case 31:\n            ethUtil = _context13.sent;\n            _context13.next = 34;\n            return import('./providerEngine-610bf80e.js');\n\n          case 34:\n            _yield$import = _context13.sent;\n            createProvider = _yield$import[\"default\"];\n            _context13.next = 38;\n            return import('./hd-wallet-6fc43476.js');\n\n          case 38:\n            _yield$import2 = _context13.sent;\n            generateAddresses = _yield$import2.generateAddresses;\n            isValidPath = _yield$import2.isValidPath;\n            TrezorConnect = TrezorConnectLibrary[\"default\"], DEVICE_EVENT = TrezorConnectLibrary.DEVICE_EVENT, DEVICE = TrezorConnectLibrary.DEVICE;\n            TREZOR_DEFAULT_PATH = \"m/44'/60'/0'/0\";\n            networkId = options.networkId, email = options.email, appUrl = options.appUrl, rpcUrl = options.rpcUrl, BigNumber = options.BigNumber, networkName = options.networkName, resetWalletState = options.resetWalletState;\n            dPath = '';\n            addressToPath = new Map();\n            enabled = false;\n            customPath = false;\n            TrezorConnect.manifest({\n              email: email,\n              appUrl: appUrl\n            });\n            provider = createProvider({\n              getAccounts: function getAccounts(callback) {\n                _getAccounts().then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              signTransaction: function signTransaction(transactionData, callback) {\n                _signTransaction(transactionData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              processMessage: function processMessage(messageData, callback) {\n                _signMessage(messageData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              processPersonalMessage: function processPersonalMessage(messageData, callback) {\n                _signMessage(messageData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              signMessage: function signMessage(messageData, callback) {\n                _signMessage(messageData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              signPersonalMessage: function signPersonalMessage(messageData, callback) {\n                _signMessage(messageData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              rpcUrl: rpcUrl\n            });\n            TrezorConnect.on(DEVICE_EVENT, function (event) {\n              if (event.type === DEVICE.DISCONNECT) {\n                provider.stop();\n                resetWalletState({\n                  disconnected: true,\n                  walletName: 'Trezor'\n                });\n              }\n            });\n            provider.setPath = setPath;\n            provider.dPath = dPath;\n            provider.enable = enable;\n            provider.setPrimaryAccount = setPrimaryAccount;\n            provider.getPrimaryAddress = getPrimaryAddress;\n            provider.getAccounts = _getAccounts;\n            provider.getMoreAccounts = getMoreAccounts;\n            provider.getBalance = getBalance;\n            provider.getBalances = getBalances;\n            provider.send = provider.sendAsync;\n            provider.disconnect = disconnect;\n            provider.isCustomPath = isCustomPath;\n            return _context13.abrupt(\"return\", provider);\n\n          case 64:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13);\n  }));\n  return _trezorProvider.apply(this, arguments);\n}\n\nexport default trezor;"],"sourceRoot":""}