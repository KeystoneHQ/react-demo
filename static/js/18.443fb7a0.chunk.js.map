{"version":3,"sources":["../node_modules/bnc-onboard-staging/dist/esm/hd-wallet-f20d720f.js","../node_modules/bnc-onboard-staging/node_modules/bs58check/index.js","../node_modules/bnc-onboard-staging/node_modules/bs58check/base.js","../node_modules/bnc-onboard-staging/node_modules/hdkey/lib/hdkey.js","../node_modules/bnc-onboard-staging/node_modules/hdkey/node_modules/secp256k1/elliptic.js","../node_modules/bnc-onboard-staging/node_modules/hdkey/node_modules/secp256k1/lib/index.js","../node_modules/bnc-onboard-staging/node_modules/hdkey/node_modules/secp256k1/lib/elliptic.js"],"names":["publicToAddress","toChecksumAddress","generateAddresses","account","offset","publicKey","chainCode","path","hdk","addresses","i","dkey","deriveChild","address","toString","push","dPath","concat","isValidPath","parts","split","includes","undefined","accountFieldNumber","Number","slice","isNaN","changeFieldNumber","addressFieldNumber","createHash","bs58checkBase","module","exports","buffer","tmp","update","digest","base58","Buffer","checksumFn","decodeRaw","payload","checksum","newChecksum","encode","length","decode","string","Error","decodeUnsafe","assert","crypto","bs58check","secp256k1","MASTER_SECRET","from","BITCOIN_VERSIONS","private","public","HDKey","versions","this","depth","index","_privateKey","_publicKey","_fingerprint","parentFingerprint","serialize","hdkey","version","key","allocUnsafe","writeUInt32BE","writeUInt8","fingerprint","copy","hash160","buf","sha","Object","defineProperty","prototype","get","_identifier","identifier","set","value","equal","privateKeyVerify","publicKeyCreate","readUInt32BE","publicKeyVerify","publicKeyConvert","alloc","privateKey","derive","entries","forEach","c","hardened","childIndex","parseInt","test","data","isHardened","indexBuffer","pk","zb","I","createHmac","IL","IR","hd","privateKeyTweakAdd","err","publicKeyTweakAdd","sign","hash","ecdsaSign","signature","verify","ecdsaVerify","Uint8Array","wipePrivateData","randomBytes","toJSON","xpriv","privateExtendedKey","xpub","publicExtendedKey","fromMasterSeed","seedBuffer","fromExtendedKey","base58key","keyBuffer","readUInt8","fromJSON","obj","HARDENED_OFFSET","_createForOfIteratorHelper","errors","cond","msg","isUint8Array","name","Array","isArray","numbers","join","_msg","isCompressed","toTypeString","getAssertedOutput","output","arguments","len","call","contextRandomize","seed","seckey","privateKeyNegate","tweak","privateKeyTweakMul","pubkey","compressed","publicKeyNegate","publicKeyCombine","pubkeys","_step","_iterator","s","n","done","e","f","publicKeyTweakMul","signatureNormalize","sig","signatureExport","outputlen","signatureImport","msg32","options","noncefn","recid","ecdsaRecover","ecdh","hashfn","xbuf","ybuf","ec","EC","ecparams","curve","BN","constructor","loadPublicKey","first","x","cmp","p","y","toRed","red","redSqr","redIMul","redIAdd","b","redSqrt","isOdd","redNeg","keyPair","pub","loadCompressedPublicKey","subarray","x3","redISub","isZero","loadUncompressedPublicKey","savePublicKey","point","bn","negate","sub","umod","toArrayLike","iadd","isub","tweaked","imul","keyFromPrivate","getPublic","pair","pairs","_i","add","isInfinity","g","mul","r","nh","sigR","sigS","lenR","posR","lenS","posS","message","_noncefn","counter","nonce","d","canonical","k","pers","recoveryParam","sigObj","sigr","sigs","recoverPubKey","scalar","_data","sha256","getX","toArray","_i2","getY","_i3"],"mappings":"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","file":"static/js/18.443fb7a0.chunk.js","sourcesContent":["import HDKey from 'hdkey';\nimport * as ethUtil from 'ethereumjs-util';\nimport { Buffer } from 'buffer';\nvar publicToAddress = ethUtil.publicToAddress,\n    toChecksumAddress = ethUtil.toChecksumAddress;\nvar numberToGet = 5;\n\nfunction generateAddresses(account, offset) {\n  var publicKey = account.publicKey,\n      chainCode = account.chainCode,\n      path = account.path;\n  var hdk = new HDKey();\n  hdk.publicKey = new Buffer(publicKey, 'hex');\n  hdk.chainCode = new Buffer(chainCode, 'hex');\n  var addresses = [];\n\n  for (var i = offset; i < numberToGet + offset; i++) {\n    var dkey = hdk.deriveChild(i);\n    var address = publicToAddress(dkey.publicKey, true).toString('hex');\n    addresses.push({\n      dPath: \"\".concat(path, \"/\").concat(i),\n      address: toChecksumAddress(\"0x\".concat(address))\n    });\n  }\n\n  return addresses;\n}\n\nfunction isValidPath(path) {\n  var parts = path.split('/');\n\n  if (parts[0] !== 'm') {\n    return false;\n  }\n\n  if (parts[1] !== \"44'\") {\n    return false;\n  }\n\n  if (![\"60'\", \"1'\", \"73799'\", \"246'\"].includes(parts[2])) {\n    return false;\n  }\n\n  if (parts[3] === undefined || parts[3] === \"0'\") {\n    return true;\n  }\n\n  var accountFieldNumber = Number(parts[3].slice(0, -1));\n\n  if (isNaN(accountFieldNumber) || accountFieldNumber < 0 || parts[3].slice(-1) !== \"'\") {\n    return false;\n  }\n\n  if (parts[4] === undefined) {\n    return true;\n  }\n\n  var changeFieldNumber = Number(parts[4]);\n\n  if (isNaN(changeFieldNumber) || changeFieldNumber < 0) {\n    return false;\n  }\n\n  if (parts[5] === undefined) {\n    return true;\n  }\n\n  var addressFieldNumber = Number(parts[5]);\n\n  if (isNaN(addressFieldNumber) || addressFieldNumber < 0) {\n    return false;\n  }\n\n  return true;\n}\n\nexport { generateAddresses, isValidPath };","'use strict';\n\nvar createHash = require('create-hash');\n\nvar bs58checkBase = require('./base'); // SHA256(SHA256(buffer))\n\n\nfunction sha256x2(buffer) {\n  var tmp = createHash('sha256').update(buffer).digest();\n  return createHash('sha256').update(tmp).digest();\n}\n\nmodule.exports = bs58checkBase(sha256x2);","'use strict';\n\nvar base58 = require('bs58');\n\nvar Buffer = require('safe-buffer').Buffer;\n\nmodule.exports = function (checksumFn) {\n  // Encode a buffer as a base58-check encoded string\n  function encode(payload) {\n    var checksum = checksumFn(payload);\n    return base58.encode(Buffer.concat([payload, checksum], payload.length + 4));\n  }\n\n  function decodeRaw(buffer) {\n    var payload = buffer.slice(0, -4);\n    var checksum = buffer.slice(-4);\n    var newChecksum = checksumFn(payload);\n    if (checksum[0] ^ newChecksum[0] | checksum[1] ^ newChecksum[1] | checksum[2] ^ newChecksum[2] | checksum[3] ^ newChecksum[3]) return;\n    return payload;\n  } // Decode a base58-check encoded string to a buffer, no result if checksum is wrong\n\n\n  function decodeUnsafe(string) {\n    var buffer = base58.decodeUnsafe(string);\n    if (!buffer) return;\n    return decodeRaw(buffer);\n  }\n\n  function decode(string) {\n    var buffer = base58.decode(string);\n    var payload = decodeRaw(buffer, checksumFn);\n    if (!payload) throw new Error('Invalid checksum');\n    return payload;\n  }\n\n  return {\n    encode: encode,\n    decode: decode,\n    decodeUnsafe: decodeUnsafe\n  };\n};","var assert = require('assert');\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar crypto = require('crypto');\n\nvar bs58check = require('bs58check');\n\nvar secp256k1 = require('secp256k1');\n\nvar MASTER_SECRET = Buffer.from('Bitcoin seed', 'utf8');\nvar HARDENED_OFFSET = 0x80000000;\nvar LEN = 78; // Bitcoin hardcoded by default, can use package `coininfo` for others\n\nvar BITCOIN_VERSIONS = {\n  private: 0x0488ADE4,\n  public: 0x0488B21E\n};\n\nfunction HDKey(versions) {\n  this.versions = versions || BITCOIN_VERSIONS;\n  this.depth = 0;\n  this.index = 0;\n  this._privateKey = null;\n  this._publicKey = null;\n  this.chainCode = null;\n  this._fingerprint = 0;\n  this.parentFingerprint = 0;\n}\n\nObject.defineProperty(HDKey.prototype, 'fingerprint', {\n  get: function get() {\n    return this._fingerprint;\n  }\n});\nObject.defineProperty(HDKey.prototype, 'identifier', {\n  get: function get() {\n    return this._identifier;\n  }\n});\nObject.defineProperty(HDKey.prototype, 'pubKeyHash', {\n  get: function get() {\n    return this.identifier;\n  }\n});\nObject.defineProperty(HDKey.prototype, 'privateKey', {\n  get: function get() {\n    return this._privateKey;\n  },\n  set: function set(value) {\n    assert.equal(value.length, 32, 'Private key must be 32 bytes.');\n    assert(secp256k1.privateKeyVerify(value) === true, 'Invalid private key');\n    this._privateKey = value;\n    this._publicKey = Buffer.from(secp256k1.publicKeyCreate(value, true));\n    this._identifier = hash160(this.publicKey);\n    this._fingerprint = this._identifier.slice(0, 4).readUInt32BE(0);\n  }\n});\nObject.defineProperty(HDKey.prototype, 'publicKey', {\n  get: function get() {\n    return this._publicKey;\n  },\n  set: function set(value) {\n    assert(value.length === 33 || value.length === 65, 'Public key must be 33 or 65 bytes.');\n    assert(secp256k1.publicKeyVerify(value) === true, 'Invalid public key');\n    this._publicKey = Buffer.from(secp256k1.publicKeyConvert(value, true)); // force compressed point\n\n    this._identifier = hash160(this.publicKey);\n    this._fingerprint = this._identifier.slice(0, 4).readUInt32BE(0);\n    this._privateKey = null;\n  }\n});\nObject.defineProperty(HDKey.prototype, 'privateExtendedKey', {\n  get: function get() {\n    if (this._privateKey) return bs58check.encode(serialize(this, this.versions.private, Buffer.concat([Buffer.alloc(1, 0), this.privateKey])));else return null;\n  }\n});\nObject.defineProperty(HDKey.prototype, 'publicExtendedKey', {\n  get: function get() {\n    return bs58check.encode(serialize(this, this.versions.public, this.publicKey));\n  }\n});\n\nHDKey.prototype.derive = function (path) {\n  if (path === 'm' || path === 'M' || path === \"m'\" || path === \"M'\") {\n    return this;\n  }\n\n  var entries = path.split('/');\n  var hdkey = this;\n  entries.forEach(function (c, i) {\n    if (i === 0) {\n      assert(/^[mM]{1}/.test(c), 'Path must start with \"m\" or \"M\"');\n      return;\n    }\n\n    var hardened = c.length > 1 && c[c.length - 1] === \"'\";\n    var childIndex = parseInt(c, 10); // & (HARDENED_OFFSET - 1)\n\n    assert(childIndex < HARDENED_OFFSET, 'Invalid index');\n    if (hardened) childIndex += HARDENED_OFFSET;\n    hdkey = hdkey.deriveChild(childIndex);\n  });\n  return hdkey;\n};\n\nHDKey.prototype.deriveChild = function (index) {\n  var isHardened = index >= HARDENED_OFFSET;\n  var indexBuffer = Buffer.allocUnsafe(4);\n  indexBuffer.writeUInt32BE(index, 0);\n  var data;\n\n  if (isHardened) {\n    // Hardened child\n    assert(this.privateKey, 'Could not derive hardened child key');\n    var pk = this.privateKey;\n    var zb = Buffer.alloc(1, 0);\n    pk = Buffer.concat([zb, pk]); // data = 0x00 || ser256(kpar) || ser32(index)\n\n    data = Buffer.concat([pk, indexBuffer]);\n  } else {\n    // Normal child\n    // data = serP(point(kpar)) || ser32(index)\n    //      = serP(Kpar) || ser32(index)\n    data = Buffer.concat([this.publicKey, indexBuffer]);\n  }\n\n  var I = crypto.createHmac('sha512', this.chainCode).update(data).digest();\n  var IL = I.slice(0, 32);\n  var IR = I.slice(32);\n  var hd = new HDKey(this.versions); // Private parent key -> private child key\n\n  if (this.privateKey) {\n    // ki = parse256(IL) + kpar (mod n)\n    try {\n      hd.privateKey = Buffer.from(secp256k1.privateKeyTweakAdd(Buffer.from(this.privateKey), IL)); // throw if IL >= n || (privateKey + IL) === 0\n    } catch (err) {\n      // In case parse256(IL) >= n or ki == 0, one should proceed with the next value for i\n      return this.deriveChild(index + 1);\n    } // Public parent key -> public child key\n\n  } else {\n    // Ki = point(parse256(IL)) + Kpar\n    //    = G*IL + Kpar\n    try {\n      hd.publicKey = Buffer.from(secp256k1.publicKeyTweakAdd(Buffer.from(this.publicKey), IL, true)); // throw if IL >= n || (g**IL + publicKey) is infinity\n    } catch (err) {\n      // In case parse256(IL) >= n or Ki is the point at infinity, one should proceed with the next value for i\n      return this.deriveChild(index + 1);\n    }\n  }\n\n  hd.chainCode = IR;\n  hd.depth = this.depth + 1;\n  hd.parentFingerprint = this.fingerprint; // .readUInt32BE(0)\n\n  hd.index = index;\n  return hd;\n};\n\nHDKey.prototype.sign = function (hash) {\n  return Buffer.from(secp256k1.ecdsaSign(hash, this.privateKey).signature);\n};\n\nHDKey.prototype.verify = function (hash, signature) {\n  return secp256k1.ecdsaVerify(Uint8Array.from(signature), Uint8Array.from(hash), Uint8Array.from(this.publicKey));\n};\n\nHDKey.prototype.wipePrivateData = function () {\n  if (this._privateKey) crypto.randomBytes(this._privateKey.length).copy(this._privateKey);\n  this._privateKey = null;\n  return this;\n};\n\nHDKey.prototype.toJSON = function () {\n  return {\n    xpriv: this.privateExtendedKey,\n    xpub: this.publicExtendedKey\n  };\n};\n\nHDKey.fromMasterSeed = function (seedBuffer, versions) {\n  var I = crypto.createHmac('sha512', MASTER_SECRET).update(seedBuffer).digest();\n  var IL = I.slice(0, 32);\n  var IR = I.slice(32);\n  var hdkey = new HDKey(versions);\n  hdkey.chainCode = IR;\n  hdkey.privateKey = IL;\n  return hdkey;\n};\n\nHDKey.fromExtendedKey = function (base58key, versions) {\n  // => version(4) || depth(1) || fingerprint(4) || index(4) || chain(32) || key(33)\n  versions = versions || BITCOIN_VERSIONS;\n  var hdkey = new HDKey(versions);\n  var keyBuffer = bs58check.decode(base58key);\n  var version = keyBuffer.readUInt32BE(0);\n  assert(version === versions.private || version === versions.public, 'Version mismatch: does not match private or public');\n  hdkey.depth = keyBuffer.readUInt8(4);\n  hdkey.parentFingerprint = keyBuffer.readUInt32BE(5);\n  hdkey.index = keyBuffer.readUInt32BE(9);\n  hdkey.chainCode = keyBuffer.slice(13, 45);\n  var key = keyBuffer.slice(45);\n\n  if (key.readUInt8(0) === 0) {\n    // private\n    assert(version === versions.private, 'Version mismatch: version does not match private');\n    hdkey.privateKey = key.slice(1); // cut off first 0x0 byte\n  } else {\n    assert(version === versions.public, 'Version mismatch: version does not match public');\n    hdkey.publicKey = key;\n  }\n\n  return hdkey;\n};\n\nHDKey.fromJSON = function (obj) {\n  return HDKey.fromExtendedKey(obj.xpriv);\n};\n\nfunction serialize(hdkey, version, key) {\n  // => version(4) || depth(1) || fingerprint(4) || index(4) || chain(32) || key(33)\n  var buffer = Buffer.allocUnsafe(LEN);\n  buffer.writeUInt32BE(version, 0);\n  buffer.writeUInt8(hdkey.depth, 4);\n  var fingerprint = hdkey.depth ? hdkey.parentFingerprint : 0x00000000;\n  buffer.writeUInt32BE(fingerprint, 5);\n  buffer.writeUInt32BE(hdkey.index, 9);\n  hdkey.chainCode.copy(buffer, 13);\n  key.copy(buffer, 45);\n  return buffer;\n}\n\nfunction hash160(buf) {\n  var sha = crypto.createHash('sha256').update(buf).digest();\n  return crypto.createHash('ripemd160').update(sha).digest();\n}\n\nHDKey.HARDENED_OFFSET = HARDENED_OFFSET;\nmodule.exports = HDKey;","module.exports = require('./lib')(require('./lib/elliptic'));","var _createForOfIteratorHelper = require(\"/Users/sora/keystone/react-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar errors = {\n  IMPOSSIBLE_CASE: 'Impossible case. Please create issue.',\n  TWEAK_ADD: 'The tweak was out of range or the resulted private key is invalid',\n  TWEAK_MUL: 'The tweak was out of range or equal to zero',\n  CONTEXT_RANDOMIZE_UNKNOW: 'Unknow error on context randomization',\n  SECKEY_INVALID: 'Private Key is invalid',\n  PUBKEY_PARSE: 'Public Key could not be parsed',\n  PUBKEY_SERIALIZE: 'Public Key serialization error',\n  PUBKEY_COMBINE: 'The sum of the public keys is not valid',\n  SIG_PARSE: 'Signature could not be parsed',\n  SIGN: 'The nonce generation function failed, or the private key was invalid',\n  RECOVER: 'Public key could not be recover',\n  ECDH: 'Scalar was invalid (zero or overflow)'\n};\n\nfunction assert(cond, msg) {\n  if (!cond) throw new Error(msg);\n}\n\nfunction isUint8Array(name, value, length) {\n  assert(value instanceof Uint8Array, \"Expected \".concat(name, \" to be an Uint8Array\"));\n\n  if (length !== undefined) {\n    if (Array.isArray(length)) {\n      var numbers = length.join(', ');\n      var msg = \"Expected \".concat(name, \" to be an Uint8Array with length [\").concat(numbers, \"]\");\n      assert(length.includes(value.length), msg);\n    } else {\n      var _msg = \"Expected \".concat(name, \" to be an Uint8Array with length \").concat(length);\n\n      assert(value.length === length, _msg);\n    }\n  }\n}\n\nfunction isCompressed(value) {\n  assert(toTypeString(value) === 'Boolean', 'Expected compressed to be a Boolean');\n}\n\nfunction getAssertedOutput() {\n  var output = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function (len) {\n    return new Uint8Array(len);\n  };\n  var length = arguments.length > 1 ? arguments[1] : undefined;\n  if (typeof output === 'function') output = output(length);\n  isUint8Array('output', output, length);\n  return output;\n}\n\nfunction toTypeString(value) {\n  return Object.prototype.toString.call(value).slice(8, -1);\n}\n\nmodule.exports = function (secp256k1) {\n  return {\n    contextRandomize: function contextRandomize(seed) {\n      assert(seed === null || seed instanceof Uint8Array, 'Expected seed to be an Uint8Array or null');\n      if (seed !== null) isUint8Array('seed', seed, 32);\n\n      switch (secp256k1.contextRandomize(seed)) {\n        case 1:\n          throw new Error(errors.CONTEXT_RANDOMIZE_UNKNOW);\n      }\n    },\n    privateKeyVerify: function privateKeyVerify(seckey) {\n      isUint8Array('private key', seckey, 32);\n      return secp256k1.privateKeyVerify(seckey) === 0;\n    },\n    privateKeyNegate: function privateKeyNegate(seckey) {\n      isUint8Array('private key', seckey, 32);\n\n      switch (secp256k1.privateKeyNegate(seckey)) {\n        case 0:\n          return seckey;\n\n        case 1:\n          throw new Error(errors.IMPOSSIBLE_CASE);\n      }\n    },\n    privateKeyTweakAdd: function privateKeyTweakAdd(seckey, tweak) {\n      isUint8Array('private key', seckey, 32);\n      isUint8Array('tweak', tweak, 32);\n\n      switch (secp256k1.privateKeyTweakAdd(seckey, tweak)) {\n        case 0:\n          return seckey;\n\n        case 1:\n          throw new Error(errors.TWEAK_ADD);\n      }\n    },\n    privateKeyTweakMul: function privateKeyTweakMul(seckey, tweak) {\n      isUint8Array('private key', seckey, 32);\n      isUint8Array('tweak', tweak, 32);\n\n      switch (secp256k1.privateKeyTweakMul(seckey, tweak)) {\n        case 0:\n          return seckey;\n\n        case 1:\n          throw new Error(errors.TWEAK_MUL);\n      }\n    },\n    publicKeyVerify: function publicKeyVerify(pubkey) {\n      isUint8Array('public key', pubkey, [33, 65]);\n      return secp256k1.publicKeyVerify(pubkey) === 0;\n    },\n    publicKeyCreate: function publicKeyCreate(seckey) {\n      var compressed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var output = arguments.length > 2 ? arguments[2] : undefined;\n      isUint8Array('private key', seckey, 32);\n      isCompressed(compressed);\n      output = getAssertedOutput(output, compressed ? 33 : 65);\n\n      switch (secp256k1.publicKeyCreate(output, seckey)) {\n        case 0:\n          return output;\n\n        case 1:\n          throw new Error(errors.SECKEY_INVALID);\n\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE);\n      }\n    },\n    publicKeyConvert: function publicKeyConvert(pubkey) {\n      var compressed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var output = arguments.length > 2 ? arguments[2] : undefined;\n      isUint8Array('public key', pubkey, [33, 65]);\n      isCompressed(compressed);\n      output = getAssertedOutput(output, compressed ? 33 : 65);\n\n      switch (secp256k1.publicKeyConvert(output, pubkey)) {\n        case 0:\n          return output;\n\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE);\n\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE);\n      }\n    },\n    publicKeyNegate: function publicKeyNegate(pubkey) {\n      var compressed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var output = arguments.length > 2 ? arguments[2] : undefined;\n      isUint8Array('public key', pubkey, [33, 65]);\n      isCompressed(compressed);\n      output = getAssertedOutput(output, compressed ? 33 : 65);\n\n      switch (secp256k1.publicKeyNegate(output, pubkey)) {\n        case 0:\n          return output;\n\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE);\n\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE);\n\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE);\n      }\n    },\n    publicKeyCombine: function publicKeyCombine(pubkeys) {\n      var compressed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var output = arguments.length > 2 ? arguments[2] : undefined;\n      assert(Array.isArray(pubkeys), 'Expected public keys to be an Array');\n      assert(pubkeys.length > 0, 'Expected public keys array will have more than zero items');\n\n      var _iterator = _createForOfIteratorHelper(pubkeys),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var pubkey = _step.value;\n          isUint8Array('public key', pubkey, [33, 65]);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      isCompressed(compressed);\n      output = getAssertedOutput(output, compressed ? 33 : 65);\n\n      switch (secp256k1.publicKeyCombine(output, pubkeys)) {\n        case 0:\n          return output;\n\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE);\n\n        case 2:\n          throw new Error(errors.PUBKEY_COMBINE);\n\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE);\n      }\n    },\n    publicKeyTweakAdd: function publicKeyTweakAdd(pubkey, tweak) {\n      var compressed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var output = arguments.length > 3 ? arguments[3] : undefined;\n      isUint8Array('public key', pubkey, [33, 65]);\n      isUint8Array('tweak', tweak, 32);\n      isCompressed(compressed);\n      output = getAssertedOutput(output, compressed ? 33 : 65);\n\n      switch (secp256k1.publicKeyTweakAdd(output, pubkey, tweak)) {\n        case 0:\n          return output;\n\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE);\n\n        case 2:\n          throw new Error(errors.TWEAK_ADD);\n      }\n    },\n    publicKeyTweakMul: function publicKeyTweakMul(pubkey, tweak) {\n      var compressed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var output = arguments.length > 3 ? arguments[3] : undefined;\n      isUint8Array('public key', pubkey, [33, 65]);\n      isUint8Array('tweak', tweak, 32);\n      isCompressed(compressed);\n      output = getAssertedOutput(output, compressed ? 33 : 65);\n\n      switch (secp256k1.publicKeyTweakMul(output, pubkey, tweak)) {\n        case 0:\n          return output;\n\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE);\n\n        case 2:\n          throw new Error(errors.TWEAK_MUL);\n      }\n    },\n    signatureNormalize: function signatureNormalize(sig) {\n      isUint8Array('signature', sig, 64);\n\n      switch (secp256k1.signatureNormalize(sig)) {\n        case 0:\n          return sig;\n\n        case 1:\n          throw new Error(errors.SIG_PARSE);\n      }\n    },\n    signatureExport: function signatureExport(sig, output) {\n      isUint8Array('signature', sig, 64);\n      output = getAssertedOutput(output, 72);\n      var obj = {\n        output: output,\n        outputlen: 72\n      };\n\n      switch (secp256k1.signatureExport(obj, sig)) {\n        case 0:\n          return output.slice(0, obj.outputlen);\n\n        case 1:\n          throw new Error(errors.SIG_PARSE);\n\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE);\n      }\n    },\n    signatureImport: function signatureImport(sig, output) {\n      isUint8Array('signature', sig);\n      output = getAssertedOutput(output, 64);\n\n      switch (secp256k1.signatureImport(output, sig)) {\n        case 0:\n          return output;\n\n        case 1:\n          throw new Error(errors.SIG_PARSE);\n\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE);\n      }\n    },\n    ecdsaSign: function ecdsaSign(msg32, seckey) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var output = arguments.length > 3 ? arguments[3] : undefined;\n      isUint8Array('message', msg32, 32);\n      isUint8Array('private key', seckey, 32);\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object');\n      if (options.data !== undefined) isUint8Array('options.data', options.data);\n      if (options.noncefn !== undefined) assert(toTypeString(options.noncefn) === 'Function', 'Expected options.noncefn to be a Function');\n      output = getAssertedOutput(output, 64);\n      var obj = {\n        signature: output,\n        recid: null\n      };\n\n      switch (secp256k1.ecdsaSign(obj, msg32, seckey, options.data, options.noncefn)) {\n        case 0:\n          return obj;\n\n        case 1:\n          throw new Error(errors.SIGN);\n\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE);\n      }\n    },\n    ecdsaVerify: function ecdsaVerify(sig, msg32, pubkey) {\n      isUint8Array('signature', sig, 64);\n      isUint8Array('message', msg32, 32);\n      isUint8Array('public key', pubkey, [33, 65]);\n\n      switch (secp256k1.ecdsaVerify(sig, msg32, pubkey)) {\n        case 0:\n          return true;\n\n        case 3:\n          return false;\n\n        case 1:\n          throw new Error(errors.SIG_PARSE);\n\n        case 2:\n          throw new Error(errors.PUBKEY_PARSE);\n      }\n    },\n    ecdsaRecover: function ecdsaRecover(sig, recid, msg32) {\n      var compressed = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n      var output = arguments.length > 4 ? arguments[4] : undefined;\n      isUint8Array('signature', sig, 64);\n      assert(toTypeString(recid) === 'Number' && recid >= 0 && recid <= 3, 'Expected recovery id to be a Number within interval [0, 3]');\n      isUint8Array('message', msg32, 32);\n      isCompressed(compressed);\n      output = getAssertedOutput(output, compressed ? 33 : 65);\n\n      switch (secp256k1.ecdsaRecover(output, sig, recid, msg32)) {\n        case 0:\n          return output;\n\n        case 1:\n          throw new Error(errors.SIG_PARSE);\n\n        case 2:\n          throw new Error(errors.RECOVER);\n\n        case 3:\n          throw new Error(errors.IMPOSSIBLE_CASE);\n      }\n    },\n    ecdh: function ecdh(pubkey, seckey) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var output = arguments.length > 3 ? arguments[3] : undefined;\n      isUint8Array('public key', pubkey, [33, 65]);\n      isUint8Array('private key', seckey, 32);\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object');\n      if (options.data !== undefined) isUint8Array('options.data', options.data);\n\n      if (options.hashfn !== undefined) {\n        assert(toTypeString(options.hashfn) === 'Function', 'Expected options.hashfn to be a Function');\n        if (options.xbuf !== undefined) isUint8Array('options.xbuf', options.xbuf, 32);\n        if (options.ybuf !== undefined) isUint8Array('options.ybuf', options.ybuf, 32);\n        isUint8Array('output', output);\n      } else {\n        output = getAssertedOutput(output, 32);\n      }\n\n      switch (secp256k1.ecdh(output, pubkey, seckey, options.data, options.hashfn, options.xbuf, options.ybuf)) {\n        case 0:\n          return output;\n\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE);\n\n        case 2:\n          throw new Error(errors.ECDH);\n      }\n    }\n  };\n};","var EC = require('elliptic').ec;\n\nvar ec = new EC('secp256k1');\nvar ecparams = ec.curve; // Hack, we can not use bn.js@5, while elliptic uses bn.js@4\n// See https://github.com/indutny/elliptic/issues/191#issuecomment-569888758\n\nvar BN = ecparams.n.constructor;\n\nfunction loadCompressedPublicKey(first, xbuf) {\n  var x = new BN(xbuf); // overflow\n\n  if (x.cmp(ecparams.p) >= 0) return null;\n  x = x.toRed(ecparams.red); // compute corresponding Y\n\n  var y = x.redSqr().redIMul(x).redIAdd(ecparams.b).redSqrt();\n  if (first === 0x03 !== y.isOdd()) y = y.redNeg();\n  return ec.keyPair({\n    pub: {\n      x: x,\n      y: y\n    }\n  });\n}\n\nfunction loadUncompressedPublicKey(first, xbuf, ybuf) {\n  var x = new BN(xbuf);\n  var y = new BN(ybuf); // overflow\n\n  if (x.cmp(ecparams.p) >= 0 || y.cmp(ecparams.p) >= 0) return null;\n  x = x.toRed(ecparams.red);\n  y = y.toRed(ecparams.red); // is odd flag\n\n  if ((first === 0x06 || first === 0x07) && y.isOdd() !== (first === 0x07)) return null; // x*x*x + b = y*y\n\n  var x3 = x.redSqr().redIMul(x);\n  if (!y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero()) return null;\n  return ec.keyPair({\n    pub: {\n      x: x,\n      y: y\n    }\n  });\n}\n\nfunction loadPublicKey(pubkey) {\n  // length should be validated in interface\n  var first = pubkey[0];\n\n  switch (first) {\n    case 0x02:\n    case 0x03:\n      if (pubkey.length !== 33) return null;\n      return loadCompressedPublicKey(first, pubkey.subarray(1, 33));\n\n    case 0x04:\n    case 0x06:\n    case 0x07:\n      if (pubkey.length !== 65) return null;\n      return loadUncompressedPublicKey(first, pubkey.subarray(1, 33), pubkey.subarray(33, 65));\n\n    default:\n      return null;\n  }\n}\n\nfunction savePublicKey(output, point) {\n  var pubkey = point.encode(null, output.length === 33); // Loop should be faster because we do not need create extra Uint8Array\n  // output.set(new Uint8Array(pubkey))\n\n  for (var i = 0; i < output.length; ++i) {\n    output[i] = pubkey[i];\n  }\n}\n\nmodule.exports = {\n  contextRandomize: function contextRandomize() {\n    return 0;\n  },\n  privateKeyVerify: function privateKeyVerify(seckey) {\n    var bn = new BN(seckey);\n    return bn.cmp(ecparams.n) < 0 && !bn.isZero() ? 0 : 1;\n  },\n  privateKeyNegate: function privateKeyNegate(seckey) {\n    var bn = new BN(seckey);\n    var negate = ecparams.n.sub(bn).umod(ecparams.n).toArrayLike(Uint8Array, 'be', 32);\n    seckey.set(negate);\n    return 0;\n  },\n  privateKeyTweakAdd: function privateKeyTweakAdd(seckey, tweak) {\n    var bn = new BN(tweak);\n    if (bn.cmp(ecparams.n) >= 0) return 1;\n    bn.iadd(new BN(seckey));\n    if (bn.cmp(ecparams.n) >= 0) bn.isub(ecparams.n);\n    if (bn.isZero()) return 1;\n    var tweaked = bn.toArrayLike(Uint8Array, 'be', 32);\n    seckey.set(tweaked);\n    return 0;\n  },\n  privateKeyTweakMul: function privateKeyTweakMul(seckey, tweak) {\n    var bn = new BN(tweak);\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1;\n    bn.imul(new BN(seckey));\n    if (bn.cmp(ecparams.n) >= 0) bn = bn.umod(ecparams.n);\n    var tweaked = bn.toArrayLike(Uint8Array, 'be', 32);\n    seckey.set(tweaked);\n    return 0;\n  },\n  publicKeyVerify: function publicKeyVerify(pubkey) {\n    var pair = loadPublicKey(pubkey);\n    return pair === null ? 1 : 0;\n  },\n  publicKeyCreate: function publicKeyCreate(output, seckey) {\n    var bn = new BN(seckey);\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1;\n    var point = ec.keyFromPrivate(seckey).getPublic();\n    savePublicKey(output, point);\n    return 0;\n  },\n  publicKeyConvert: function publicKeyConvert(output, pubkey) {\n    var pair = loadPublicKey(pubkey);\n    if (pair === null) return 1;\n    var point = pair.getPublic();\n    savePublicKey(output, point);\n    return 0;\n  },\n  publicKeyNegate: function publicKeyNegate(output, pubkey) {\n    var pair = loadPublicKey(pubkey);\n    if (pair === null) return 1;\n    var point = pair.getPublic();\n    point.y = point.y.redNeg();\n    savePublicKey(output, point);\n    return 0;\n  },\n  publicKeyCombine: function publicKeyCombine(output, pubkeys) {\n    var pairs = new Array(pubkeys.length);\n\n    for (var i = 0; i < pubkeys.length; ++i) {\n      pairs[i] = loadPublicKey(pubkeys[i]);\n      if (pairs[i] === null) return 1;\n    }\n\n    var point = pairs[0].getPublic();\n\n    for (var _i = 1; _i < pairs.length; ++_i) {\n      point = point.add(pairs[_i].pub);\n    }\n\n    if (point.isInfinity()) return 2;\n    savePublicKey(output, point);\n    return 0;\n  },\n  publicKeyTweakAdd: function publicKeyTweakAdd(output, pubkey, tweak) {\n    var pair = loadPublicKey(pubkey);\n    if (pair === null) return 1;\n    tweak = new BN(tweak);\n    if (tweak.cmp(ecparams.n) >= 0) return 2;\n    var point = pair.getPublic().add(ecparams.g.mul(tweak));\n    if (point.isInfinity()) return 2;\n    savePublicKey(output, point);\n    return 0;\n  },\n  publicKeyTweakMul: function publicKeyTweakMul(output, pubkey, tweak) {\n    var pair = loadPublicKey(pubkey);\n    if (pair === null) return 1;\n    tweak = new BN(tweak);\n    if (tweak.cmp(ecparams.n) >= 0 || tweak.isZero()) return 2;\n    var point = pair.getPublic().mul(tweak);\n    savePublicKey(output, point);\n    return 0;\n  },\n  signatureNormalize: function signatureNormalize(sig) {\n    var r = new BN(sig.subarray(0, 32));\n    var s = new BN(sig.subarray(32, 64));\n    if (r.cmp(ecparams.n) >= 0 || s.cmp(ecparams.n) >= 0) return 1;\n\n    if (s.cmp(ec.nh) === 1) {\n      sig.set(ecparams.n.sub(s).toArrayLike(Uint8Array, 'be', 32), 32);\n    }\n\n    return 0;\n  },\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureExport: function signatureExport(obj, sig) {\n    var sigR = sig.subarray(0, 32);\n    var sigS = sig.subarray(32, 64);\n    if (new BN(sigR).cmp(ecparams.n) >= 0) return 1;\n    if (new BN(sigS).cmp(ecparams.n) >= 0) return 1;\n    var output = obj.output; // Prepare R\n\n    var r = output.subarray(4, 4 + 33);\n    r[0] = 0x00;\n    r.set(sigR, 1);\n    var lenR = 33;\n    var posR = 0;\n\n    for (; lenR > 1 && r[posR] === 0x00 && !(r[posR + 1] & 0x80); --lenR, ++posR) {\n      ;\n    }\n\n    r = r.subarray(posR);\n    if (r[0] & 0x80) return 1;\n    if (lenR > 1 && r[0] === 0x00 && !(r[1] & 0x80)) return 1; // Prepare S\n\n    var s = output.subarray(6 + 33, 6 + 33 + 33);\n    s[0] = 0x00;\n    s.set(sigS, 1);\n    var lenS = 33;\n    var posS = 0;\n\n    for (; lenS > 1 && s[posS] === 0x00 && !(s[posS + 1] & 0x80); --lenS, ++posS) {\n      ;\n    }\n\n    s = s.subarray(posS);\n    if (s[0] & 0x80) return 1;\n    if (lenS > 1 && s[0] === 0x00 && !(s[1] & 0x80)) return 1; // Set output length for return\n\n    obj.outputlen = 6 + lenR + lenS; // Output in specified format\n    // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n\n    output[0] = 0x30;\n    output[1] = obj.outputlen - 2;\n    output[2] = 0x02;\n    output[3] = r.length;\n    output.set(r, 4);\n    output[4 + lenR] = 0x02;\n    output[5 + lenR] = s.length;\n    output.set(s, 6 + lenR);\n    return 0;\n  },\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureImport: function signatureImport(output, sig) {\n    if (sig.length < 8) return 1;\n    if (sig.length > 72) return 1;\n    if (sig[0] !== 0x30) return 1;\n    if (sig[1] !== sig.length - 2) return 1;\n    if (sig[2] !== 0x02) return 1;\n    var lenR = sig[3];\n    if (lenR === 0) return 1;\n    if (5 + lenR >= sig.length) return 1;\n    if (sig[4 + lenR] !== 0x02) return 1;\n    var lenS = sig[5 + lenR];\n    if (lenS === 0) return 1;\n    if (6 + lenR + lenS !== sig.length) return 1;\n    if (sig[4] & 0x80) return 1;\n    if (lenR > 1 && sig[4] === 0x00 && !(sig[5] & 0x80)) return 1;\n    if (sig[lenR + 6] & 0x80) return 1;\n    if (lenS > 1 && sig[lenR + 6] === 0x00 && !(sig[lenR + 7] & 0x80)) return 1;\n    var sigR = sig.subarray(4, 4 + lenR);\n    if (sigR.length === 33 && sigR[0] === 0x00) sigR = sigR.subarray(1);\n    if (sigR.length > 32) return 1;\n    var sigS = sig.subarray(6 + lenR);\n    if (sigS.length === 33 && sigS[0] === 0x00) sigS = sigS.slice(1);\n    if (sigS.length > 32) throw new Error('S length is too long');\n    var r = new BN(sigR);\n    if (r.cmp(ecparams.n) >= 0) r = new BN(0);\n    var s = new BN(sig.subarray(6 + lenR));\n    if (s.cmp(ecparams.n) >= 0) s = new BN(0);\n    output.set(r.toArrayLike(Uint8Array, 'be', 32), 0);\n    output.set(s.toArrayLike(Uint8Array, 'be', 32), 32);\n    return 0;\n  },\n  ecdsaSign: function ecdsaSign(obj, message, seckey, data, noncefn) {\n    if (noncefn) {\n      var _noncefn = noncefn;\n\n      noncefn = function noncefn(counter) {\n        var nonce = _noncefn(message, seckey, null, data, counter);\n\n        var isValid = nonce instanceof Uint8Array && nonce.length === 32;\n        if (!isValid) throw new Error('This is the way');\n        return new BN(nonce);\n      };\n    }\n\n    var d = new BN(seckey);\n    if (d.cmp(ecparams.n) >= 0 || d.isZero()) return 1;\n    var sig;\n\n    try {\n      sig = ec.sign(message, seckey, {\n        canonical: true,\n        k: noncefn,\n        pers: data\n      });\n    } catch (err) {\n      return 1;\n    }\n\n    obj.signature.set(sig.r.toArrayLike(Uint8Array, 'be', 32), 0);\n    obj.signature.set(sig.s.toArrayLike(Uint8Array, 'be', 32), 32);\n    obj.recid = sig.recoveryParam;\n    return 0;\n  },\n  ecdsaVerify: function ecdsaVerify(sig, msg32, pubkey) {\n    var sigObj = {\n      r: sig.subarray(0, 32),\n      s: sig.subarray(32, 64)\n    };\n    var sigr = new BN(sigObj.r);\n    var sigs = new BN(sigObj.s);\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1;\n    if (sigs.cmp(ec.nh) === 1 || sigr.isZero() || sigs.isZero()) return 3;\n    var pair = loadPublicKey(pubkey);\n    if (pair === null) return 2;\n    var point = pair.getPublic();\n    var isValid = ec.verify(msg32, sigObj, point);\n    return isValid ? 0 : 3;\n  },\n  ecdsaRecover: function ecdsaRecover(output, sig, recid, msg32) {\n    var sigObj = {\n      r: sig.slice(0, 32),\n      s: sig.slice(32, 64)\n    };\n    var sigr = new BN(sigObj.r);\n    var sigs = new BN(sigObj.s);\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1;\n    if (sigr.isZero() || sigs.isZero()) return 2; // Can throw `throw new Error('Unable to find sencond key candinate');`\n\n    var point;\n\n    try {\n      point = ec.recoverPubKey(msg32, sigObj, recid);\n    } catch (err) {\n      return 2;\n    }\n\n    savePublicKey(output, point);\n    return 0;\n  },\n  ecdh: function ecdh(output, pubkey, seckey, data, hashfn, xbuf, ybuf) {\n    var pair = loadPublicKey(pubkey);\n    if (pair === null) return 1;\n    var scalar = new BN(seckey);\n    if (scalar.cmp(ecparams.n) >= 0 || scalar.isZero()) return 2;\n    var point = pair.getPublic().mul(scalar);\n\n    if (hashfn === undefined) {\n      var _data = point.encode(null, true);\n\n      var sha256 = ec.hash().update(_data).digest();\n\n      for (var i = 0; i < 32; ++i) {\n        output[i] = sha256[i];\n      }\n    } else {\n      if (!xbuf) xbuf = new Uint8Array(32);\n      var x = point.getX().toArray('be', 32);\n\n      for (var _i2 = 0; _i2 < 32; ++_i2) {\n        xbuf[_i2] = x[_i2];\n      }\n\n      if (!ybuf) ybuf = new Uint8Array(32);\n      var y = point.getY().toArray('be', 32);\n\n      for (var _i3 = 0; _i3 < 32; ++_i3) {\n        ybuf[_i3] = y[_i3];\n      }\n\n      var hash = hashfn(xbuf, ybuf, data);\n      var isValid = hash instanceof Uint8Array && hash.length === output.length;\n      if (!isValid) return 2;\n      output.set(hash);\n    }\n\n    return 0;\n  }\n};"],"sourceRoot":""}