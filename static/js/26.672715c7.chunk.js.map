{"version":3,"sources":["../node_modules/ethereumjs-tx/dist/index.js","../node_modules/ethereumjs-tx/node_modules/ethereumjs-util/dist/secp256k1v3-lib/index.js","../node_modules/ethereumjs-tx/node_modules/ethereumjs-util/dist/secp256k1v3-lib/der.js","../node_modules/ethereumjs-tx/node_modules/ethereumjs-util/dist/constants.js","../node_modules/ethereumjs-tx/node_modules/ethereumjs-util/dist/account.js","../node_modules/ethereumjs-tx/node_modules/ethereumjs-util/dist/signature.js","../node_modules/ethereumjs-tx/node_modules/ethereumjs-util/dist/object.js","../node_modules/ethereumjs-common/dist/chains/index.js","../node_modules/ethereumjs-common/dist/hardforks/index.js","../node_modules/ethereumjs-tx/dist/fake.js","../node_modules/ethjs-util/lib/index.js","../node_modules/rlp/dist/index.js","../node_modules/assert/assert.js","../node_modules/ethereum-cryptography/secp256k1.js","../node_modules/ethereum-cryptography/node_modules/secp256k1/elliptic.js","../node_modules/is-hex-prefixed/src/index.js","../node_modules/ethereum-cryptography/keccak.js","../node_modules/strip-hex-prefix/src/index.js","../node_modules/ethereum-cryptography/node_modules/secp256k1/lib/index.js","../node_modules/ethereum-cryptography/node_modules/secp256k1/lib/elliptic.js","../node_modules/ethereum-cryptography/random.js","../node_modules/ethereum-cryptography/hash-utils.js","../node_modules/ethereumjs-tx/node_modules/ethereumjs-util/dist/bytes.js","../node_modules/ethereumjs-tx/node_modules/ethereumjs-util/dist/secp256k1v3-adapter.js","../node_modules/ethereumjs-tx/node_modules/ethereumjs-util/dist/hash.js","../node_modules/ethereumjs-tx/dist/transaction.js","../node_modules/ethereumjs-tx/node_modules/ethereumjs-util/dist/index.js","../node_modules/ethereumjs-common/dist/index.js"],"names":["Object","defineProperty","exports","value","transaction_1","Transaction","default","fake_1","FakeTransaction","BN","ec","EC","ecparams","curve","privateKeyExport","privateKey","compressed","d","ucmp","n","Error","point","g","mul","toPublicKey","getX","getY","privateKeyModInverse","bn","isZero","invm","toArrayLike","Buffer","signatureImport","sigObj","r","s","concat","ecdhUnsafe","publicKey","keyFromPublic","scalar","shared","pub","x","y","alloc","isOdd","copy","EC_PRIVKEY_EXPORT_DER_COMPRESSED","from","EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED","result","privateKeyImport","length","index","lenb","len","slice","signatureImportLax","signature","lenbyte","rlen","rindex","slen","sindex","rvalue","svalue","KECCAK256_RLP","KECCAK256_RLP_S","KECCAK256_RLP_ARRAY","KECCAK256_RLP_ARRAY_S","KECCAK256_NULL","KECCAK256_NULL_S","TWO_POW256","MAX_INTEGER","importPublic","privateToPublic","privateToAddress","publicToAddress","pubToAddress","isValidPublic","isValidPrivate","isPrecompiled","generateAddress2","generateAddress","isValidChecksumAddress","toChecksumAddress","isZeroAddress","isValidAddress","zeroAddress","assert","ethjsUtil","secp256k1","bytes_1","hash_1","addr","zeros","bufferToHex","address","test","addHexPrefix","eip1191ChainId","stripHexPrefix","toLowerCase","prefix","undefined","toString","hash","keccak","ret","i","parseInt","toUpperCase","nonce","toBuffer","nonceBN","rlphash","toArray","salt","initCode","fromBuf","saltBuf","initCodeBuf","keccak256","a","unpad","privateKeyVerify","sanitize","publicKeyVerify","pubKey","publicKeyConvert","publicKeyCreate","hashPersonalMessage","isValidSignature","fromRpcSig","toRpcSig","ecrecover","ecsign","calculateSigRecovery","v","chainId","isValidSigRecovery","recovery","msgHash","sig","sign","setLength","senderPubKey","recover","setLengthLeft","buf","homesteadOrLater","SECP256K1_N_DIV_2","SECP256K1_N","rBN","sBN","gt","cmp","message","defineProperties","rlp","self","fields","data","raw","_fields","toJSON","label","obj_1","forEach","field","baToJSON","serialize","encode","getter","setter","allowZero","allocUnsafe","allowLess","stripZeros","name","push","enumerable","configurable","get","set","alias","isBuffer","decode","Array","isArray","keys_1","keys","indexOf","chains","names","mainnet","ropsten","rinkeby","kovan","goerli","hardforks","__extends","this","_extendStatics","b","setPrototypeOf","__proto__","p","hasOwnProperty","__","constructor","prototype","create","ethereumjs_util_1","buffer_1","_super","opts","_this","call","getSenderAddress","val","_from","txData","includeSignature","fakeKey","isHexPrefixed","padToEven","intToHex","module","arrayContainsArray","superset","subset","some","Boolean","intToBuffer","hex","getBinarySize","str","byteLength","fromAscii","stringValue","charCodeAt","fromUtf8","replace","toAscii","l","substring","code","substr","String","fromCharCode","toUtf8","getKeys","params","key","allowEmpty","isHexString","match","getLength","safeParseInt","base","encodeLength","offset","hexLength","firstByte","integer","Uint8Array","isBN","input","output","inputBuf","stream","decoded","_decode","llength","innerRemainder","remainder","totalLength","inputBuffer","objectAssign","compare","Math","min","global","_isBuffer","util","hasOwn","pSlice","functionsHaveNames","pToString","obj","isView","arrbuf","ArrayBuffer","DataView","buffer","ok","regex","getName","func","isFunction","truncate","inspect","something","rawname","fail","actual","expected","operator","stackStartFunction","AssertionError","_deepEqual","strict","memos","isDate","getTime","isRegExp","source","multiline","lastIndex","ignoreCase","Float32Array","Float64Array","actualIndex","actualVisitedObjects","isPrimitive","getPrototypeOf","aIsArgs","isArguments","bIsArgs","ka","objectKeys","kb","sort","objEquiv","object","expectedException","e","isPrototypeOf","_throws","shouldThrow","block","TypeError","error","_tryBlock","userProvidedMessage","isUnexpectedException","isError","options","generatedMessage","captureStackTrace","err","stack","out","fn_name","idx","next_line","inherits","equal","notEqual","deepEqual","deepStrictEqual","notDeepEqual","notDeepStrictEqual","strictEqual","notStrictEqual","throws","doesNotThrow","ifError","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","done","then","apply","__generator","body","f","t","_","sent","trys","ops","verb","Symbol","iterator","op","pop","secp256k1_1","random_1","createPrivateKey","pk","_a","getRandomBytes","createPrivateKeySync","getRandomBytesSync","m","__export","hash_utils_1","createKeccakHash","keccak224","createHashFunction","keccak384","keccak512","_createForOfIteratorHelper","errors","cond","msg","isUint8Array","numbers","join","includes","_msg","isCompressed","toTypeString","getAssertedOutput","arguments","contextRandomize","seed","seckey","privateKeyNegate","privateKeyTweakAdd","tweak","privateKeyTweakMul","pubkey","publicKeyNegate","publicKeyCombine","pubkeys","_step","_iterator","publicKeyTweakAdd","publicKeyTweakMul","signatureNormalize","signatureExport","outputlen","ecdsaSign","msg32","noncefn","recid","ecdsaVerify","ecdsaRecover","ecdh","hashfn","xbuf","ybuf","loadPublicKey","first","toRed","red","redSqr","redIMul","redIAdd","redSqrt","redNeg","keyPair","loadCompressedPublicKey","subarray","x3","redISub","loadUncompressedPublicKey","savePublicKey","negate","sub","umod","iadd","isub","tweaked","imul","keyFromPrivate","getPublic","pair","pairs","_i","add","isInfinity","nh","sigR","sigS","lenR","posR","lenS","posS","_noncefn","counter","canonical","k","pers","recoveryParam","sigr","sigs","verify","recoverPubKey","_data","sha256","update","digest","_i2","_i3","randombytes","bytes","resp","hashConstructor","toUnsigned","fromSigned","bufferToInt","setLengthRight","fill","right","toNumber","num","fromTwos","toTwos","ba","array","secp256k1v3","der","RangeError","publicKeys","signOptions","algo","attempt","bufferAlgo","bufferData","ripemd160","k256","createHash","bits","padded","__assign","assign","ethereumjs_common_1","N_DIV_2","common","chain","hardfork","_common","bind","_validateV","_overrideVSetterWithValidation","toCreationAddress","to","items","_implementsEIP155","getChainId","getSenderPublicKey","verifySignature","_senderPubKey","gteHardfork","useChainIdWhileRecoveringPubKey","getDataFee","cost","iaddn","param","getBaseFee","fee","getUpfrontCost","gasLimit","gasPrice","validate","stringError","labels","vInt","_isSigned","vDescriptor","getOwnPropertyDescriptor","onEIP155BlockOrLater","__createBinding","o","k2","__exportStar","chains_1","hardforks_1","Common","supportedHardforks","_chainParams","setChain","_hardfork","_supportedHardforks","setHardfork","forCustomChain","baseChain","customChainParams","standardChainParams","_getChainParams","required_1","_isSupportedHardfork","changed","hardforkChanges_1","_chooseHardfork","onlySupported","_getHardfork","hfs_1","hf","chainName","topic","hardforkChanges_2","hfChanges","paramByBlock","blockNumber","activeHfs","activeHardforks","hardforkIsActiveOnBlock","hfBlock","hardforkBlock","activeOnBlock","hardforkGteHardfork","hardfork1","hardfork2","onlyActive","posHf1","posHf2","hardforks_2","hardforkIsActiveOnChain","hfs_2","activeHardfork","isHardforkBlock","consensus","finality","genesis","bootstrapNodes","networkId"],"mappings":"0IAEAA,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAGT,IAAIC,EAAgB,EAAQ,KAE5BF,EAAQG,YAAcD,EAAcE,QAEpC,IAAIC,EAAS,EAAQ,MAErBL,EAAQM,gBAAkBD,EAAOD,S,mCCZjC,YAGAN,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAGT,IAAIM,EAAK,EAAQ,GAIbC,EAAK,IAAIC,EAFJ,EAAQ,KAAYD,IAEb,aACZE,EAAWF,EAAGG,MAElBX,EAAQY,iBAAmB,SAAUC,EAAYC,QAC5B,IAAfA,IACFA,GAAa,GAGf,IAAIC,EAAI,IAAIR,EAAGM,GAEf,GAAIE,EAAEC,KAAKN,EAASO,IAAM,EACxB,MAAM,IAAIC,MAAM,iCAGlB,IAAIC,EAAQX,EAAGY,EAAEC,IAAIN,GACrB,OAAOO,EAAYH,EAAMI,OAAQJ,EAAMK,OAAQV,IAGjDd,EAAQyB,qBAAuB,SAAUZ,GACvC,IAAIa,EAAK,IAAInB,EAAGM,GAEhB,GAAIa,EAAGV,KAAKN,EAASO,IAAM,GAAKS,EAAGC,SACjC,MAAM,IAAIT,MAAM,gCAGlB,OAAOQ,EAAGE,KAAKlB,EAASO,GAAGY,YAAYC,EAAQ,KAAM,KAGvD9B,EAAQ+B,gBAAkB,SAAUC,GAClC,IAAIC,EAAI,IAAI1B,EAAGyB,EAAOC,GAElBA,EAAEjB,KAAKN,EAASO,IAAM,IACxBgB,EAAI,IAAI1B,EAAG,IAGb,IAAI2B,EAAI,IAAI3B,EAAGyB,EAAOE,GAMtB,OAJIA,EAAElB,KAAKN,EAASO,IAAM,IACxBiB,EAAI,IAAI3B,EAAG,IAGNuB,EAAOK,OAAO,CAACF,EAAEJ,YAAYC,EAAQ,KAAM,IAAKI,EAAEL,YAAYC,EAAQ,KAAM,OAGrF9B,EAAQoC,WAAa,SAAUC,EAAWxB,EAAYC,QACjC,IAAfA,IACFA,GAAa,GAGf,IAAIK,EAAQX,EAAG8B,cAAcD,GACzBE,EAAS,IAAIhC,EAAGM,GAEpB,GAAI0B,EAAOvB,KAAKN,EAASO,IAAM,GAAKsB,EAAOZ,SACzC,MAAM,IAAIT,MAAM,yCAGlB,IAAIsB,EAASrB,EAAMsB,IAAIpB,IAAIkB,GAC3B,OAAOjB,EAAYkB,EAAOjB,OAAQiB,EAAOhB,OAAQV,IAGnD,IAAIQ,EAAc,SAAqBoB,EAAGC,EAAG7B,GAC3C,IAAIuB,EAaJ,OAXIvB,IACFuB,EAAYP,EAAOc,MAAM,KACf,GAAKD,EAAEE,QAAU,EAAO,EAClCH,EAAEb,YAAYC,EAAQ,KAAM,IAAIgB,KAAKT,EAAW,MAEhDA,EAAYP,EAAOc,MAAM,KACf,GAAK,EACfF,EAAEb,YAAYC,EAAQ,KAAM,IAAIgB,KAAKT,EAAW,GAChDM,EAAEd,YAAYC,EAAQ,KAAM,IAAIgB,KAAKT,EAAW,KAG3CA,K,6DCrFT,YAGAvC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAET,IAAI8C,EAAmCjB,EAAOkB,KAAK,CACnD,GAAM,IAAM,IAAM,EAAM,EAAM,EAAM,EAAM,GAC1C,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAC1L,IAAM,IAAM,IAAM,GAAM,IAAM,IAAM,EAAM,EAAM,EAAM,GAAM,GAAM,EAAM,EAAM,GAAM,IAAM,GAAM,IAAM,GAAM,EAAM,EAAM,EAAM,GAAM,EAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,GAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,GAAM,EAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,IAAM,GAAM,EAAM,EAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,GAAM,IAAM,GAAM,IAAM,EAAM,GAAM,EAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,GAAM,IAAM,GAAM,IAAM,IAAM,GAAM,IAAM,IAAM,GAAM,GAAM,GAAM,EAAM,EAAM,EAAM,IAAM,GAAM,EAAM,GAAM,EACx0B,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,IAC5LC,EAAqCnB,EAAOkB,KAAK,CACrD,GAAM,IAAM,EAAM,GAAM,EAAM,EAAM,EAAM,EAAM,GAChxgC,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,EAAM,IAEhYhD,EAAQY,iBAAmB,SAAUC,EAAYwB,EAAWvB,QACvC,IAAfA,IACFA,GAAa,GAGf,IAAIoC,EAASpB,EAAOkB,KAAKlC,EAAaiC,EAAmCE,GAGzE,OAFApC,EAAWiC,KAAKI,EAAQpC,EAAa,EAAI,GACzCuB,EAAUS,KAAKI,EAAQpC,EAAa,IAAM,KACnCoC,GAGTlD,EAAQmD,iBAAmB,SAAUtC,GACnC,IAAIuC,EAASvC,EAAWuC,OAEpBC,EAAQ,EACZ,GAAID,EAASC,EAAQ,GAA2B,KAAtBxC,EAAWwC,GAAiB,OAAO,KAG7D,GAAID,GAFJC,GAAS,GAEY,KAA2B,IAApBxC,EAAWwC,IAAgB,OAAO,KAC9D,IAAIC,EAA2B,IAApBzC,EAAWwC,GAEtB,GAAIC,EAAO,GAAKA,EAAO,EAAG,OAAO,KACjC,GAAIF,GAFJC,GAAS,GAEYC,EAAM,OAAO,KAElC,IAAIC,EAAM1C,EAAWwC,EAAQC,EAAO,IAAMA,EAAO,EAAIzC,EAAWwC,EAAQC,EAAO,IAAM,EAAI,GAEzF,OAAIF,GADJC,GAASC,GACYC,GAEjBH,EAASC,EAAQ,GAA2B,IAAtBxC,EAAWwC,IAA6C,IAA1BxC,EAAWwC,EAAQ,IAAyC,IAA1BxC,EAAWwC,EAAQ,IAMzGD,GAFJC,GAAS,GAEY,GAA2B,IAAtBxC,EAAWwC,IAAmBxC,EAAWwC,EAAQ,GAAK,IAAQD,EAASC,EAAQ,EAAIxC,EAAWwC,EAAQ,GAR/F,KAY1BxC,EAAW2C,MAAMH,EAAQ,EAAGA,EAAQ,EAAIxC,EAAWwC,EAAQ,KAGpErD,EAAQyD,mBAAqB,SAAUC,GACrC,IAAIzB,EAAIH,EAAOc,MAAM,GAAI,GACrBV,EAAIJ,EAAOc,MAAM,GAAI,GACrBQ,EAASM,EAAUN,OACnBC,EAAQ,EAEZ,GAA2B,KAAvBK,EAAUL,KACZ,OAAO,KAIT,IAAIM,EAAUD,EAAUL,KAExB,GAAc,IAAVM,IACFN,GAASM,EAAU,KAEPP,EACV,OAAO,KAKX,GAA2B,IAAvBM,EAAUL,KACZ,OAAO,KAIT,IAAIO,EAAOF,EAAUL,KAErB,GAAW,IAAPO,EAAa,CAGf,GAAIP,GAFJM,EAAUC,EAAO,KAEKR,EACpB,OAAO,KAGT,KAAOO,EAAU,GAA0B,IAArBD,EAAUL,GAAiBA,GAAS,EAAGM,GAAW,GAIxE,IAAKC,EAAO,EAAGD,EAAU,EAAGN,GAAS,EAAGM,GAAW,EACjDC,GAAQA,GAAQ,GAAKF,EAAUL,GAInC,GAAIO,EAAOR,EAASC,EAClB,OAAO,KAGT,IAAIQ,EAASR,EAGb,GAFAA,GAASO,EAEkB,IAAvBF,EAAUL,KACZ,OAAO,KAIT,IAAIS,EAAOJ,EAAUL,KAErB,GAAW,IAAPS,EAAa,CAGf,GAAIT,GAFJM,EAAUG,EAAO,KAEKV,EACpB,OAAO,KAGT,KAAOO,EAAU,GAA0B,IAArBD,EAAUL,GAAiBA,GAAS,EAAGM,GAAW,GAIxE,IAAKG,EAAO,EAAGH,EAAU,EAAGN,GAAS,EAAGM,GAAW,EACjDG,GAAQA,GAAQ,GAAKJ,EAAUL,GAInC,GAAIS,EAAOV,EAASC,EAClB,OAAO,KAGT,IAAIU,EAASV,EAGb,IAFAA,GAASS,EAEFF,EAAO,GAA2B,IAAtBF,EAAUG,GAAkBD,GAAQ,EAAGC,GAAU,GAKpE,GAAID,EAAO,GACT,OAAO,KAGT,IAAII,EAASN,EAAUF,MAAMK,EAAQA,EAASD,GAG9C,IAFAI,EAAOlB,KAAKb,EAAG,GAAK+B,EAAOZ,QAEpBU,EAAO,GAA2B,IAAtBJ,EAAUK,GAAkBD,GAAQ,EAAGC,GAAU,GAKpE,GAAID,EAAO,GACT,OAAO,KAGT,IAAIG,EAASP,EAAUF,MAAMO,EAAQA,EAASD,GAE9C,OADAG,EAAOnB,KAAKZ,EAAG,GAAK+B,EAAOb,QACpB,CACLnB,EAAGA,EACHC,EAAGA,M,6DCrKP,YAEApC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQkE,cAAgBlE,EAAQmE,gBAAkBnE,EAAQoE,oBAAsBpE,EAAQqE,sBAAwBrE,EAAQsE,eAAiBtE,EAAQuE,iBAAmBvE,EAAQwE,WAAaxE,EAAQyE,iBAAc,EAE/M,IAAIlE,EAAK,EAAQ,GAMjBP,EAAQyE,YAAc,IAAIlE,EAAG,mEAAoE,IAKjGP,EAAQwE,WAAa,IAAIjE,EAAG,oEAAqE,IAKjGP,EAAQuE,iBAAmB,mEAK3BvE,EAAQsE,eAAiBxC,EAAOkB,KAAKhD,EAAQuE,iBAAkB,OAK/DvE,EAAQqE,sBAAwB,mEAKhCrE,EAAQoE,oBAAsBtC,EAAOkB,KAAKhD,EAAQqE,sBAAuB,OAKzErE,EAAQmE,gBAAkB,mEAK1BnE,EAAQkE,cAAgBpC,EAAOkB,KAAKhD,EAAQmE,gBAAiB,S,6DChD7D,YAEArE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQ0E,aAAe1E,EAAQ2E,gBAAkB3E,EAAQ4E,iBAAmB5E,EAAQ6E,gBAAkB7E,EAAQ8E,aAAe9E,EAAQ+E,cAAgB/E,EAAQgF,eAAiBhF,EAAQiF,cAAgBjF,EAAQkF,iBAAmBlF,EAAQmF,gBAAkBnF,EAAQoF,uBAAyBpF,EAAQqF,kBAAoBrF,EAAQsF,cAAgBtF,EAAQuF,eAAiBvF,EAAQwF,iBAAc,EAE/X,IAAIC,EAAS,EAAQ,KAEjBC,EAAY,EAAQ,KAEpBC,EAAY,EAAQ,KAEpBpF,EAAK,EAAQ,GAEbqF,EAAU,EAAQ,KAElBC,EAAS,EAAQ,KAMrB7F,EAAQwF,YAAc,WACpB,IACIM,EAAOF,EAAQG,MADC,IAEpB,OAAOH,EAAQI,YAAYF,IAO7B9F,EAAQuF,eAAiB,SAAUU,GACjC,MAAO,sBAAsBC,KAAKD,IAOpCjG,EAAQsF,cAAgB,SAAUW,GAEhC,OADejG,EAAQwF,gBACHI,EAAQO,aAAaF,IAc3CjG,EAAQqF,kBAAoB,SAAUY,EAASG,GAC7CH,EAAUP,EAAUW,eAAeJ,GAASK,cAK5C,IAJA,IAAIC,OAA4BC,IAAnBJ,EAA+BA,EAAeK,WAAa,KAAO,GAC3EC,EAAOb,EAAOc,OAAOJ,EAASN,GAASQ,SAAS,OAChDG,EAAM,KAEDC,EAAI,EAAGA,EAAIZ,EAAQ7C,OAAQyD,IAC9BC,SAASJ,EAAKG,GAAI,KAAO,EAC3BD,GAAOX,EAAQY,GAAGE,cAElBH,GAAOX,EAAQY,GAInB,OAAOD,GAST5G,EAAQoF,uBAAyB,SAAUa,EAASG,GAClD,OAAOpG,EAAQuF,eAAeU,IAAYjG,EAAQqF,kBAAkBY,EAASG,KAAoBH,GASnGjG,EAAQmF,gBAAkB,SAAUnC,EAAMgE,GACxChE,EAAO4C,EAAQqB,SAASjE,GACxB,IAAIkE,EAAU,IAAI3G,EAAGyG,GAErB,OAAIE,EAAQvF,SAGHkE,EAAOsB,QAAQ,CAACnE,EAAM,OAAOQ,OAAO,IAItCqC,EAAOsB,QAAQ,CAACnE,EAAMlB,EAAOkB,KAAKkE,EAAQE,aAAa5D,OAAO,KAUvExD,EAAQkF,iBAAmB,SAAUlC,EAAMqE,EAAMC,GAC/C,IAAIC,EAAU3B,EAAQqB,SAASjE,GAC3BwE,EAAU5B,EAAQqB,SAASI,GAC3BI,EAAc7B,EAAQqB,SAASK,GAInC,OAHA7B,EAA0B,KAAnB8B,EAAQnE,QACfqC,EAA0B,KAAnB+B,EAAQpE,QACDyC,EAAO6B,UAAU5F,EAAOK,OAAO,CAACL,EAAOkB,KAAK,KAAM,OAAQuE,EAASC,EAAS3B,EAAO6B,UAAUD,MAC5FjE,OAAO,KAOxBxD,EAAQiF,cAAgB,SAAUgB,GAChC,IAAI0B,EAAI/B,EAAQgC,MAAM3B,GACtB,OAAoB,IAAb0B,EAAEvE,QAAgBuE,EAAE,IAAM,GAAKA,EAAE,IAAM,GAOhD3H,EAAQgF,eAAiB,SAAUnE,GACjC,OAAO8E,EAAUkC,iBAAiBhH,IAUpCb,EAAQ+E,cAAgB,SAAU1C,EAAWyF,GAK3C,YAJiB,IAAbA,IACFA,GAAW,GAGY,KAArBzF,EAAUe,OAELuC,EAAUoC,gBAAgBjG,EAAOK,OAAO,CAACL,EAAOkB,KAAK,CAAC,IAAKX,OAG/DyF,GAIEnC,EAAUoC,gBAAgB1F,IAUnCrC,EAAQ8E,aAAe,SAAUkD,EAAQF,GAavC,YAZiB,IAAbA,IACFA,GAAW,GAGbE,EAASpC,EAAQqB,SAASe,GAEtBF,GAA8B,KAAlBE,EAAO5E,SACrB4E,EAASrC,EAAUsC,iBAAiBD,GAAQ,GAAOxE,MAAM,IAG3DiC,EAAyB,KAAlBuC,EAAO5E,QAEPyC,EAAOc,OAAOqB,GAAQxE,OAAO,KAGtCxD,EAAQ6E,gBAAkB7E,EAAQ8E,aAMlC9E,EAAQ4E,iBAAmB,SAAU/D,GACnC,OAAOb,EAAQ6E,gBAAgB7E,EAAQ2E,gBAAgB9D,KAQzDb,EAAQ2E,gBAAkB,SAAU9D,GAGlC,OAFAA,EAAa+E,EAAQqB,SAASpG,GAEvB8E,EAAUuC,gBAAgBrH,GAAY,GAAO2C,MAAM,IAO5DxD,EAAQ0E,aAAe,SAAUrC,GAO/B,OAJyB,MAFzBA,EAAYuD,EAAQqB,SAAS5E,IAEfe,SACZf,EAAYsD,EAAUsC,iBAAiB5F,GAAW,GAAOmB,MAAM,IAG1DnB,K,6DCzNT,YAEAvC,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQmI,oBAAsBnI,EAAQoI,iBAAmBpI,EAAQqI,WAAarI,EAAQsI,SAAWtI,EAAQuI,UAAYvI,EAAQwI,YAAS,EAEtI,IAAI7C,EAAY,EAAQ,KAEpBpF,EAAK,EAAQ,GAEbqF,EAAU,EAAQ,KAElBC,EAAS,EAAQ,KA0HrB,SAAS4C,EAAqBC,EAAGC,GAC/B,OAAOA,EAAUD,GAAK,EAAIC,EAAU,IAAMD,EAAI,GAGhD,SAASE,EAAmBC,GAC1B,OAAoB,IAAbA,GAA+B,IAAbA,EAzH3B7I,EAAQwI,OAAS,SAAUM,EAASjI,EAAY8H,GAC9C,IAAII,EAAMpD,EAAUqD,KAAKF,EAASjI,GAC9BgI,EAAWE,EAAIF,SAMnB,MALU,CACR5G,EAAG8G,EAAIrF,UAAUF,MAAM,EAAG,IAC1BtB,EAAG6G,EAAIrF,UAAUF,MAAM,GAAI,IAC3BkF,EAAGC,EAAUE,GAAsB,EAAVF,EAAc,IAAME,EAAW,KAU5D7I,EAAQuI,UAAY,SAAUO,EAASJ,EAAGzG,EAAGC,EAAGyG,GAC9C,IAAIjF,EAAY5B,EAAOK,OAAO,CAACyD,EAAQqD,UAAUhH,EAAG,IAAK2D,EAAQqD,UAAU/G,EAAG,KAAM,IAChF2G,EAAWJ,EAAqBC,EAAGC,GAEvC,IAAKC,EAAmBC,GACtB,MAAM,IAAI3H,MAAM,6BAGlB,IAAIgI,EAAevD,EAAUwD,QAAQL,EAASpF,EAAWmF,GACzD,OAAOlD,EAAUsC,iBAAiBiB,GAAc,GAAO1F,MAAM,IAQ/DxD,EAAQsI,SAAW,SAAUI,EAAGzG,EAAGC,EAAGyG,GAGpC,IAAKC,EAFUH,EAAqBC,EAAGC,IAGrC,MAAM,IAAIzH,MAAM,6BAIlB,OAAO0E,EAAQI,YAAYlE,EAAOK,OAAO,CAACyD,EAAQwD,cAAcnH,EAAG,IAAK2D,EAAQwD,cAAclH,EAAG,IAAK0D,EAAQqB,SAASyB,OAQzH1I,EAAQqI,WAAa,SAAUU,GAC7B,IAAIM,EAAMzD,EAAQqB,SAAS8B,GAE3B,GAAmB,KAAfM,EAAIjG,OACN,MAAM,IAAIlC,MAAM,4BAGlB,IAAIwH,EAAIW,EAAI,IAMZ,OAJIX,EAAI,KACNA,GAAK,IAGA,CACLA,EAAGA,EACHzG,EAAGoH,EAAI7F,MAAM,EAAG,IAChBtB,EAAGmH,EAAI7F,MAAM,GAAI,MASrBxD,EAAQoI,iBAAmB,SAAUM,EAAGzG,EAAGC,EAAGoH,EAAkBX,QACrC,IAArBW,IACFA,GAAmB,GAGrB,IAAIC,EAAoB,IAAIhJ,EAAG,mEAAoE,IAC/FiJ,EAAc,IAAIjJ,EAAG,mEAAoE,IAE7F,GAAiB,KAAb0B,EAAEmB,QAA8B,KAAblB,EAAEkB,OACvB,OAAO,EAGT,IAAKwF,EAAmBH,EAAqBC,EAAGC,IAC9C,OAAO,EAGT,IAAIc,EAAM,IAAIlJ,EAAG0B,GACbyH,EAAM,IAAInJ,EAAG2B,GAEjB,QAAIuH,EAAI9H,UAAY8H,EAAIE,GAAGH,IAAgBE,EAAI/H,UAAY+H,EAAIC,GAAGH,OAI9DF,GAAmD,IAA/BI,EAAIE,IAAIL,KAclCvJ,EAAQmI,oBAAsB,SAAU0B,GACtC,IAAItD,EAASzE,EAAOkB,KAAK,iCAAmC6G,EAAQzG,OAAOqD,WAAY,SACvF,OAAOZ,EAAOc,OAAO7E,EAAOK,OAAO,CAACoE,EAAQsD,Q,6DCpI9C,YAEA/J,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQ8J,sBAAmB,EAE3B,IAAIrE,EAAS,EAAQ,KAEjBC,EAAY,EAAQ,KAEpBqE,EAAM,EAAQ,KAEdnE,EAAU,EAAQ,KActB5F,EAAQ8J,iBAAmB,SAAUE,EAAMC,EAAQC,GAwEjD,GAvEAF,EAAKG,IAAM,GACXH,EAAKI,QAAU,GAEfJ,EAAKK,OAAS,SAAUC,GAKtB,QAJc,IAAVA,IACFA,GAAQ,GAGNA,EAAO,CACT,IAAIC,EAAQ,GAMZ,OAJAP,EAAKI,QAAQI,SAAQ,SAAUC,GAC7BF,EAAME,GAAS,KAAOT,EAAKS,GAAOhE,SAAS,UAGtC8D,EAGT,OAAO3E,EAAQ8E,SAASV,EAAKG,MAG/BH,EAAKW,UAAY,WACf,OAAOZ,EAAIa,OAAOZ,EAAKG,MAGzBF,EAAOO,SAAQ,SAAUC,EAAO5D,GAG9B,SAASgE,IACP,OAAOb,EAAKG,IAAItD,GAGlB,SAASiE,EAAOpC,GAGY,QAF1BA,EAAI9C,EAAQqB,SAASyB,IAEfjC,SAAS,QAAoBgE,EAAMM,YACvCrC,EAAI5G,EAAOkJ,YAAY,IAGrBP,EAAMQ,WAAaR,EAAMrH,QAC3BsF,EAAI9C,EAAQsF,WAAWxC,GACvBjD,EAAOgF,EAAMrH,QAAUsF,EAAEtF,OAAQ,aAAeqH,EAAMU,KAAO,uBAAyBV,EAAMrH,OAAS,WAC1FqH,EAAMM,WAA0B,IAAbrC,EAAEtF,SAAiBqH,EAAMrH,QACvDqC,EAAOgF,EAAMrH,SAAWsF,EAAEtF,OAAQ,aAAeqH,EAAMU,KAAO,6BAA+BV,EAAMrH,QAGrG4G,EAAKG,IAAItD,GAAK6B,EApBhBsB,EAAKI,QAAQgB,KAAKX,EAAMU,MAuBxBrL,OAAOC,eAAeiK,EAAMS,EAAMU,KAAM,CACtCE,YAAY,EACZC,cAAc,EACdC,IAAKV,EACLW,IAAKV,IAGHL,EAAMrK,UACR4J,EAAKS,EAAMU,MAAQV,EAAMrK,SAIvBqK,EAAMgB,OACR3L,OAAOC,eAAeiK,EAAMS,EAAMgB,MAAO,CACvCJ,YAAY,EACZC,cAAc,EACdE,IAAKV,EACLS,IAAKV,OAKPX,EASF,GARoB,kBAATA,IACTA,EAAOpI,EAAOkB,KAAK0C,EAAUW,eAAe6D,GAAO,QAGjDpI,EAAO4J,SAASxB,KAClBA,EAAOH,EAAI4B,OAAOzB,IAGhB0B,MAAMC,QAAQ3B,GAAO,CACvB,GAAIA,EAAK9G,OAAS4G,EAAKI,QAAQhH,OAC7B,MAAM,IAAIlC,MAAM,kCAIlBgJ,EAAKM,SAAQ,SAAUzJ,EAAG8F,GACxBmD,EAAKA,EAAKI,QAAQvD,IAAMjB,EAAQqB,SAASlG,UAEtC,IAAoB,kBAATmJ,EAOhB,MAAM,IAAIhJ,MAAM,gBANhB,IAAI4K,EAAShM,OAAOiM,KAAK7B,GACzBD,EAAOO,SAAQ,SAAUC,IACa,IAAhCqB,EAAOE,QAAQvB,EAAMU,QAAcnB,EAAKS,EAAMU,MAAQjB,EAAKO,EAAMU,QAChC,IAAjCW,EAAOE,QAAQvB,EAAMgB,SAAezB,EAAKS,EAAMgB,OAASvB,EAAKO,EAAMgB,e,4DCvH/E3L,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQiM,YAAS,EACjBjM,EAAQiM,OAAS,CACfC,MAAO,CACL,EAAK,UACL,EAAK,UACL,EAAK,UACL,GAAM,QACN,EAAK,UAEPC,QAAS,EAAQ,MACjBC,QAAS,EAAQ,MACjBC,QAAS,EAAQ,MACjBC,MAAO,EAAQ,MACfC,OAAQ,EAAQ,Q,ipXChBlBzM,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQwM,eAAY,EACpBxM,EAAQwM,UAAY,CAAC,CAAC,aAAc,EAAQ,OAAuB,CAAC,YAAa,EAAQ,OAAsB,CAAC,MAAO,EAAQ,OAAgB,CAAC,mBAAoB,EAAQ,OAA6B,CAAC,iBAAkB,EAAQ,OAA2B,CAAC,YAAa,EAAQ,OAAsB,CAAC,iBAAkB,EAAQ,OAA2B,CAAC,aAAc,EAAQ,OAAuB,CAAC,WAAY,EAAQ,OAAqB,CAAC,cAAe,EAAQ,S,4iTCJjd,IAAIC,EAAYC,MAAQA,KAAKD,WAAa,WACxC,IAAIE,EAAiB,SAAuB5L,EAAG6L,GAW7C,OAVAD,EAAiB7M,OAAO+M,gBAAkB,CACxCC,UAAW,cACAlB,OAAS,SAAU7K,EAAG6L,GACjC7L,EAAE+L,UAAYF,IACX,SAAU7L,EAAG6L,GAChB,IAAK,IAAIG,KAAKH,EACRA,EAAEI,eAAeD,KAAIhM,EAAEgM,GAAKH,EAAEG,MAIhBhM,EAAG6L,IAG3B,OAAO,SAAU7L,EAAG6L,GAGlB,SAASK,IACPP,KAAKQ,YAAcnM,EAHrB4L,EAAe5L,EAAG6L,GAMlB7L,EAAEoM,UAAkB,OAANP,EAAa9M,OAAOsN,OAAOR,IAAMK,EAAGE,UAAYP,EAAEO,UAAW,IAAIF,IAtBzC,GA0B1CnN,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAGT,IAAIoN,EAAoB,EAAQ,KAE5BC,EAAW,EAAQ,KAgBnBhN,EAAkB,SAAUiN,GAG9B,SAASjN,EAAgB4J,EAAMsD,QAChB,IAATtD,IACFA,EAAO,SAGI,IAATsD,IACFA,EAAO,IAGT,IAAIC,EAAQF,EAAOG,KAAKhB,KAAMxC,EAAMsD,IAASd,KAE7C5M,OAAOC,eAAe0N,EAAO,OAAQ,CACnCpC,YAAY,EACZC,cAAc,EACdC,IAAK,WACH,OAAOkC,EAAME,oBAEfnC,IAAK,SAAaoC,GACZA,IACFH,EAAMI,MAAQR,EAAkBpG,SAAS2G,OAI/C,IAAIE,EAAS5D,EAMb,OAJI4D,EAAO9K,OACTyK,EAAMzK,KAAOqK,EAAkBpG,SAAS6G,EAAO9K,OAG1CyK,EAwBT,OAvDAhB,EAAUnM,EAAiBiN,GAyC3BjN,EAAgB6M,UAAUzG,KAAO,SAAUqH,GAKzC,QAJyB,IAArBA,IACFA,GAAmB,GAGjBA,GAAoBrB,KAAKmB,OAAwC,KAA/BnB,KAAKmB,MAAMpH,SAAS,OAAe,CAEvE,IAAIuH,EAAUV,EAASxL,OAAOK,OAAO,CAACuK,KAAKmB,MAAOnB,KAAKmB,MAAMrK,MAAM,EAAG,MACtEkJ,KAAK1D,KAAKgF,GAGZ,OAAOT,EAAOJ,UAAUzG,KAAKgH,KAAKhB,KAAMqB,IAGnCzN,EAxDa,CAdF,EAAQ,KAuEZF,SAEhBJ,EAAQI,QAAUE,G,kCC7GlB,YAEA,IAAI2N,EAAgB,EAAQ,KAExB5H,EAAiB,EAAQ,KAQ7B,SAAS6H,EAAUjO,GACjB,IAAI0H,EAAI1H,EAER,GAAiB,kBAAN0H,EACT,MAAM,IAAIzG,MAAM,iFAAmFyG,EAAI,sBAOzG,OAJIA,EAAEvE,OAAS,IACbuE,EAAI,IAAMA,GAGLA,EAST,SAASwG,EAAStH,GAGhB,MAAO,KAFGA,EAAEJ,SAAS,IA2LvB2H,EAAOpO,QAAU,CACfqO,mBApJF,SAA4BC,EAAUC,EAAQC,GAC5C,IAAgC,IAA5B5C,MAAMC,QAAQyC,GAChB,MAAM,IAAIpN,MAAM,oGAAyGoN,EAAW,KAGtI,IAA8B,IAA1B1C,MAAMC,QAAQ0C,GAChB,MAAM,IAAIrN,MAAM,kGAAuGqN,EAAS,KAGlI,OAAOA,EAAOE,QAAQD,GAAS,OAAU,UAAS,SAAUvO,GAC1D,OAAOqO,EAAStC,QAAQ/L,IAAU,MA2IpCyO,YAlLF,SAAqB7H,GACnB,IAAI8H,EAAMR,EAAStH,GACnB,OAAO,IAAI/E,EAAOoM,EAAUS,EAAInL,MAAM,IAAK,QAiL3CoL,cAxKF,SAAuBC,GACrB,GAAmB,kBAARA,EACT,MAAM,IAAI3N,MAAM,oHAAyH2N,EAAM,MAGjJ,OAAO/M,EAAOgN,WAAWD,EAAK,SAoK9BZ,cAAeA,EACf5H,eAAgBA,EAChB6H,UAAWA,EACXC,SAAUA,EACVY,UA/EF,SAAmBC,GAGjB,IAFA,IAAIL,EAAM,GAED9H,EAAI,EAAGA,EAAImI,EAAY5L,OAAQyD,IAAK,CAE3C,IACI5F,EADO+N,EAAYC,WAAWpI,GACrBJ,SAAS,IACtBkI,GAAO1N,EAAEmC,OAAS,EAAI,IAAMnC,EAAIA,EAGlC,MAAO,KAAO0N,GAsEdO,SA9FF,SAAkBF,GAEhB,MAAO,KAAOd,EADJ,IAAIpM,EAAOkN,EAAa,QACNvI,SAAS,QAAQ0I,QAAQ,WAAY,KA6FjEC,QA1HF,SAAiBT,GACf,IAAIE,EAAM,GAENhI,EAAI,EACJwI,EAAIV,EAAIvL,OAMZ,IAJ4B,OAAxBuL,EAAIW,UAAU,EAAG,KACnBzI,EAAI,GAGCA,EAAIwI,EAAGxI,GAAK,EAAG,CACpB,IAAI0I,EAAOzI,SAAS6H,EAAIa,OAAO3I,EAAG,GAAI,IACtCgI,GAAOY,OAAOC,aAAaH,GAG7B,OAAOV,GA4GPc,OAxIF,SAAgBhB,GAEd,OADkB,IAAI7M,EAAOoM,EAAU7H,EAAesI,GAAKQ,QAAQ,WAAY,KAAM,OAClE1I,SAAS,SAuI5BmJ,QA5DF,SAAiBC,EAAQC,EAAKC,GAC5B,IAAKnE,MAAMC,QAAQgE,GACjB,MAAM,IAAI3O,MAAM,mFAAwF2O,EAAS,KAGnH,GAAmB,kBAARC,EACT,MAAM,IAAI5O,MAAM,iFAAsF4O,EAAM,MAK9G,IAFA,IAAI5M,EAAS,GAEJ2D,EAAI,EAAGA,EAAIgJ,EAAOzM,OAAQyD,IAAK,CAEtC,IAAI5G,EAAQ4P,EAAOhJ,GAAGiJ,GAEtB,GAAIC,IAAe9P,EACjBA,EAAQ,QACH,GAAqB,kBAAVA,EAChB,MAAM,IAAIiB,MAAM,eAGlBgC,EAAOkI,KAAKnL,GAGd,OAAOiD,GAqCP8M,YAzBF,SAAqB/P,EAAOmD,GAC1B,QAAqB,kBAAVnD,IAAuBA,EAAMgQ,MAAM,wBAI1C7M,GAAUnD,EAAMmD,SAAW,EAAI,EAAIA,O,4DCrNzC,YAEAtD,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQkQ,UAAYlQ,EAAQ2L,OAAS3L,EAAQ4K,YAAS,EAEtD,IAAIrK,EAAK,EAAQ,GAgCjB,SAAS4P,EAAazH,EAAG0H,GACvB,GAAsB,OAAlB1H,EAAElF,MAAM,EAAG,GACb,MAAM,IAAItC,MAAM,4BAGlB,OAAO4F,SAAS4B,EAAG0H,GAGrB,SAASC,EAAa9M,EAAK+M,GACzB,GAAI/M,EAAM,GACR,OAAOzB,EAAOkB,KAAK,CAACO,EAAM+M,IAE1B,IAAIC,EAAYpC,EAAS5K,GAErBiN,EAAYrC,EAASmC,EAAS,GADpBC,EAAUnN,OAAS,GAEjC,OAAOtB,EAAOkB,KAAKwN,EAAYD,EAAW,OAoK9C,SAAStC,EAAcY,GACrB,MAA2B,OAApBA,EAAIrL,MAAM,EAAG,GAetB,SAAS2K,EAASsC,GAChB,GAAIA,EAAU,EACZ,MAAM,IAAIvP,MAAM,kDAGlB,IAAIyN,EAAM8B,EAAQhK,SAAS,IAC3B,OAAOkI,EAAIvL,OAAS,EAAI,IAAMuL,EAAMA,EAkBtC,SAAS1H,EAASyB,GAChB,IAAK5G,EAAO4J,SAAShD,GAAI,CACvB,GAAiB,kBAANA,EACT,OAAIuF,EAAcvF,GACT5G,EAAOkB,MAjBH2E,EApBE,kBADGkH,EAsC4BnG,GApCzCmG,EAGFZ,EAAcY,GAAOA,EAAIrL,MAAM,GAAKqL,GAiBlCzL,OAAS,EAAI,IAAMuE,EAAIA,EAgBuB,OAE1C7F,EAAOkB,KAAK0F,GAEhB,GAAiB,kBAANA,GAA+B,kBAANA,EACzC,OAAKA,EAhBX,SAAqB+H,GACnB,IAAI9B,EAAMR,EAASsC,GACnB,OAAO3O,EAAOkB,KAAK2L,EAAK,OAiBXD,CAAYhG,GAFZ5G,EAAOkB,KAAK,IAIhB,GAAU,OAAN0F,QAAoBlC,IAANkC,EACvB,OAAO5G,EAAOkB,KAAK,IACd,GAAI0F,aAAagI,WACtB,OAAO5O,EAAOkB,KAAK0F,GACd,GAAInI,EAAGoQ,KAAKjI,GAEjB,OAAO5G,EAAOkB,KAAK0F,EAAEtB,WAErB,MAAM,IAAIlG,MAAM,gBAnCtB,IAAmByG,EArBKkH,EA4DtB,OAAOnG,EA5PT1I,EAAQ4K,OAhBR,SAASA,EAAOgG,GACd,GAAIhF,MAAMC,QAAQ+E,GAAQ,CAGxB,IAFA,IAAIC,EAAS,GAEJhK,EAAI,EAAGA,EAAI+J,EAAMxN,OAAQyD,IAChCgK,EAAOzF,KAAKR,EAAOgG,EAAM/J,KAG3B,IAAIwC,EAAMvH,EAAOK,OAAO0O,GACxB,OAAO/O,EAAOK,OAAO,CAACkO,EAAahH,EAAIjG,OAAQ,KAAMiG,IAErD,IAAIyH,EAAW7J,EAAS2J,GACxB,OAA2B,IAApBE,EAAS1N,QAAgB0N,EAAS,GAAK,IAAMA,EAAWhP,EAAOK,OAAO,CAACkO,EAAaS,EAAS1N,OAAQ,KAAM0N,KAsDtH9Q,EAAQ2L,OAxBR,SAAgBiF,EAAOG,GAKrB,QAJe,IAAXA,IACFA,GAAS,IAGNH,GAA0B,IAAjBA,EAAMxN,OAClB,OAAOtB,EAAOkB,KAAK,IAGrB,IAEIgO,EAgDN,SAASC,EAAQL,GACf,IAAIxN,EAAQ8N,EAAShH,EAAMiH,EAAgBpQ,EACvCiQ,EAAU,GACVR,EAAYI,EAAM,GAEtB,GAAIJ,GAAa,IAEf,MAAO,CACLtG,KAAM0G,EAAMpN,MAAM,EAAG,GACrB4N,UAAWR,EAAMpN,MAAM,IAEpB,GAAIgN,GAAa,IAAM,CAW5B,GARApN,EAASoN,EAAY,IAGnBtG,EADgB,MAAdsG,EACK1O,EAAOkB,KAAK,IAEZ4N,EAAMpN,MAAM,EAAGJ,GAGT,IAAXA,GAAgB8G,EAAK,GAAK,IAC5B,MAAM,IAAIhJ,MAAM,gDAGlB,MAAO,CACLgJ,KAAMA,EACNkH,UAAWR,EAAMpN,MAAMJ,IAEpB,GAAIoN,GAAa,IAAM,CAK5B,GAFAU,EAAUV,EAAY,IAElBI,EAAMxN,OAAS,EAAI8N,EACrB,MAAM,IAAIhQ,MAAM,mDAKlB,IAFAkC,EAAS+M,EAAaS,EAAMpN,MAAM,EAAG0N,GAASzK,SAAS,OAAQ,MAEjD,GACZ,MAAM,IAAIvF,MAAM,6DAKlB,IAFAgJ,EAAO0G,EAAMpN,MAAM0N,EAAS9N,EAAS8N,IAE5B9N,OAASA,EAChB,MAAM,IAAIlC,MAAM,4CAGlB,MAAO,CACLgJ,KAAMA,EACNkH,UAAWR,EAAMpN,MAAMJ,EAAS8N,IAE7B,GAAIV,GAAa,IAAM,CAK5B,IAHApN,EAASoN,EAAY,IACrBW,EAAiBP,EAAMpN,MAAM,EAAGJ,GAEzB+N,EAAe/N,QACpBrC,EAAIkQ,EAAQE,GACZH,EAAQ5F,KAAKrK,EAAEmJ,MACfiH,EAAiBpQ,EAAEqQ,UAGrB,MAAO,CACLlH,KAAM8G,EACNI,UAAWR,EAAMpN,MAAMJ,IAIzB8N,EAAUV,EAAY,IACtBpN,EAAS+M,EAAaS,EAAMpN,MAAM,EAAG0N,GAASzK,SAAS,OAAQ,IAC/D,IAAI4K,EAAcH,EAAU9N,EAE5B,GAAIiO,EAAcT,EAAMxN,OACtB,MAAM,IAAIlC,MAAM,qDAKlB,GAA8B,KAF9BiQ,EAAiBP,EAAMpN,MAAM0N,EAASG,IAEnBjO,OACjB,MAAM,IAAIlC,MAAM,0CAGlB,KAAOiQ,EAAe/N,QACpBrC,EAAIkQ,EAAQE,GACZH,EAAQ5F,KAAKrK,EAAEmJ,MACfiH,EAAiBpQ,EAAEqQ,UAGrB,MAAO,CACLlH,KAAM8G,EACNI,UAAWR,EAAMpN,MAAM6N,IA9IbJ,CAFIhK,EAAS2J,IAI3B,GAAIG,EACF,OAAOC,EAGT,GAAiC,IAA7BA,EAAQI,UAAUhO,OACpB,MAAM,IAAIlC,MAAM,qBAGlB,OAAO8P,EAAQ9G,MAmCjBlK,EAAQkQ,UAzBR,SAAmBU,GACjB,IAAKA,GAA0B,IAAjBA,EAAMxN,OAClB,OAAOtB,EAAOkB,KAAK,IAGrB,IAAIsO,EAAcrK,EAAS2J,GACvBJ,EAAYc,EAAY,GAE5B,GAAId,GAAa,IACf,OAAOc,EAAYlO,OACd,GAAIoN,GAAa,IACtB,OAAOA,EAAY,IACd,GAAIA,GAAa,IACtB,OAAOA,EAAY,IACd,GAAIA,GAAa,IAEtB,OAAOA,EAAY,IAGnB,IAAIU,EAAUV,EAAY,IAE1B,OAAOU,EADMf,EAAamB,EAAY9N,MAAM,EAAG0N,GAASzK,SAAS,OAAQ,O,4DC7G7E,YAEA,IAAI8K,EAAe,EAAQ,IAW3B,SAASC,EAAQ7J,EAAGiF,GAClB,GAAIjF,IAAMiF,EACR,OAAO,EAMT,IAHA,IAAIlK,EAAIiF,EAAEvE,OACNT,EAAIiK,EAAExJ,OAEDyD,EAAI,EAAGtD,EAAMkO,KAAKC,IAAIhP,EAAGC,GAAIkE,EAAItD,IAAOsD,EAC/C,GAAIc,EAAEd,KAAO+F,EAAE/F,GAAI,CACjBnE,EAAIiF,EAAEd,GACNlE,EAAIiK,EAAE/F,GACN,MAIJ,OAAInE,EAAIC,GACE,EAGNA,EAAID,EACC,EAGF,EAGT,SAASgJ,EAASkB,GAChB,OAAI+E,EAAO7P,QAA4C,oBAA3B6P,EAAO7P,OAAO4J,SACjCiG,EAAO7P,OAAO4J,SAASkB,KAGjB,MAALA,IAAaA,EAAEgF,WA6B3B,IAAIC,EAAO,EAAQ,KAEfC,EAAShS,OAAOqN,UAAUH,eAC1B+E,EAASnG,MAAMuB,UAAU3J,MAEzBwO,EACgC,QAA3B,aAAkB7G,KAG3B,SAAS8G,EAAUC,GACjB,OAAOpS,OAAOqN,UAAU1G,SAASiH,KAAKwE,GAGxC,SAASC,EAAOC,GACd,OAAI1G,EAAS0G,KAIqB,oBAAvBT,EAAOU,cAIgB,oBAAvBA,YAAYF,OACdE,YAAYF,OAAOC,KAGvBA,IAIDA,aAAkBE,aAIlBF,EAAOG,QAAUH,EAAOG,kBAAkBF,gBAUhD,IAAI5M,EAAS2I,EAAOpO,QAAUwS,EAK1BC,EAAQ,8BAEZ,SAASC,EAAQC,GACf,GAAKd,EAAKe,WAAWD,GAArB,CAIA,GAAIX,EACF,OAAOW,EAAKxH,KAGd,IACI8E,EADM0C,EAAKlM,WACCwJ,MAAMwC,GACtB,OAAOxC,GAASA,EAAM,IA8CxB,SAAS4C,EAAS3Q,EAAGjB,GACnB,MAAiB,kBAANiB,EACFA,EAAEkB,OAASnC,EAAIiB,EAAIA,EAAEsB,MAAM,EAAGvC,GAE9BiB,EAIX,SAAS4Q,EAAQC,GACf,GAAIf,IAAuBH,EAAKe,WAAWG,GACzC,OAAOlB,EAAKiB,QAAQC,GAGtB,IAAIC,EAAUN,EAAQK,GAEtB,MAAO,aADIC,EAAU,KAAOA,EAAU,IACV,IAgB9B,SAASC,EAAKC,EAAQC,EAAUtJ,EAASuJ,EAAUC,GACjD,MAAM,IAAI5N,EAAO6N,eAAe,CAC9BzJ,QAASA,EACTqJ,OAAQA,EACRC,SAAUA,EACVC,SAAUA,EACVC,mBAAoBA,IAYxB,SAASb,EAAGvS,EAAO4J,GACZ5J,GAAOgT,EAAKhT,GAAO,EAAM4J,EAAS,KAAMpE,EAAO+M,IAiCtD,SAASe,EAAWL,EAAQC,EAAUK,EAAQC,GAE5C,GAAIP,IAAWC,EACb,OAAO,EACF,GAAIzH,EAASwH,IAAWxH,EAASyH,GACtC,OAAqC,IAA9B3B,EAAQ0B,EAAQC,GAElB,GAAItB,EAAK6B,OAAOR,IAAWrB,EAAK6B,OAAOP,GAC5C,OAAOD,EAAOS,YAAcR,EAASQ,UAGhC,GAAI9B,EAAK+B,SAASV,IAAWrB,EAAK+B,SAAST,GAChD,OAAOD,EAAOW,SAAWV,EAASU,QAAUX,EAAOvB,SAAWwB,EAASxB,QAAUuB,EAAOY,YAAcX,EAASW,WAAaZ,EAAOa,YAAcZ,EAASY,WAAab,EAAOc,aAAeb,EAASa,WAEjM,GAAgB,OAAXd,GAAqC,kBAAXA,GAAsC,OAAbC,GAAyC,kBAAbA,EAOpF,IAAIhB,EAAOe,IAAWf,EAAOgB,IAAalB,EAAUiB,KAAYjB,EAAUkB,MAAeD,aAAkBe,cAAgBf,aAAkBgB,cAClJ,OAAmF,IAA5E1C,EAAQ,IAAId,WAAWwC,EAAOX,QAAS,IAAI7B,WAAWyC,EAASZ,SAMjE,GAAI7G,EAASwH,KAAYxH,EAASyH,GACvC,OAAO,EAMP,IAAIgB,GAJJV,EAAQA,GAAS,CACfP,OAAQ,GACRC,SAAU,KAEYD,OAAOlH,QAAQkH,GAEvC,OAAqB,IAAjBiB,GACEA,IAAgBV,EAAMN,SAASnH,QAAQmH,KAK7CM,EAAMP,OAAO9H,KAAK8H,GAClBO,EAAMN,SAAS/H,KAAK+H,GASxB,SAAkBxL,EAAGiF,EAAG4G,EAAQY,GAC9B,GAAU,OAANzM,QAAoBnB,IAANmB,GAAyB,OAANiF,QAAoBpG,IAANoG,EAAiB,OAAO,EAE3E,GAAIiF,EAAKwC,YAAY1M,IAAMkK,EAAKwC,YAAYzH,GAAI,OAAOjF,IAAMiF,EAC7D,GAAI4G,GAAU1T,OAAOwU,eAAe3M,KAAO7H,OAAOwU,eAAe1H,GAAI,OAAO,EAC5E,IAAI2H,EAAUC,EAAY7M,GACtB8M,EAAUD,EAAY5H,GAC1B,GAAI2H,IAAYE,IAAYF,GAAWE,EAAS,OAAO,EAEvD,GAAIF,EAGF,OAFA5M,EAAIoK,EAAOrE,KAAK/F,GAChBiF,EAAImF,EAAOrE,KAAKd,GACT2G,EAAW5L,EAAGiF,EAAG4G,GAG1B,IAEI1D,EAAKjJ,EAFL6N,EAAKC,EAAWhN,GAChBiN,EAAKD,EAAW/H,GAIpB,GAAI8H,EAAGtR,SAAWwR,EAAGxR,OAAQ,OAAO,EAKpC,IAHAsR,EAAGG,OACHD,EAAGC,OAEEhO,EAAI6N,EAAGtR,OAAS,EAAGyD,GAAK,EAAGA,IAC9B,GAAI6N,EAAG7N,KAAO+N,EAAG/N,GAAI,OAAO,EAK9B,IAAKA,EAAI6N,EAAGtR,OAAS,EAAGyD,GAAK,EAAGA,IAE9B,GADAiJ,EAAM4E,EAAG7N,IACJ0M,EAAW5L,EAAEmI,GAAMlD,EAAEkD,GAAM0D,EAAQY,GAAuB,OAAO,EAGxE,OAAO,EA5CEU,CAAS5B,EAAQC,EAAUK,EAAQC,IA9B1C,OAAOD,EAASN,IAAWC,EAAWD,GAAUC,EAkCpD,SAASqB,EAAYO,GACnB,MAAiD,sBAA1CjV,OAAOqN,UAAU1G,SAASiH,KAAKqH,GA0ExC,SAASC,EAAkB9B,EAAQC,GACjC,IAAKD,IAAWC,EACd,OAAO,EAGT,GAAgD,mBAA5CrT,OAAOqN,UAAU1G,SAASiH,KAAKyF,GACjC,OAAOA,EAASjN,KAAKgN,GAGvB,IACE,GAAIA,aAAkBC,EACpB,OAAO,EAET,MAAO8B,IAGT,OAAI/T,MAAMgU,cAAc/B,KAIa,IAA9BA,EAASzF,KAAK,GAAIwF,GAe3B,SAASiC,EAAQC,EAAaC,EAAOlC,EAAUtJ,GAC7C,IAAIqJ,EAEJ,GAAqB,oBAAVmC,EACT,MAAM,IAAIC,UAAU,uCAGE,kBAAbnC,IACTtJ,EAAUsJ,EACVA,EAAW,MAGbD,EAxBF,SAAmBmC,GACjB,IAAIE,EAEJ,IACEF,IACA,MAAOJ,GACPM,EAAQN,EAGV,OAAOM,EAeEC,CAAUH,GACnBxL,GAAWsJ,GAAYA,EAAShI,KAAO,KAAOgI,EAAShI,KAAO,KAAO,MAAQtB,EAAU,IAAMA,EAAU,KAEnGuL,IAAgBlC,GAClBD,EAAKC,EAAQC,EAAU,6BAA+BtJ,GAGxD,IAAI4L,EAAyC,kBAAZ5L,EAE7B6L,GAAyBN,GAAelC,IAAWC,EAMvD,KAP2BiC,GAAevD,EAAK8D,QAAQzC,IAG5BuC,GAAuBT,EAAkB9B,EAAQC,IAAauC,IACvFzC,EAAKC,EAAQC,EAAU,yBAA2BtJ,GAGhDuL,GAAelC,GAAUC,IAAa6B,EAAkB9B,EAAQC,KAAciC,GAAelC,EAC/F,MAAMA,EAzTVzN,EAAO6N,eAAiB,SAAwBsC,GA6DhD,IAAoB5L,EA5DlB0C,KAAKvB,KAAO,iBACZuB,KAAKwG,OAAS0C,EAAQ1C,OACtBxG,KAAKyG,SAAWyC,EAAQzC,SACxBzG,KAAK0G,SAAWwC,EAAQxC,SAEpBwC,EAAQ/L,SACV6C,KAAK7C,QAAU+L,EAAQ/L,QACvB6C,KAAKmJ,kBAAmB,IAExBnJ,KAAK7C,QAoDAgJ,EAASC,GADE9I,EAnDU0C,MAoDCwG,QAAS,KAAO,IAAMlJ,EAAKoJ,SAAW,IAAMP,EAASC,EAAQ9I,EAAKmJ,UAAW,KAnDxGzG,KAAKmJ,kBAAmB,GAG1B,IAAIxC,EAAqBuC,EAAQvC,oBAAsBJ,EAEvD,GAAI/R,MAAM4U,kBACR5U,MAAM4U,kBAAkBpJ,KAAM2G,OACzB,CAEL,IAAI0C,EAAM,IAAI7U,MAEd,GAAI6U,EAAIC,MAAO,CACb,IAAIC,EAAMF,EAAIC,MAEVE,EAAUxD,EAAQW,GAClB8C,EAAMF,EAAIjK,QAAQ,KAAOkK,GAE7B,GAAIC,GAAO,EAAG,CAGZ,IAAIC,EAAYH,EAAIjK,QAAQ,KAAMmK,EAAM,GACxCF,EAAMA,EAAI3G,UAAU8G,EAAY,GAGlC1J,KAAKsJ,MAAQC,KAMnBpE,EAAKwE,SAAS5Q,EAAO6N,eAAgBpS,OA4CrCuE,EAAOwN,KAAOA,EAWdxN,EAAO+M,GAAKA,EAIZ/M,EAAO6Q,MAAQ,SAAepD,EAAQC,EAAUtJ,GAC1CqJ,GAAUC,GAAUF,EAAKC,EAAQC,EAAUtJ,EAAS,KAAMpE,EAAO6Q,QAKvE7Q,EAAO8Q,SAAW,SAAkBrD,EAAQC,EAAUtJ,GAChDqJ,GAAUC,GACZF,EAAKC,EAAQC,EAAUtJ,EAAS,KAAMpE,EAAO8Q,WAMjD9Q,EAAO+Q,UAAY,SAAmBtD,EAAQC,EAAUtJ,GACjD0J,EAAWL,EAAQC,GAAU,IAChCF,EAAKC,EAAQC,EAAUtJ,EAAS,YAAapE,EAAO+Q,YAIxD/Q,EAAOgR,gBAAkB,SAAyBvD,EAAQC,EAAUtJ,GAC7D0J,EAAWL,EAAQC,GAAU,IAChCF,EAAKC,EAAQC,EAAUtJ,EAAS,kBAAmBpE,EAAOgR,kBAkG9DhR,EAAOiR,aAAe,SAAsBxD,EAAQC,EAAUtJ,GACxD0J,EAAWL,EAAQC,GAAU,IAC/BF,EAAKC,EAAQC,EAAUtJ,EAAS,eAAgBpE,EAAOiR,eAI3DjR,EAAOkR,mBAEP,SAASA,EAAmBzD,EAAQC,EAAUtJ,GACxC0J,EAAWL,EAAQC,GAAU,IAC/BF,EAAKC,EAAQC,EAAUtJ,EAAS,qBAAsB8M,IAM1DlR,EAAOmR,YAAc,SAAqB1D,EAAQC,EAAUtJ,GACtDqJ,IAAWC,GACbF,EAAKC,EAAQC,EAAUtJ,EAAS,MAAOpE,EAAOmR,cAMlDnR,EAAOoR,eAAiB,SAAwB3D,EAAQC,EAAUtJ,GAC5DqJ,IAAWC,GACbF,EAAKC,EAAQC,EAAUtJ,EAAS,MAAOpE,EAAOoR,iBAyElDpR,EAAOqR,OAAS,SAAUzB,EAE1BE,EAEA1L,GACEsL,GAAQ,EAAME,EAAOE,EAAO1L,IAI9BpE,EAAOsR,aAAe,SAAU1B,EAEhCE,EAEA1L,GACEsL,GAAQ,EAAOE,EAAOE,EAAO1L,IAG/BpE,EAAOuR,QAAU,SAAUjB,GACzB,GAAIA,EAAK,MAAMA,GAQjBtQ,EAAO+N,OAASjC,GAJhB,SAASiC,EAAOvT,EAAO4J,GAChB5J,GAAOgT,EAAKhT,GAAO,EAAM4J,EAAS,KAAM2J,KAGV/N,EAAQ,CAC3C6Q,MAAO7Q,EAAOmR,YACdJ,UAAW/Q,EAAOgR,gBAClBF,SAAU9Q,EAAOoR,eACjBH,aAAcjR,EAAOkR,qBAEvBlR,EAAO+N,OAAOA,OAAS/N,EAAO+N,OAE9B,IAAImB,EAAa7U,OAAOiM,MAAQ,SAAUmG,GACxC,IAAInG,EAAO,GAEX,IAAK,IAAI+D,KAAOoC,EACVJ,EAAOpE,KAAKwE,EAAKpC,IAAM/D,EAAKX,KAAK0E,GAGvC,OAAO/D,K,mDCjfT,IAAIkL,EAAYvK,MAAQA,KAAKuK,WAAa,SAAUC,EAASC,EAAYC,EAAGC,GAO1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GACjD,SAASC,EAAUxX,GACjB,IACEyX,EAAKL,EAAUM,KAAK1X,IACpB,MAAOgV,GACPuC,EAAOvC,IAIX,SAAS2C,EAAS3X,GAChB,IACEyX,EAAKL,EAAiB,MAAEpX,IACxB,MAAOgV,GACPuC,EAAOvC,IAIX,SAASyC,EAAKxU,GAvBhB,IAAejD,EAwBXiD,EAAO2U,KAAON,EAAQrU,EAAOjD,QAxBlBA,EAwBiCiD,EAAOjD,MAvB9CA,aAAiBmX,EAAInX,EAAQ,IAAImX,GAAE,SAAUG,GAClDA,EAAQtX,OAsBkD6X,KAAKL,EAAWG,GAG5EF,GAAML,EAAYA,EAAUU,MAAMb,EAASC,GAAc,KAAKQ,YAI9DK,EAActL,MAAQA,KAAKsL,aAAe,SAAUd,EAASe,GAC/D,IASIC,EACAvV,EACAwV,EACA/W,EAZAgX,EAAI,CACN9N,MAAO,EACP+N,KAAM,WACJ,GAAW,EAAPF,EAAE,GAAQ,MAAMA,EAAE,GACtB,OAAOA,EAAE,IAEXG,KAAM,GACNC,IAAK,IAMP,OAAOnX,EAAI,CACTuW,KAAMa,EAAK,GACX,MAASA,EAAK,GACd,OAAUA,EAAK,IACI,oBAAXC,SAA0BrX,EAAEqX,OAAOC,UAAY,WACvD,OAAOhM,OACLtL,EAEJ,SAASoX,EAAKvX,GACZ,OAAO,SAAUyH,GACf,OAIJ,SAAciQ,GACZ,GAAIT,EAAG,MAAM,IAAI5C,UAAU,mCAE3B,KAAO8C,GACL,IACE,GAAIF,EAAI,EAAGvV,IAAMwV,EAAY,EAARQ,EAAG,GAAShW,EAAU,OAAIgW,EAAG,GAAKhW,EAAS,SAAOwV,EAAIxV,EAAU,SAAMwV,EAAEzK,KAAK/K,GAAI,GAAKA,EAAEgV,SAAWQ,EAAIA,EAAEzK,KAAK/K,EAAGgW,EAAG,KAAKd,KAAM,OAAOM,EAG3J,OAFIxV,EAAI,EAAGwV,IAAGQ,EAAK,CAAS,EAARA,EAAG,GAAQR,EAAElY,QAEzB0Y,EAAG,IACT,KAAK,EACL,KAAK,EACHR,EAAIQ,EACJ,MAEF,KAAK,EAEH,OADAP,EAAE9N,QACK,CACLrK,MAAO0Y,EAAG,GACVd,MAAM,GAGV,KAAK,EACHO,EAAE9N,QACF3H,EAAIgW,EAAG,GACPA,EAAK,CAAC,GACN,SAEF,KAAK,EACHA,EAAKP,EAAEG,IAAIK,MAEXR,EAAEE,KAAKM,MAEP,SAEF,QACE,KAAkBT,GAAZA,EAAIC,EAAEE,MAAYlV,OAAS,GAAK+U,EAAEA,EAAE/U,OAAS,MAAkB,IAAVuV,EAAG,IAAsB,IAAVA,EAAG,IAAW,CACtFP,EAAI,EACJ,SAGF,GAAc,IAAVO,EAAG,MAAcR,GAAKQ,EAAG,GAAKR,EAAE,IAAMQ,EAAG,GAAKR,EAAE,IAAK,CACvDC,EAAE9N,MAAQqO,EAAG,GACb,MAGF,GAAc,IAAVA,EAAG,IAAYP,EAAE9N,MAAQ6N,EAAE,GAAI,CACjCC,EAAE9N,MAAQ6N,EAAE,GACZA,EAAIQ,EACJ,MAGF,GAAIR,GAAKC,EAAE9N,MAAQ6N,EAAE,GAAI,CACvBC,EAAE9N,MAAQ6N,EAAE,GAEZC,EAAEG,IAAInN,KAAKuN,GAEX,MAGER,EAAE,IAAIC,EAAEG,IAAIK,MAEhBR,EAAEE,KAAKM,MAEP,SAGJD,EAAKV,EAAKvK,KAAKwJ,EAASkB,GACxB,MAAOnD,GACP0D,EAAK,CAAC,EAAG1D,GACTtS,EAAI,EACJ,QACAuV,EAAIC,EAAI,EAIZ,GAAY,EAARQ,EAAG,GAAQ,MAAMA,EAAG,GACxB,MAAO,CACL1Y,MAAO0Y,EAAG,GAAKA,EAAG,QAAK,EACvBd,MAAM,GAlFCH,CAAK,CAACzW,EAAGyH,OA6FtB5I,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAGT,IAAI4Y,EAAc,EAAQ,KAEtBC,EAAW,EAAQ,KAuCvB9Y,EAAQ+Y,iBAnCR,WACE,OAAO9B,EAAUvK,UAAM,OAAQ,GAAQ,WACrC,IAAIsM,EACJ,OAAOhB,EAAYtL,MAAM,SAAUuM,GACjC,OAAQA,EAAG3O,OACT,KAAK,EAIH,MAAO,CAAC,EAENwO,EAASI,eAbY,KAezB,KAAK,EAGH,OAFAF,EAAKC,EAAGZ,OAEJQ,EAAYhR,iBAAiBmR,GACxB,CAAC,EAENA,GAGG,CAAC,EAEN,GAEJ,KAAK,EACH,MAAO,CAAC,WAoBlBhZ,EAAQmZ,qBAVR,WACE,OAAa,CACX,IAAIH,EAAKF,EAASM,mBAzCW,IA2C7B,GAAIP,EAAYhR,iBAAiBmR,GAC/B,OAAOA,IA1Db,SAAkBK,GAChB,IAAK,IAAItM,KAAKsM,EACPrZ,EAAQgN,eAAeD,KAAI/M,EAAQ+M,GAAKsM,EAAEtM,IA+DnDuM,CAAS,EAAQ,O,oBClNjBlL,EAAOpO,QAAU,EAAQ,IAAR,CAAiB,EAAQ,O,kBCM1CoO,EAAOpO,QAAU,SAAuB6O,GACtC,GAAmB,kBAARA,EACT,MAAM,IAAI3N,MAAM,2EAA6E2N,EAAM,mCAGrG,MAA2B,OAApBA,EAAIrL,MAAM,EAAG,K,iCCTtB1D,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAGT,IAAIsZ,EAAe,EAAQ,KAEvBC,EAAmB,EAAQ,KAE/BxZ,EAAQyZ,UAAYF,EAAaG,oBAAmB,WAClD,OAAOF,EAAiB,gBAE1BxZ,EAAQ0H,UAAY6R,EAAaG,oBAAmB,WAClD,OAAOF,EAAiB,gBAE1BxZ,EAAQ2Z,UAAYJ,EAAaG,oBAAmB,WAClD,OAAOF,EAAiB,gBAE1BxZ,EAAQ4Z,UAAYL,EAAaG,oBAAmB,WAClD,OAAOF,EAAiB,iB,oBCpB1B,IAAIvL,EAAgB,EAAQ,KAQ5BG,EAAOpO,QAAU,SAAwB6O,GACvC,MAAmB,kBAARA,EACFA,EAGFZ,EAAcY,GAAOA,EAAIrL,MAAM,GAAKqL,I,oBCb7C,IAAIgL,EAA6B,EAAQ,KAErCC,EACe,wCADfA,EAES,oEAFTA,EAGS,8CAHTA,EAIwB,wCAJxBA,EAKc,yBALdA,EAMY,iCANZA,EAOgB,iCAPhBA,EAQc,0CARdA,EASS,gCATTA,EAUI,uEAVJA,EAWO,kCAXPA,EAYI,wCAGR,SAASrU,EAAOsU,EAAMC,GACpB,IAAKD,EAAM,MAAM,IAAI7Y,MAAM8Y,GAG7B,SAASC,EAAa9O,EAAMlL,EAAOmD,GAGjC,GAFAqC,EAAOxF,aAAiByQ,WAAY,YAAYvO,OAAOgJ,EAAM,8BAE9C3E,IAAXpD,EACF,GAAIwI,MAAMC,QAAQzI,GAAS,CACzB,IAAI8W,EAAU9W,EAAO+W,KAAK,MACtBH,EAAM,YAAY7X,OAAOgJ,EAAM,sCAAsChJ,OAAO+X,EAAS,KACzFzU,EAAOrC,EAAOgX,SAASna,EAAMmD,QAAS4W,OACjC,CACL,IAAIK,EAAO,YAAYlY,OAAOgJ,EAAM,qCAAqChJ,OAAOiB,GAEhFqC,EAAOxF,EAAMmD,SAAWA,EAAQiX,IAKtC,SAASC,EAAara,GACpBwF,EAA+B,YAAxB8U,EAAata,GAAsB,uCAG5C,SAASua,IACP,IAAI3J,EAAS4J,UAAUrX,OAAS,QAAsBoD,IAAjBiU,UAAU,GAAmBA,UAAU,GAAK,SAAUlX,GACzF,OAAO,IAAImN,WAAWnN,IAEpBH,EAASqX,UAAUrX,OAAS,EAAIqX,UAAU,QAAKjU,EAGnD,MAFsB,oBAAXqK,IAAuBA,EAASA,EAAOzN,IAClD6W,EAAa,SAAUpJ,EAAQzN,GACxByN,EAGT,SAAS0J,EAAata,GACpB,OAAOH,OAAOqN,UAAU1G,SAASiH,KAAKzN,GAAOuD,MAAM,GAAI,GAGzD4K,EAAOpO,QAAU,SAAU2F,GACzB,MAAO,CACL+U,iBAAkB,SAA0BC,GAI1C,OAHAlV,EAAgB,OAATkV,GAAiBA,aAAgBjK,WAAY,6CACvC,OAATiK,GAAeV,EAAa,OAAQU,EAAM,IAEtChV,EAAU+U,iBAAiBC,IACjC,KAAK,EACH,MAAM,IAAIzZ,MAAM4Y,KAGtBjS,iBAAkB,SAA0B+S,GAE1C,OADAX,EAAa,cAAeW,EAAQ,IACU,IAAvCjV,EAAUkC,iBAAiB+S,IAEpCC,iBAAkB,SAA0BD,GAG1C,OAFAX,EAAa,cAAeW,EAAQ,IAE5BjV,EAAUkV,iBAAiBD,IACjC,KAAK,EACH,OAAOA,EAET,KAAK,EACH,MAAM,IAAI1Z,MAAM4Y,KAGtBgB,mBAAoB,SAA4BF,EAAQG,GAItD,OAHAd,EAAa,cAAeW,EAAQ,IACpCX,EAAa,QAASc,EAAO,IAErBpV,EAAUmV,mBAAmBF,EAAQG,IAC3C,KAAK,EACH,OAAOH,EAET,KAAK,EACH,MAAM,IAAI1Z,MAAM4Y,KAGtBkB,mBAAoB,SAA4BJ,EAAQG,GAItD,OAHAd,EAAa,cAAeW,EAAQ,IACpCX,EAAa,QAASc,EAAO,IAErBpV,EAAUqV,mBAAmBJ,EAAQG,IAC3C,KAAK,EACH,OAAOH,EAET,KAAK,EACH,MAAM,IAAI1Z,MAAM4Y,KAGtB/R,gBAAiB,SAAyBkT,GAExC,OADAhB,EAAa,aAAcgB,EAAQ,CAAC,GAAI,KACK,IAAtCtV,EAAUoC,gBAAgBkT,IAEnC/S,gBAAiB,SAAyB0S,GACxC,IAAI9Z,IAAa2Z,UAAUrX,OAAS,QAAsBoD,IAAjBiU,UAAU,KAAmBA,UAAU,GAC5E5J,EAAS4J,UAAUrX,OAAS,EAAIqX,UAAU,QAAKjU,EAKnD,OAJAyT,EAAa,cAAeW,EAAQ,IACpCN,EAAaxZ,GACb+P,EAAS2J,EAAkB3J,EAAQ/P,EAAa,GAAK,IAE7C6E,EAAUuC,gBAAgB2I,EAAQ+J,IACxC,KAAK,EACH,OAAO/J,EAET,KAAK,EACH,MAAM,IAAI3P,MAAM4Y,GAElB,KAAK,EACH,MAAM,IAAI5Y,MAAM4Y,KAGtB7R,iBAAkB,SAA0BgT,GAC1C,IAAIna,IAAa2Z,UAAUrX,OAAS,QAAsBoD,IAAjBiU,UAAU,KAAmBA,UAAU,GAC5E5J,EAAS4J,UAAUrX,OAAS,EAAIqX,UAAU,QAAKjU,EAKnD,OAJAyT,EAAa,aAAcgB,EAAQ,CAAC,GAAI,KACxCX,EAAaxZ,GACb+P,EAAS2J,EAAkB3J,EAAQ/P,EAAa,GAAK,IAE7C6E,EAAUsC,iBAAiB4I,EAAQoK,IACzC,KAAK,EACH,OAAOpK,EAET,KAAK,EACH,MAAM,IAAI3P,MAAM4Y,GAElB,KAAK,EACH,MAAM,IAAI5Y,MAAM4Y,KAGtBoB,gBAAiB,SAAyBD,GACxC,IAAIna,IAAa2Z,UAAUrX,OAAS,QAAsBoD,IAAjBiU,UAAU,KAAmBA,UAAU,GAC5E5J,EAAS4J,UAAUrX,OAAS,EAAIqX,UAAU,QAAKjU,EAKnD,OAJAyT,EAAa,aAAcgB,EAAQ,CAAC,GAAI,KACxCX,EAAaxZ,GACb+P,EAAS2J,EAAkB3J,EAAQ/P,EAAa,GAAK,IAE7C6E,EAAUuV,gBAAgBrK,EAAQoK,IACxC,KAAK,EACH,OAAOpK,EAET,KAAK,EACH,MAAM,IAAI3P,MAAM4Y,GAElB,KAAK,EACH,MAAM,IAAI5Y,MAAM4Y,GAElB,KAAK,EACH,MAAM,IAAI5Y,MAAM4Y,KAGtBqB,iBAAkB,SAA0BC,GAC1C,IAAIta,IAAa2Z,UAAUrX,OAAS,QAAsBoD,IAAjBiU,UAAU,KAAmBA,UAAU,GAC5E5J,EAAS4J,UAAUrX,OAAS,EAAIqX,UAAU,QAAKjU,EACnDf,EAAOmG,MAAMC,QAAQuP,GAAU,uCAC/B3V,EAAO2V,EAAQhY,OAAS,EAAG,6DAE3B,IACIiY,EADAC,EAAYzB,EAA2BuB,GAG3C,IACE,IAAKE,EAAUpZ,MAAOmZ,EAAQC,EAAUra,KAAK4W,MAAO,CAClD,IAAIoD,EAASI,EAAMpb,MACnBga,EAAa,aAAcgB,EAAQ,CAAC,GAAI,MAE1C,MAAOlF,GACPuF,EAAUrG,EAAEc,GACZ,QACAuF,EAAUpD,IAMZ,OAHAoC,EAAaxZ,GACb+P,EAAS2J,EAAkB3J,EAAQ/P,EAAa,GAAK,IAE7C6E,EAAUwV,iBAAiBtK,EAAQuK,IACzC,KAAK,EACH,OAAOvK,EAET,KAAK,EACH,MAAM,IAAI3P,MAAM4Y,GAElB,KAAK,EACH,MAAM,IAAI5Y,MAAM4Y,GAElB,KAAK,EACH,MAAM,IAAI5Y,MAAM4Y,KAGtByB,kBAAmB,SAA2BN,EAAQF,GACpD,IAAIja,IAAa2Z,UAAUrX,OAAS,QAAsBoD,IAAjBiU,UAAU,KAAmBA,UAAU,GAC5E5J,EAAS4J,UAAUrX,OAAS,EAAIqX,UAAU,QAAKjU,EAMnD,OALAyT,EAAa,aAAcgB,EAAQ,CAAC,GAAI,KACxChB,EAAa,QAASc,EAAO,IAC7BT,EAAaxZ,GACb+P,EAAS2J,EAAkB3J,EAAQ/P,EAAa,GAAK,IAE7C6E,EAAU4V,kBAAkB1K,EAAQoK,EAAQF,IAClD,KAAK,EACH,OAAOlK,EAET,KAAK,EACH,MAAM,IAAI3P,MAAM4Y,GAElB,KAAK,EACH,MAAM,IAAI5Y,MAAM4Y,KAGtB0B,kBAAmB,SAA2BP,EAAQF,GACpD,IAAIja,IAAa2Z,UAAUrX,OAAS,QAAsBoD,IAAjBiU,UAAU,KAAmBA,UAAU,GAC5E5J,EAAS4J,UAAUrX,OAAS,EAAIqX,UAAU,QAAKjU,EAMnD,OALAyT,EAAa,aAAcgB,EAAQ,CAAC,GAAI,KACxChB,EAAa,QAASc,EAAO,IAC7BT,EAAaxZ,GACb+P,EAAS2J,EAAkB3J,EAAQ/P,EAAa,GAAK,IAE7C6E,EAAU6V,kBAAkB3K,EAAQoK,EAAQF,IAClD,KAAK,EACH,OAAOlK,EAET,KAAK,EACH,MAAM,IAAI3P,MAAM4Y,GAElB,KAAK,EACH,MAAM,IAAI5Y,MAAM4Y,KAGtB2B,mBAAoB,SAA4B1S,GAG9C,OAFAkR,EAAa,YAAalR,EAAK,IAEvBpD,EAAU8V,mBAAmB1S,IACnC,KAAK,EACH,OAAOA,EAET,KAAK,EACH,MAAM,IAAI7H,MAAM4Y,KAGtB4B,gBAAiB,SAAyB3S,EAAK8H,GAC7CoJ,EAAa,YAAalR,EAAK,IAE/B,IAAImJ,EAAM,CACRrB,OAFFA,EAAS2J,EAAkB3J,EAAQ,IAGjC8K,UAAW,IAGb,OAAQhW,EAAU+V,gBAAgBxJ,EAAKnJ,IACrC,KAAK,EACH,OAAO8H,EAAOrN,MAAM,EAAG0O,EAAIyJ,WAE7B,KAAK,EACH,MAAM,IAAIza,MAAM4Y,GAElB,KAAK,EACH,MAAM,IAAI5Y,MAAM4Y,KAGtB/X,gBAAiB,SAAyBgH,EAAK8H,GAI7C,OAHAoJ,EAAa,YAAalR,GAC1B8H,EAAS2J,EAAkB3J,EAAQ,IAE3BlL,EAAU5D,gBAAgB8O,EAAQ9H,IACxC,KAAK,EACH,OAAO8H,EAET,KAAK,EACH,MAAM,IAAI3P,MAAM4Y,GAElB,KAAK,EACH,MAAM,IAAI5Y,MAAM4Y,KAGtB8B,UAAW,SAAmBC,EAAOjB,GACnC,IAAIhF,EAAU6E,UAAUrX,OAAS,QAAsBoD,IAAjBiU,UAAU,GAAmBA,UAAU,GAAK,GAC9E5J,EAAS4J,UAAUrX,OAAS,EAAIqX,UAAU,QAAKjU,EACnDyT,EAAa,UAAW4B,EAAO,IAC/B5B,EAAa,cAAeW,EAAQ,IACpCnV,EAAiC,WAA1B8U,EAAa3E,GAAuB,yCACtBpP,IAAjBoP,EAAQ1L,MAAoB+P,EAAa,eAAgBrE,EAAQ1L,WAC7C1D,IAApBoP,EAAQkG,SAAuBrW,EAAyC,aAAlC8U,EAAa3E,EAAQkG,SAAyB,6CAExF,IAAI5J,EAAM,CACRxO,UAFFmN,EAAS2J,EAAkB3J,EAAQ,IAGjCkL,MAAO,MAGT,OAAQpW,EAAUiW,UAAU1J,EAAK2J,EAAOjB,EAAQhF,EAAQ1L,KAAM0L,EAAQkG,UACpE,KAAK,EACH,OAAO5J,EAET,KAAK,EACH,MAAM,IAAIhR,MAAM4Y,GAElB,KAAK,EACH,MAAM,IAAI5Y,MAAM4Y,KAGtBkC,YAAa,SAAqBjT,EAAK8S,EAAOZ,GAK5C,OAJAhB,EAAa,YAAalR,EAAK,IAC/BkR,EAAa,UAAW4B,EAAO,IAC/B5B,EAAa,aAAcgB,EAAQ,CAAC,GAAI,KAEhCtV,EAAUqW,YAAYjT,EAAK8S,EAAOZ,IACxC,KAAK,EACH,OAAO,EAET,KAAK,EACH,OAAO,EAET,KAAK,EACH,MAAM,IAAI/Z,MAAM4Y,GAElB,KAAK,EACH,MAAM,IAAI5Y,MAAM4Y,KAGtBmC,aAAc,SAAsBlT,EAAKgT,EAAOF,GAC9C,IAAI/a,IAAa2Z,UAAUrX,OAAS,QAAsBoD,IAAjBiU,UAAU,KAAmBA,UAAU,GAC5E5J,EAAS4J,UAAUrX,OAAS,EAAIqX,UAAU,QAAKjU,EAOnD,OANAyT,EAAa,YAAalR,EAAK,IAC/BtD,EAA+B,WAAxB8U,EAAawB,IAAuBA,GAAS,GAAKA,GAAS,EAAG,8DACrE9B,EAAa,UAAW4B,EAAO,IAC/BvB,EAAaxZ,GACb+P,EAAS2J,EAAkB3J,EAAQ/P,EAAa,GAAK,IAE7C6E,EAAUsW,aAAapL,EAAQ9H,EAAKgT,EAAOF,IACjD,KAAK,EACH,OAAOhL,EAET,KAAK,EACH,MAAM,IAAI3P,MAAM4Y,GAElB,KAAK,EACH,MAAM,IAAI5Y,MAAM4Y,GAElB,KAAK,EACH,MAAM,IAAI5Y,MAAM4Y,KAGtBoC,KAAM,SAAcjB,EAAQL,GAC1B,IAAIhF,EAAU6E,UAAUrX,OAAS,QAAsBoD,IAAjBiU,UAAU,GAAmBA,UAAU,GAAK,GAC9E5J,EAAS4J,UAAUrX,OAAS,EAAIqX,UAAU,QAAKjU,EAenD,OAdAyT,EAAa,aAAcgB,EAAQ,CAAC,GAAI,KACxChB,EAAa,cAAeW,EAAQ,IACpCnV,EAAiC,WAA1B8U,EAAa3E,GAAuB,yCACtBpP,IAAjBoP,EAAQ1L,MAAoB+P,EAAa,eAAgBrE,EAAQ1L,WAE9C1D,IAAnBoP,EAAQuG,QACV1W,EAAwC,aAAjC8U,EAAa3E,EAAQuG,QAAwB,iDAC/B3V,IAAjBoP,EAAQwG,MAAoBnC,EAAa,eAAgBrE,EAAQwG,KAAM,SACtD5V,IAAjBoP,EAAQyG,MAAoBpC,EAAa,eAAgBrE,EAAQyG,KAAM,IAC3EpC,EAAa,SAAUpJ,IAEvBA,EAAS2J,EAAkB3J,EAAQ,IAG7BlL,EAAUuW,KAAKrL,EAAQoK,EAAQL,EAAQhF,EAAQ1L,KAAM0L,EAAQuG,OAAQvG,EAAQwG,KAAMxG,EAAQyG,OACjG,KAAK,EACH,OAAOxL,EAET,KAAK,EACH,MAAM,IAAI3P,MAAM4Y,GAElB,KAAK,EACH,MAAM,IAAI5Y,MAAM4Y,Q,oBC1X1B,IAEItZ,EAAK,IAAIC,EAFJ,EAAQ,KAAYD,IAEb,aACZE,EAAWF,EAAGG,MAGdJ,EAAKG,EAASO,EAAEiM,YAsCpB,SAASoP,EAAcrB,GAErB,IAAIsB,EAAQtB,EAAO,GAEnB,OAAQsB,GACN,KAAK,EACL,KAAK,EACH,OAAsB,KAAlBtB,EAAO7X,OAAsB,KA3CvC,SAAiCmZ,EAAOH,GACtC,IAAI1Z,EAAI,IAAInC,EAAG6b,GAEf,GAAI1Z,EAAEkH,IAAIlJ,EAASqM,IAAM,EAAG,OAAO,KAGnC,IAAIpK,GAFJD,EAAIA,EAAE8Z,MAAM9b,EAAS+b,MAEXC,SAASC,QAAQja,GAAGka,QAAQlc,EAASkM,GAAGiQ,UAElD,OADc,IAAVN,IAAmB5Z,EAAEE,UAASF,EAAIA,EAAEma,UACjCtc,EAAGuc,QAAQ,CAChBta,IAAK,CACHC,EAAGA,EACHC,EAAGA,KAiCIqa,CAAwBT,EAAOtB,EAAOgC,SAAS,EAAG,KAE3D,KAAK,EACL,KAAK,EACL,KAAK,EACH,OAAsB,KAAlBhC,EAAO7X,OAAsB,KAjCvC,SAAmCmZ,EAAOH,EAAMC,GAC9C,IAAI3Z,EAAI,IAAInC,EAAG6b,GACXzZ,EAAI,IAAIpC,EAAG8b,GAEf,GAAI3Z,EAAEkH,IAAIlJ,EAASqM,IAAM,GAAKpK,EAAEiH,IAAIlJ,EAASqM,IAAM,EAAG,OAAO,KAI7D,GAHArK,EAAIA,EAAE8Z,MAAM9b,EAAS+b,KACrB9Z,EAAIA,EAAE6Z,MAAM9b,EAAS+b,MAEN,IAAVF,GAA4B,IAAVA,IAAmB5Z,EAAEE,WAAuB,IAAV0Z,GAAiB,OAAO,KAEjF,IAAIW,EAAKxa,EAAEga,SAASC,QAAQja,GAC5B,OAAKC,EAAE+Z,SAASS,QAAQD,EAAGN,QAAQlc,EAASkM,IAAIjL,SACzCnB,EAAGuc,QAAQ,CAChBta,IAAK,CACHC,EAAGA,EACHC,EAAGA,KAJ0D,KAuBtDya,CAA0Bb,EAAOtB,EAAOgC,SAAS,EAAG,IAAKhC,EAAOgC,SAAS,GAAI,KAEtF,QACE,OAAO,MAIb,SAASI,EAAcxM,EAAQ1P,GAI7B,IAHA,IAAI8Z,EAAS9Z,EAAMyJ,OAAO,KAAwB,KAAlBiG,EAAOzN,QAG9ByD,EAAI,EAAGA,EAAIgK,EAAOzN,SAAUyD,EACnCgK,EAAOhK,GAAKoU,EAAOpU,GAIvBuH,EAAOpO,QAAU,CACf0a,iBAAkB,WAChB,OAAO,GAET7S,iBAAkB,SAA0B+S,GAC1C,IAAIlZ,EAAK,IAAInB,EAAGqa,GAChB,OAAOlZ,EAAGkI,IAAIlJ,EAASO,GAAK,IAAMS,EAAGC,SAAW,EAAI,GAEtDkZ,iBAAkB,SAA0BD,GAC1C,IAAIlZ,EAAK,IAAInB,EAAGqa,GACZ0C,EAAS5c,EAASO,EAAEsc,IAAI7b,GAAI8b,KAAK9c,EAASO,GAAGY,YAAY6O,WAAY,KAAM,IAE/E,OADAkK,EAAOpP,IAAI8R,GACJ,GAETxC,mBAAoB,SAA4BF,EAAQG,GACtD,IAAIrZ,EAAK,IAAInB,EAAGwa,GAChB,GAAIrZ,EAAGkI,IAAIlJ,EAASO,IAAM,EAAG,OAAO,EAGpC,GAFAS,EAAG+b,KAAK,IAAIld,EAAGqa,IACXlZ,EAAGkI,IAAIlJ,EAASO,IAAM,GAAGS,EAAGgc,KAAKhd,EAASO,GAC1CS,EAAGC,SAAU,OAAO,EACxB,IAAIgc,EAAUjc,EAAGG,YAAY6O,WAAY,KAAM,IAE/C,OADAkK,EAAOpP,IAAImS,GACJ,GAET3C,mBAAoB,SAA4BJ,EAAQG,GACtD,IAAIrZ,EAAK,IAAInB,EAAGwa,GAChB,GAAIrZ,EAAGkI,IAAIlJ,EAASO,IAAM,GAAKS,EAAGC,SAAU,OAAO,EACnDD,EAAGkc,KAAK,IAAIrd,EAAGqa,IACXlZ,EAAGkI,IAAIlJ,EAASO,IAAM,IAAGS,EAAKA,EAAG8b,KAAK9c,EAASO,IACnD,IAAI0c,EAAUjc,EAAGG,YAAY6O,WAAY,KAAM,IAE/C,OADAkK,EAAOpP,IAAImS,GACJ,GAET5V,gBAAiB,SAAyBkT,GAExC,OAAgB,OADLqB,EAAcrB,GACF,EAAI,GAE7B/S,gBAAiB,SAAyB2I,EAAQ+J,GAChD,IAAIlZ,EAAK,IAAInB,EAAGqa,GAChB,OAAIlZ,EAAGkI,IAAIlJ,EAASO,IAAM,GAAKS,EAAGC,SAAiB,GAEnD0b,EAAcxM,EADFrQ,EAAGqd,eAAejD,GAAQkD,aAE/B,IAET7V,iBAAkB,SAA0B4I,EAAQoK,GAClD,IAAI8C,EAAOzB,EAAcrB,GACzB,OAAa,OAAT8C,EAAsB,GAE1BV,EAAcxM,EADFkN,EAAKD,aAEV,IAET5C,gBAAiB,SAAyBrK,EAAQoK,GAChD,IAAI8C,EAAOzB,EAAcrB,GACzB,GAAa,OAAT8C,EAAe,OAAO,EAC1B,IAAI5c,EAAQ4c,EAAKD,YAGjB,OAFA3c,EAAMwB,EAAIxB,EAAMwB,EAAEma,SAClBO,EAAcxM,EAAQ1P,GACf,GAETga,iBAAkB,SAA0BtK,EAAQuK,GAGlD,IAFA,IAAI4C,EAAQ,IAAIpS,MAAMwP,EAAQhY,QAErByD,EAAI,EAAGA,EAAIuU,EAAQhY,SAAUyD,EAEpC,GADAmX,EAAMnX,GAAKyV,EAAclB,EAAQvU,IAChB,OAAbmX,EAAMnX,GAAa,OAAO,EAKhC,IAFA,IAAI1F,EAAQ6c,EAAM,GAAGF,YAEZG,EAAK,EAAGA,EAAKD,EAAM5a,SAAU6a,EACpC9c,EAAQA,EAAM+c,IAAIF,EAAMC,GAAIxb,KAG9B,OAAItB,EAAMgd,aAAqB,GAC/Bd,EAAcxM,EAAQ1P,GACf,IAEToa,kBAAmB,SAA2B1K,EAAQoK,EAAQF,GAC5D,IAAIgD,EAAOzB,EAAcrB,GACzB,GAAa,OAAT8C,EAAe,OAAO,EAE1B,IADAhD,EAAQ,IAAIxa,EAAGwa,IACLnR,IAAIlJ,EAASO,IAAM,EAAG,OAAO,EACvC,IAAIE,EAAQ4c,EAAKD,YAAYI,IAAIxd,EAASU,EAAEC,IAAI0Z,IAChD,OAAI5Z,EAAMgd,aAAqB,GAC/Bd,EAAcxM,EAAQ1P,GACf,IAETqa,kBAAmB,SAA2B3K,EAAQoK,EAAQF,GAC5D,IAAIgD,EAAOzB,EAAcrB,GACzB,OAAa,OAAT8C,EAAsB,GAC1BhD,EAAQ,IAAIxa,EAAGwa,IACLnR,IAAIlJ,EAASO,IAAM,GAAK8Z,EAAMpZ,SAAiB,GAEzD0b,EAAcxM,EADFkN,EAAKD,YAAYzc,IAAI0Z,IAE1B,IAETU,mBAAoB,SAA4B1S,GAC9C,IAAI9G,EAAI,IAAI1B,EAAGwI,EAAIkU,SAAS,EAAG,KAC3B/a,EAAI,IAAI3B,EAAGwI,EAAIkU,SAAS,GAAI,KAChC,OAAIhb,EAAE2H,IAAIlJ,EAASO,IAAM,GAAKiB,EAAE0H,IAAIlJ,EAASO,IAAM,EAAU,GAExC,IAAjBiB,EAAE0H,IAAIpJ,EAAG4d,KACXrV,EAAIyC,IAAI9K,EAASO,EAAEsc,IAAIrb,GAAGL,YAAY6O,WAAY,KAAM,IAAK,IAGxD,IAITgL,gBAAiB,SAAyBxJ,EAAKnJ,GAC7C,IAAIsV,EAAOtV,EAAIkU,SAAS,EAAG,IACvBqB,EAAOvV,EAAIkU,SAAS,GAAI,IAC5B,GAAI,IAAI1c,EAAG8d,GAAMzU,IAAIlJ,EAASO,IAAM,EAAG,OAAO,EAC9C,GAAI,IAAIV,EAAG+d,GAAM1U,IAAIlJ,EAASO,IAAM,EAAG,OAAO,EAC9C,IAAI4P,EAASqB,EAAIrB,OAEb5O,EAAI4O,EAAOoM,SAAS,EAAG,IAC3Bhb,EAAE,GAAK,EACPA,EAAEuJ,IAAI6S,EAAM,GAIZ,IAHA,IAAIE,EAAO,GACPC,EAAO,EAEJD,EAAO,GAAiB,IAAZtc,EAAEuc,MAAkC,IAAdvc,EAAEuc,EAAO,MAAcD,IAAQC,GAKxE,GAAW,KADXvc,EAAIA,EAAEgb,SAASuB,IACT,GAAW,OAAO,EACxB,GAAID,EAAO,GAAc,IAATtc,EAAE,MAAwB,IAAPA,EAAE,IAAY,OAAO,EAExD,IAAIC,EAAI2O,EAAOoM,SAAS,GAAQ,IAChC/a,EAAE,GAAK,EACPA,EAAEsJ,IAAI8S,EAAM,GAIZ,IAHA,IAAIG,EAAO,GACPC,EAAO,EAEJD,EAAO,GAAiB,IAAZvc,EAAEwc,MAAkC,IAAdxc,EAAEwc,EAAO,MAAcD,IAAQC,GAKxE,OAAW,KADXxc,EAAIA,EAAE+a,SAASyB,IACT,IACFD,EAAO,GAAc,IAATvc,EAAE,MAAwB,IAAPA,EAAE,IADb,GAGxBgQ,EAAIyJ,UAAY,EAAI4C,EAAOE,EAG3B5N,EAAO,GAAK,GACZA,EAAO,GAAKqB,EAAIyJ,UAAY,EAC5B9K,EAAO,GAAK,EACZA,EAAO,GAAK5O,EAAEmB,OACdyN,EAAOrF,IAAIvJ,EAAG,GACd4O,EAAO,EAAI0N,GAAQ,EACnB1N,EAAO,EAAI0N,GAAQrc,EAAEkB,OACrByN,EAAOrF,IAAItJ,EAAG,EAAIqc,GACX,IAITxc,gBAAiB,SAAyB8O,EAAQ9H,GAChD,GAAIA,EAAI3F,OAAS,EAAG,OAAO,EAC3B,GAAI2F,EAAI3F,OAAS,GAAI,OAAO,EAC5B,GAAe,KAAX2F,EAAI,GAAa,OAAO,EAC5B,GAAIA,EAAI,KAAOA,EAAI3F,OAAS,EAAG,OAAO,EACtC,GAAe,IAAX2F,EAAI,GAAa,OAAO,EAC5B,IAAIwV,EAAOxV,EAAI,GACf,GAAa,IAATwV,EAAY,OAAO,EACvB,GAAI,EAAIA,GAAQxV,EAAI3F,OAAQ,OAAO,EACnC,GAAsB,IAAlB2F,EAAI,EAAIwV,GAAgB,OAAO,EACnC,IAAIE,EAAO1V,EAAI,EAAIwV,GACnB,GAAa,IAATE,EAAY,OAAO,EACvB,GAAI,EAAIF,EAAOE,IAAS1V,EAAI3F,OAAQ,OAAO,EAC3C,GAAa,IAAT2F,EAAI,GAAW,OAAO,EAC1B,GAAIwV,EAAO,GAAgB,IAAXxV,EAAI,MAA0B,IAATA,EAAI,IAAY,OAAO,EAC5D,GAAoB,IAAhBA,EAAIwV,EAAO,GAAW,OAAO,EACjC,GAAIE,EAAO,GAAuB,IAAlB1V,EAAIwV,EAAO,MAAiC,IAAhBxV,EAAIwV,EAAO,IAAY,OAAO,EAC1E,IAAIF,EAAOtV,EAAIkU,SAAS,EAAG,EAAIsB,GAE/B,GADoB,KAAhBF,EAAKjb,QAA6B,IAAZib,EAAK,KAAaA,EAAOA,EAAKpB,SAAS,IAC7DoB,EAAKjb,OAAS,GAAI,OAAO,EAC7B,IAAIkb,EAAOvV,EAAIkU,SAAS,EAAIsB,GAE5B,GADoB,KAAhBD,EAAKlb,QAA6B,IAAZkb,EAAK,KAAaA,EAAOA,EAAK9a,MAAM,IAC1D8a,EAAKlb,OAAS,GAAI,MAAM,IAAIlC,MAAM,wBACtC,IAAIe,EAAI,IAAI1B,EAAG8d,GACXpc,EAAE2H,IAAIlJ,EAASO,IAAM,IAAGgB,EAAI,IAAI1B,EAAG,IACvC,IAAI2B,EAAI,IAAI3B,EAAGwI,EAAIkU,SAAS,EAAIsB,IAIhC,OAHIrc,EAAE0H,IAAIlJ,EAASO,IAAM,IAAGiB,EAAI,IAAI3B,EAAG,IACvCsQ,EAAOrF,IAAIvJ,EAAEJ,YAAY6O,WAAY,KAAM,IAAK,GAChDG,EAAOrF,IAAItJ,EAAEL,YAAY6O,WAAY,KAAM,IAAK,IACzC,GAETkL,UAAW,SAAmB1J,EAAKrI,EAAS+Q,EAAQ1Q,EAAM4R,GACxD,GAAIA,EAAS,CACX,IAAI6C,EAAW7C,EAEfA,EAAU,SAAiB8C,GACzB,IAAI5X,EAAQ2X,EAAS9U,EAAS+Q,EAAQ,KAAM1Q,EAAM0U,GAGlD,KADc5X,aAAiB0J,YAA+B,KAAjB1J,EAAM5D,QACrC,MAAM,IAAIlC,MAAM,mBAC9B,OAAO,IAAIX,EAAGyG,IAIlB,IAEI+B,EAFAhI,EAAI,IAAIR,EAAGqa,GACf,GAAI7Z,EAAE6I,IAAIlJ,EAASO,IAAM,GAAKF,EAAEY,SAAU,OAAO,EAGjD,IACEoH,EAAMvI,EAAGwI,KAAKa,EAAS+Q,EAAQ,CAC7BiE,WAAW,EACXC,EAAGhD,EACHiD,KAAM7U,IAER,MAAO6L,GACP,OAAO,EAMT,OAHA7D,EAAIxO,UAAU8H,IAAIzC,EAAI9G,EAAEJ,YAAY6O,WAAY,KAAM,IAAK,GAC3DwB,EAAIxO,UAAU8H,IAAIzC,EAAI7G,EAAEL,YAAY6O,WAAY,KAAM,IAAK,IAC3DwB,EAAI6J,MAAQhT,EAAIiW,cACT,GAEThD,YAAa,SAAqBjT,EAAK8S,EAAOZ,GAC5C,IAAIjZ,EAAS,CACXC,EAAG8G,EAAIkU,SAAS,EAAG,IACnB/a,EAAG6G,EAAIkU,SAAS,GAAI,KAElBgC,EAAO,IAAI1e,EAAGyB,EAAOC,GACrBid,EAAO,IAAI3e,EAAGyB,EAAOE,GACzB,GAAI+c,EAAKrV,IAAIlJ,EAASO,IAAM,GAAKie,EAAKtV,IAAIlJ,EAASO,IAAM,EAAG,OAAO,EACnE,GAAwB,IAApBie,EAAKtV,IAAIpJ,EAAG4d,KAAaa,EAAKtd,UAAYud,EAAKvd,SAAU,OAAO,EACpE,IAAIoc,EAAOzB,EAAcrB,GACzB,GAAa,OAAT8C,EAAe,OAAO,EAC1B,IAAI5c,EAAQ4c,EAAKD,YAEjB,OADctd,EAAG2e,OAAOtD,EAAO7Z,EAAQb,GACtB,EAAI,GAEvB8a,aAAc,SAAsBpL,EAAQ9H,EAAKgT,EAAOF,GACtD,IASI1a,EATAa,EAAS,CACXC,EAAG8G,EAAIvF,MAAM,EAAG,IAChBtB,EAAG6G,EAAIvF,MAAM,GAAI,KAEfyb,EAAO,IAAI1e,EAAGyB,EAAOC,GACrBid,EAAO,IAAI3e,EAAGyB,EAAOE,GACzB,GAAI+c,EAAKrV,IAAIlJ,EAASO,IAAM,GAAKie,EAAKtV,IAAIlJ,EAASO,IAAM,EAAG,OAAO,EACnE,GAAIge,EAAKtd,UAAYud,EAAKvd,SAAU,OAAO,EAI3C,IACER,EAAQX,EAAG4e,cAAcvD,EAAO7Z,EAAQ+Z,GACxC,MAAOhG,GACP,OAAO,EAIT,OADAsH,EAAcxM,EAAQ1P,GACf,GAET+a,KAAM,SAAcrL,EAAQoK,EAAQL,EAAQ1Q,EAAMiS,EAAQC,EAAMC,GAC9D,IAAI0B,EAAOzB,EAAcrB,GACzB,GAAa,OAAT8C,EAAe,OAAO,EAC1B,IAAIxb,EAAS,IAAIhC,EAAGqa,GACpB,GAAIrY,EAAOqH,IAAIlJ,EAASO,IAAM,GAAKsB,EAAOZ,SAAU,OAAO,EAC3D,IAAIR,EAAQ4c,EAAKD,YAAYzc,IAAIkB,GAEjC,QAAeiE,IAAX2V,EAKF,IAJA,IAAIkD,EAAQle,EAAMyJ,OAAO,MAAM,GAE3B0U,EAAS9e,EAAGkG,OAAO6Y,OAAOF,GAAOG,SAE5B3Y,EAAI,EAAGA,EAAI,KAAMA,EACxBgK,EAAOhK,GAAKyY,EAAOzY,OAEhB,CACAuV,IAAMA,EAAO,IAAI1L,WAAW,KAGjC,IAFA,IAAIhO,EAAIvB,EAAMI,OAAO6F,QAAQ,KAAM,IAE1BqY,EAAM,EAAGA,EAAM,KAAMA,EAC5BrD,EAAKqD,GAAO/c,EAAE+c,GAGXpD,IAAMA,EAAO,IAAI3L,WAAW,KAGjC,IAFA,IAAI/N,EAAIxB,EAAMK,OAAO4F,QAAQ,KAAM,IAE1BsY,EAAM,EAAGA,EAAM,KAAMA,EAC5BrD,EAAKqD,GAAO/c,EAAE+c,GAGhB,IAAIhZ,EAAOyV,EAAOC,EAAMC,EAAMnS,GAE9B,KADcxD,aAAgBgK,YAAchK,EAAKtD,SAAWyN,EAAOzN,QACrD,OAAO,EACrByN,EAAOrF,IAAI9E,GAGb,OAAO,K,iCC9WX5G,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAGT,IAAI0f,EAAc,EAAQ,KAe1B3f,EAAQkZ,eAbR,SAAwB0G,GACtB,OAAO,IAAItI,SAAQ,SAAUC,EAASC,GACpCmI,EAAYC,GAAO,SAAU7J,EAAK8J,GAC5B9J,EACFyB,EAAOzB,GAITwB,EAAQsI,UAWd7f,EAAQoZ,mBAJR,SAA4BwG,GAC1B,OAAOD,EAAYC,K,kCCxBrB,YAEA9f,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAWTD,EAAQ0Z,mBARR,SAA4BoG,GAC1B,OAAO,SAAU9F,GACf,IAAItT,EAAOoZ,IAEX,OADApZ,EAAK6Y,OAAOvF,GACLlY,EAAOkB,KAAK0D,EAAK8Y,c,wMCV5B,YAEA1f,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQ0K,SAAW1K,EAAQmG,aAAenG,EAAQ+f,WAAa/f,EAAQggB,WAAahgB,EAAQgG,YAAchG,EAAQigB,YAAcjgB,EAAQiH,SAAWjH,EAAQkL,WAAalL,EAAQ4H,MAAQ5H,EAAQkgB,eAAiBlgB,EAAQiJ,UAAYjJ,EAAQoJ,cAAgBpJ,EAAQ+F,WAAQ,EAE7Q,IAAIL,EAAY,EAAQ,KAEpBnF,EAAK,EAAQ,GAOjBP,EAAQ+F,MAAQ,SAAU6Z,GACxB,OAAO9d,EAAOkJ,YAAY4U,GAAOO,KAAK,IAYxCngB,EAAQoJ,cAAgB,SAAU4Q,EAAK5W,EAAQgd,QAC/B,IAAVA,IACFA,GAAQ,GAGV,IAAI/W,EAAMrJ,EAAQ+F,MAAM3C,GAGxB,OAFA4W,EAAMha,EAAQiH,SAAS+S,GAEnBoG,EACEpG,EAAI5W,OAASA,GACf4W,EAAIlX,KAAKuG,GACFA,GAGF2Q,EAAIxW,MAAM,EAAGJ,GAEhB4W,EAAI5W,OAASA,GACf4W,EAAIlX,KAAKuG,EAAKjG,EAAS4W,EAAI5W,QACpBiG,GAGF2Q,EAAIxW,OAAOJ,IAItBpD,EAAQiJ,UAAYjJ,EAAQoJ,cAS5BpJ,EAAQkgB,eAAiB,SAAUlG,EAAK5W,GACtC,OAAOpD,EAAQiJ,UAAU+Q,EAAK5W,GAAQ,IASxCpD,EAAQ4H,MAAQ,SAAUD,GAIxB,IAFA,IAAI4U,GADJ5U,EAAIjC,EAAUW,eAAesB,IACf,GAEPA,EAAEvE,OAAS,GAA0B,MAArBmZ,EAAM9V,YAE3B8V,GADA5U,EAAIA,EAAEnE,MAAM,IACF,GAGZ,OAAOmE,GAGT3H,EAAQkL,WAAalL,EAAQ4H,MAM7B5H,EAAQiH,SAAW,SAAUyB,GAC3B,IAAK5G,EAAO4J,SAAShD,GACnB,GAAIkD,MAAMC,QAAQnD,GAChBA,EAAI5G,EAAOkB,KAAK0F,QACX,GAAiB,kBAANA,EAAgB,CAChC,IAAIhD,EAAUsK,YAAYtH,GAGxB,MAAM,IAAIxH,MAAM,8GAAgHwH,GAFhIA,EAAI5G,EAAOkB,KAAK0C,EAAUwI,UAAUxI,EAAUW,eAAeqC,IAAK,YAI/D,GAAiB,kBAANA,EAChBA,EAAIhD,EAAUgJ,YAAYhG,QACrB,GAAU,OAANA,QAAoBlC,IAANkC,EACvBA,EAAI5G,EAAOkJ,YAAY,QAClB,GAAIzK,EAAGoQ,KAAKjI,GACjBA,EAAIA,EAAE7G,YAAYC,OACb,KAAI4G,EAAEtB,QAIX,MAAM,IAAIlG,MAAM,gBAFhBwH,EAAI5G,EAAOkB,KAAK0F,EAAEtB,WAMtB,OAAOsB,GAST1I,EAAQigB,YAAc,SAAU5W,GAC9B,OAAO,IAAI9I,EAAGP,EAAQiH,SAASoC,IAAMgX,YAQvCrgB,EAAQgG,YAAc,SAAUqD,GAE9B,MAAO,MADPA,EAAMrJ,EAAQiH,SAASoC,IACL5C,SAAS,QAQ7BzG,EAAQggB,WAAa,SAAUM,GAC7B,OAAO,IAAI/f,EAAG+f,GAAKC,SAAS,MAQ9BvgB,EAAQ+f,WAAa,SAAUO,GAC7B,OAAOxe,EAAOkB,KAAKsd,EAAIE,OAAO,KAAKpZ,YAOrCpH,EAAQmG,aAAe,SAAU0I,GAC/B,MAAmB,kBAARA,GAIJnJ,EAAUuI,cAAcY,GAHtBA,EAGmC,KAAOA,GASrD7O,EAAQ0K,SAAW,SAAU+V,GAC3B,GAAI3e,EAAO4J,SAAS+U,GAClB,MAAO,KAAOA,EAAGha,SAAS,OACrB,GAAIga,aAAc7U,MAAO,CAG9B,IAFA,IAAI8U,EAAQ,GAEH7Z,EAAI,EAAGA,EAAI4Z,EAAGrd,OAAQyD,IAC7B6Z,EAAMtV,KAAKpL,EAAQ0K,SAAS+V,EAAG5Z,KAGjC,OAAO6Z,M,4DCxLX,YAEA5gB,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQoC,WAAapC,EAAQkc,KAAOlc,EAAQmJ,QAAUnJ,EAAQmf,OAASnf,EAAQgJ,KAAOhJ,EAAQyD,mBAAqBzD,EAAQ+B,gBAAkB/B,EAAQ0b,gBAAkB1b,EAAQyb,mBAAqBzb,EAAQmb,iBAAmBnb,EAAQwb,kBAAoBxb,EAAQub,kBAAoBvb,EAAQ+H,gBAAkB/H,EAAQiI,iBAAmBjI,EAAQkI,gBAAkBlI,EAAQgb,mBAAqBhb,EAAQ8a,mBAAqB9a,EAAQyB,qBAAuBzB,EAAQ6a,iBAAmB7a,EAAQmD,iBAAmBnD,EAAQY,iBAAmBZ,EAAQ6H,sBAAmB,EAE3iB,IAAIlC,EAAY,EAAQ,KAEpBgb,EAAc,EAAQ,MAEtBC,EAAM,EAAQ,MASlB5gB,EAAQ6H,iBAAmB,SAAUhH,GAEnC,OAA0B,KAAtBA,EAAWuC,QAIRuC,EAAUkC,iBAAiB6I,WAAW1N,KAAKnC,KAWpDb,EAAQY,iBAAmB,SAAUC,EAAYC,GAE/C,GAA0B,KAAtBD,EAAWuC,OACb,MAAM,IAAIyd,WAAW,iCAGvB,IAAIxe,EAAYse,EAAY/f,iBAAiBC,EAAYC,GACzD,OAAO8f,EAAIhgB,iBAAiBC,EAAYwB,EAAWvB,IAUrDd,EAAQmD,iBAAmB,SAAUtC,GAKnC,GAAmB,QAFnBA,EAAa+f,EAAIzd,iBAAiBtC,KAEe,KAAtBA,EAAWuC,QAAiBpD,EAAQ6H,iBAAiBhH,GAC9E,OAAOA,EAGT,MAAM,IAAIK,MAAM,oCAUlBlB,EAAQ6a,iBAAmB,SAAUha,GACnC,OAAOiB,EAAOkB,KAAK2C,EAAUkV,iBAAiBnK,WAAW1N,KAAKnC,MAUhEb,EAAQyB,qBAAuB,SAAUZ,GACvC,GAA0B,KAAtBA,EAAWuC,OACb,MAAM,IAAIlC,MAAM,iCAGlB,OAAOY,EAAOkB,KAAK2d,EAAYlf,qBAAqBiP,WAAW1N,KAAKnC,MAWtEb,EAAQ8a,mBAAqB,SAAUja,EAAYka,GACjD,OAAOjZ,EAAOkB,KAAK2C,EAAUmV,mBAAmBpK,WAAW1N,KAAKnC,GAAaka,KAW/E/a,EAAQgb,mBAAqB,SAAUna,EAAYka,GACjD,OAAOjZ,EAAOkB,KAAK2C,EAAUqV,mBAAmBtK,WAAW1N,KAAKnC,GAAa6P,WAAW1N,KAAK+X,MAW/F/a,EAAQkI,gBAAkB,SAAUrH,EAAYC,GAC9C,OAAOgB,EAAOkB,KAAK2C,EAAUuC,gBAAgBwI,WAAW1N,KAAKnC,GAAaC,KAW5Ed,EAAQiI,iBAAmB,SAAU5F,EAAWvB,GAC9C,OAAOgB,EAAOkB,KAAK2C,EAAUsC,iBAAiByI,WAAW1N,KAAKX,GAAYvB,KAU5Ed,EAAQ+H,gBAAkB,SAAU1F,GAElC,OAAyB,KAArBA,EAAUe,QAAsC,KAArBf,EAAUe,SAIlCuC,EAAUoC,gBAAgB2I,WAAW1N,KAAKX,KAYnDrC,EAAQub,kBAAoB,SAAUlZ,EAAW0Y,EAAOja,GACtD,OAAOgB,EAAOkB,KAAK2C,EAAU4V,kBAAkB7K,WAAW1N,KAAKX,GAAYqO,WAAW1N,KAAK+X,GAAQja,KAYrGd,EAAQwb,kBAAoB,SAAUnZ,EAAW0Y,EAAOja,GACtD,OAAOgB,EAAOkB,KAAK2C,EAAU6V,kBAAkB9K,WAAW1N,KAAKX,GAAYqO,WAAW1N,KAAK+X,GAAQja,KAWrGd,EAAQmb,iBAAmB,SAAU2F,EAAYhgB,GAC/C,IAAIiL,EAAO,GAIX,OAHA+U,EAAWtW,SAAQ,SAAUnI,GAC3B0J,EAAKX,KAAKsF,WAAW1N,KAAKX,OAErBP,EAAOkB,KAAK2C,EAAUwV,iBAAiBpP,EAAMjL,KAUtDd,EAAQyb,mBAAqB,SAAU/X,GACrC,OAAO5B,EAAOkB,KAAK2C,EAAU8V,mBAAmB/K,WAAW1N,KAAKU,MAUlE1D,EAAQ0b,gBAAkB,SAAUhY,GAClC,OAAO5B,EAAOkB,KAAK2C,EAAU+V,gBAAgBhL,WAAW1N,KAAKU,MAU/D1D,EAAQ+B,gBAAkB,SAAU2B,GAClC,OAAO5B,EAAOkB,KAAK2C,EAAU5D,gBAAgB2O,WAAW1N,KAAKU,MAU/D1D,EAAQyD,mBAAqB,SAAUC,GAIrC,GAAyB,IAArBA,EAAUN,OACZ,MAAM,IAAIyd,WAAW,+BAGvB,IAAI7e,EAAS4e,EAAInd,mBAAmBC,GAEpC,GAAe,OAAX1B,EACF,MAAM,IAAId,MAAM,gCAGlB,OAAOyf,EAAY5e,gBAAgBC,IAYrChC,EAAQgJ,KAAO,SAAUa,EAAShJ,EAAY+U,GAC5C,GAAgB,OAAZA,EACF,MAAM,IAAIN,UAAU,+BAGtB,IAAIyL,OAAcva,EAElB,GAAIoP,EAAS,CAGX,GAFAmL,EAAc,GAEO,OAAjBnL,EAAQ1L,KAEV,MAAM,IAAIoL,UAAU,mCAGtB,GAAIM,EAAQ1L,KAAM,CAChB,GAA2B,IAAvB0L,EAAQ1L,KAAK9G,OACf,MAAM,IAAIyd,WAAW,kCAGvBE,EAAY7W,KAAO,IAAIwG,WAAWkF,EAAQ1L,MAG5C,GAAwB,OAApB0L,EAAQkG,QACV,MAAM,IAAIxG,UAAU,wCAGlBM,EAAQkG,UAEViF,EAAYjF,QAAU,SAAUjS,EAAShJ,EAAYmgB,EAAM9W,EAAM+W,GAC/D,IAAIC,EAAqB,MAARF,EAAelf,EAAOkB,KAAKge,GAAQ,KAChDG,EAAqB,MAARjX,EAAepI,EAAOkB,KAAKkH,GAAQ,KAChDqI,EAASzQ,EAAOkB,KAAK,IAMzB,OAJI4S,EAAQkG,UACVvJ,EAASqD,EAAQkG,QAAQha,EAAOkB,KAAK6G,GAAU/H,EAAOkB,KAAKnC,GAAaqgB,EAAYC,EAAYF,IAG3F,IAAIvQ,WAAW6B,KAK5B,IAAIxJ,EAAMpD,EAAUiW,UAAUlL,WAAW1N,KAAK6G,GAAU6G,WAAW1N,KAAKnC,GAAakgB,GACrF,MAAO,CACLrd,UAAW5B,EAAOkB,KAAK+F,EAAIrF,WAC3BmF,SAAUE,EAAIgT,QAalB/b,EAAQmf,OAAS,SAAUtV,EAASnG,EAAWrB,GAC7C,OAAOsD,EAAUqW,YAAYtL,WAAW1N,KAAKU,GAAYgN,WAAW1N,KAAK6G,GAAUxH,IAarFrC,EAAQmJ,QAAU,SAAUU,EAASnG,EAAWqY,EAAOjb,GACrD,OAAOgB,EAAOkB,KAAK2C,EAAUsW,aAAavL,WAAW1N,KAAKU,GAAYqY,EAAOrL,WAAW1N,KAAK6G,GAAU/I,KAWzGd,EAAQkc,KAAO,SAAU7Z,EAAWxB,GAElC,OAAOiB,EAAOkB,KAAK2C,EAAUuW,KAAKxL,WAAW1N,KAAKX,GAAYqO,WAAW1N,KAAKnC,GAAa,MAG7Fb,EAAQoC,WAAa,SAAUC,EAAWxB,EAAYC,GAIpD,GAAyB,KAArBuB,EAAUe,QAAsC,KAArBf,EAAUe,OACvC,MAAM,IAAIyd,WAAW,gCAIvB,GAA0B,KAAtBhgB,EAAWuC,OACb,MAAM,IAAIyd,WAAW,iCAGvB,OAAO/e,EAAOkB,KAAK2d,EAAYve,WAAWsO,WAAW1N,KAAKX,GAAYqO,WAAW1N,KAAKnC,GAAaC,O,4DC/WrG,YAEAhB,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQmH,QAAUnH,EAAQohB,UAAYphB,EAAQsf,OAAStf,EAAQ0H,UAAY1H,EAAQ2G,YAAS,EAE5F,IAAIsS,EAAK,EAAQ,KACbQ,EAAYR,EAAGQ,UACfE,EAAYV,EAAGU,UACf0H,EAAOpI,EAAGvR,UACVkS,EAAYX,EAAGW,UAEf0H,EAAa,EAAQ,KAErB5b,EAAY,EAAQ,KAEpBqE,EAAM,EAAQ,KAEdnE,EAAU,EAAQ,KAStB5F,EAAQ2G,OAAS,SAAUgB,EAAG4Z,GAa5B,YAZa,IAATA,IACFA,EAAO,KAMP5Z,EAHe,kBAANA,GAAmBjC,EAAUsK,YAAYrI,GAG9C/B,EAAQqB,SAASU,GAFjB7F,EAAOkB,KAAK2E,EAAG,QAKhB4Z,IAAMA,EAAO,KAEVA,GACN,KAAK,IAED,OAAO9H,EAAU9R,GAGrB,KAAK,IAED,OAAO0Z,EAAK1Z,GAGhB,KAAK,IAED,OAAOgS,EAAUhS,GAGrB,KAAK,IAED,OAAOiS,EAAUjS,GAGrB,QAEI,MAAM,IAAIzG,MAAM,2BAA6BqgB,KAUrDvhB,EAAQ0H,UAAY,SAAUC,GAC5B,OAAO3H,EAAQ2G,OAAOgB,IAQxB3H,EAAQsf,OAAS,SAAU3X,GAEzB,OADAA,EAAI/B,EAAQqB,SAASU,GACd2Z,EAAW,UAAU/B,OAAO5X,GAAG6X,UASxCxf,EAAQohB,UAAY,SAAUzZ,EAAG6Z,GAC/B7Z,EAAI/B,EAAQqB,SAASU,GACrB,IAAIjB,EAAO4a,EAAW,UAAU/B,OAAO5X,GAAG6X,SAE1C,OAAe,IAAXgC,EACK5b,EAAQqD,UAAUvC,EAAM,IAExBA,GASX1G,EAAQmH,QAAU,SAAUQ,GAC1B,OAAO3H,EAAQ2G,OAAOoD,EAAIa,OAAOjD,O,2DC7GnC,IAAI8Z,EAAW/U,MAAQA,KAAK+U,UAAY,WAatC,OAZAA,EAAW3hB,OAAO4hB,QAAU,SAAUvJ,GACpC,IAAK,IAAIjW,EAAG2E,EAAI,EAAG5F,EAAIwZ,UAAUrX,OAAQyD,EAAI5F,EAAG4F,IAG9C,IAAK,IAAIkG,KAFT7K,EAAIuY,UAAU5T,GAGR/G,OAAOqN,UAAUH,eAAeU,KAAKxL,EAAG6K,KAAIoL,EAAEpL,GAAK7K,EAAE6K,IAI7D,OAAOoL,IAGOJ,MAAMrL,KAAM+N,YAG9B3a,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAGT,IAAIoN,EAAoB,EAAQ,KAE5BsU,EAAsB,EAAQ,KAE9BrU,EAAW,EAAQ,KAGnBsU,EAAU,IAAIvU,EAAkB9M,GAAG,mEAAoE,IAKvGJ,EAAc,WA8BhB,SAASA,EAAY+J,EAAMsD,GAUzB,QATa,IAATtD,IACFA,EAAO,SAGI,IAATsD,IACFA,EAAO,IAILA,EAAKqU,OAAQ,CACf,GAAIrU,EAAKsU,OAAStU,EAAKuU,SACrB,MAAM,IAAI7gB,MAAM,gGAGlBwL,KAAKsV,QAAUxU,EAAKqU,WACf,CACL,IAAIC,EAAQtU,EAAKsU,MAAQtU,EAAKsU,MAAQ,UAClCC,EAAWvU,EAAKuU,SAAWvU,EAAKuU,SAAW,aAC/CrV,KAAKsV,QAAU,IAAIL,EAAoBvhB,QAAQ0hB,EAAOC,GAIxD,IAAI9X,EAAS,CAAC,CACZkB,KAAM,QACN/H,OAAQ,GACR6H,WAAW,EACX7K,QAAS,IAAIkN,EAASxL,OAAO,KAC5B,CACDqJ,KAAM,WACN/H,OAAQ,GACR6H,WAAW,EACX7K,QAAS,IAAIkN,EAASxL,OAAO,KAC5B,CACDqJ,KAAM,WACNM,MAAO,MACPrI,OAAQ,GACR6H,WAAW,EACX7K,QAAS,IAAIkN,EAASxL,OAAO,KAC5B,CACDqJ,KAAM,KACNJ,WAAW,EACX3H,OAAQ,GACRhD,QAAS,IAAIkN,EAASxL,OAAO,KAC5B,CACDqJ,KAAM,QACN/H,OAAQ,GACR6H,WAAW,EACX7K,QAAS,IAAIkN,EAASxL,OAAO,KAC5B,CACDqJ,KAAM,OACNM,MAAO,QACPV,WAAW,EACX3K,QAAS,IAAIkN,EAASxL,OAAO,KAC5B,CACDqJ,KAAM,IACNJ,WAAW,EACX3K,QAAS,IAAIkN,EAASxL,OAAO,KAC5B,CACDqJ,KAAM,IACN/H,OAAQ,GACR2H,WAAW,EACXE,WAAW,EACX7K,QAAS,IAAIkN,EAASxL,OAAO,KAC5B,CACDqJ,KAAM,IACN/H,OAAQ,GACR2H,WAAW,EACXE,WAAW,EACX7K,QAAS,IAAIkN,EAASxL,OAAO,MAG/BuL,EAAkBvD,iBAAiB4C,KAAMzC,EAAQC,GAOjDpK,OAAOC,eAAe2M,KAAM,OAAQ,CAClCrB,YAAY,EACZC,cAAc,EACdC,IAAKmB,KAAKiB,iBAAiBsU,KAAKvV,QAGlCA,KAAKwV,WAAWxV,KAAKhE,GAErBgE,KAAKyV,iCAmQP,OA5PAhiB,EAAYgN,UAAUiV,kBAAoB,WACxC,MAAmC,KAA5B1V,KAAK2V,GAAG5b,SAAS,QAQ1BtG,EAAYgN,UAAUzG,KAAO,SAAUqH,GAKrC,IAAIuU,EAcJ,YAlByB,IAArBvU,IACFA,GAAmB,GAMnBuU,EADEvU,EACMrB,KAAKvC,IAETuC,KAAK6V,oBACC7V,KAAKvC,IAAI3G,MAAM,EAAG,GAAGrB,OAAO,CAACkL,EAAkBpG,SAASyF,KAAK8V,cACrEnV,EAAkBnC,WAAWmC,EAAkBpG,SAAS,IAAKoG,EAAkBnC,WAAWmC,EAAkBpG,SAAS,MAE7GyF,KAAKvC,IAAI3G,MAAM,EAAG,GAKvB6J,EAAkBlG,QAAQmb,IAOnCniB,EAAYgN,UAAUqV,WAAa,WACjC,OAAO9V,KAAKsV,QAAQrZ,WAOtBxI,EAAYgN,UAAUQ,iBAAmB,WACvC,GAAIjB,KAAKmB,MACP,OAAOnB,KAAKmB,MAGd,IAAIoN,EAASvO,KAAK+V,qBAElB,OADA/V,KAAKmB,MAAQR,EAAkBxI,gBAAgBoW,GACxCvO,KAAKmB,OAOd1N,EAAYgN,UAAUsV,mBAAqB,WACzC,IAAK/V,KAAKgW,kBACR,MAAM,IAAIxhB,MAAM,qBAIlB,OAAOwL,KAAKiW,eAOdxiB,EAAYgN,UAAUuV,gBAAkB,WACtC,IAAI5Z,EAAU4D,KAAKhG,MAAK,GAExB,GAAIgG,KAAKsV,QAAQY,YAAY,cAAkE,IAAlD,IAAIvV,EAAkB9M,GAAGmM,KAAKxK,GAAG0H,IAAIgY,GAChF,OAAO,EAGT,IACE,IAAIlZ,EAAI2E,EAAkB4S,YAAYvT,KAAKhE,GAEvCma,EAAkCna,GAAyB,EAApBgE,KAAK8V,aAAmB,IAAM9V,KAAKsV,QAAQY,YAAY,kBAElGlW,KAAKiW,cAAgBtV,EAAkB9E,UAAUO,EAASJ,EAAGgE,KAAKzK,EAAGyK,KAAKxK,EAAG2gB,EAAkCnW,KAAK8V,kBAAehc,GACnI,MAAOyO,GACP,OAAO,EAGT,QAASvI,KAAKiW,eAQhBxiB,EAAYgN,UAAUnE,KAAO,SAAUnI,GAGrC6L,KAAKhE,EAAI,IAAI4E,EAASxL,OAAO,IAC7B4K,KAAKxK,EAAI,IAAIoL,EAASxL,OAAO,IAC7B4K,KAAKzK,EAAI,IAAIqL,EAASxL,OAAO,IAC7B,IAAIgH,EAAU4D,KAAKhG,MAAK,GACpBqC,EAAMsE,EAAkB7E,OAAOM,EAASjI,GAExC6L,KAAK6V,sBACPxZ,EAAIL,GAAyB,EAApBgE,KAAK8V,aAAmB,GAGnC1iB,OAAO4hB,OAAOhV,KAAM3D,IAOtB5I,EAAYgN,UAAU2V,WAAa,WAIjC,IAHA,IAAI5Y,EAAOwC,KAAKvC,IAAI,GAChB4Y,EAAO,IAAI1V,EAAkB9M,GAAG,GAE3BsG,EAAI,EAAGA,EAAIqD,EAAK9G,OAAQyD,IACnB,IAAZqD,EAAKrD,GAAWkc,EAAKC,MAAMtW,KAAKsV,QAAQiB,MAAM,YAAa,eAAiBF,EAAKC,MAAMtW,KAAKsV,QAAQiB,MAAM,YAAa,kBAGzH,OAAOF,GAOT5iB,EAAYgN,UAAU+V,WAAa,WACjC,IAAIC,EAAMzW,KAAKoW,aAAaE,MAAMtW,KAAKsV,QAAQiB,MAAM,YAAa,OAMlE,OAJIvW,KAAKsV,QAAQY,YAAY,cAAgBlW,KAAK0V,qBAChDe,EAAIH,MAAMtW,KAAKsV,QAAQiB,MAAM,YAAa,eAGrCE,GAOThjB,EAAYgN,UAAUiW,eAAiB,WACrC,OAAO,IAAI/V,EAAkB9M,GAAGmM,KAAK2W,UAAUzF,KAAK,IAAIvQ,EAAkB9M,GAAGmM,KAAK4W,WAAW7F,KAAK,IAAIpQ,EAAkB9M,GAAGmM,KAAKzM,SAGlIE,EAAYgN,UAAUoW,SAAW,SAAUC,QACrB,IAAhBA,IACFA,GAAc,GAGhB,IAAI1J,EAAS,GAUb,OARKpN,KAAKgW,mBACR5I,EAAO1O,KAAK,qBAGVsB,KAAKwW,aAAatZ,IAAI,IAAIyD,EAAkB9M,GAAGmM,KAAK2W,WAAa,GACnEvJ,EAAO1O,KAAK,CAAC,uCAAyCsB,KAAKwW,gBAGzC,IAAhBM,EACuB,IAAlB1J,EAAO1W,OAEP0W,EAAOK,KAAK,MAQvBha,EAAYgN,UAAUxC,UAAY,WAEhC,OAAO0C,EAAkBtD,IAAIa,OAAO8B,KAAKvC,MAQ3ChK,EAAYgN,UAAU9C,OAAS,SAAUoZ,GAMvC,YALe,IAAXA,IACFA,GAAS,GAIJ,IAGTtjB,EAAYgN,UAAU+U,WAAa,SAAUxZ,GAC3C,QAAUlC,IAANkC,GAAgC,IAAbA,EAAEtF,QAIpBsJ,KAAKsV,QAAQY,YAAY,kBAA9B,CAIA,IAAIc,EAAOrW,EAAkB4S,YAAYvX,GAEzC,GAAa,KAATgb,GAAwB,KAATA,EAMnB,KAFqBA,IAA6B,EAApBhX,KAAK8V,aAAmB,IAAMkB,IAA6B,EAApBhX,KAAK8V,aAAmB,IAG3F,MAAM,IAAIthB,MAAM,+BAAiCwiB,EAAO,iBAAmBhX,KAAK8V,aAAe,oFAInGriB,EAAYgN,UAAUwW,UAAY,WAChC,OAAOjX,KAAKhE,EAAEtF,OAAS,GAAKsJ,KAAKzK,EAAEmB,OAAS,GAAKsJ,KAAKxK,EAAEkB,OAAS,GAGnEjD,EAAYgN,UAAUgV,+BAAiC,WACrD,IAAI1U,EAAQf,KAERkX,EAAc9jB,OAAO+jB,yBAAyBnX,KAAM,KACxD5M,OAAOC,eAAe2M,KAAM,IAAK+U,EAAS,GAAImC,EAAa,CACzDpY,IAAK,SAAa9C,QACNlC,IAANkC,GACF+E,EAAMyU,WAAW7U,EAAkBpG,SAASyB,IAG9Ckb,EAAYpY,IAAI9C,QAKtBvI,EAAYgN,UAAUoV,kBAAoB,WACxC,IAAIuB,EAAuBpX,KAAKsV,QAAQY,YAAY,kBAEpD,IAAKlW,KAAKiX,YAER,OAAOG,EAQT,IAAIpb,EAAI2E,EAAkB4S,YAAYvT,KAAKhE,GAE3C,OADsCA,IAA0B,EAApBgE,KAAK8V,aAAmB,IAAM9Z,IAA0B,EAApBgE,KAAK8V,aAAmB,KAC9DsB,GAGrC3jB,EAxXS,GA2XlBH,EAAQI,QAAUD,G,iCC3ZlB,IAAI4jB,EAAkBrX,MAAQA,KAAKqX,kBAAoBjkB,OAAOsN,OAAS,SAAU4W,EAAG3K,EAAGyF,EAAGmF,QAC7Ezd,IAAPyd,IAAkBA,EAAKnF,GAC3Bhf,OAAOC,eAAeikB,EAAGC,EAAI,CAC3B5Y,YAAY,EACZE,IAAK,WACH,OAAO8N,EAAEyF,OAGX,SAAUkF,EAAG3K,EAAGyF,EAAGmF,QACVzd,IAAPyd,IAAkBA,EAAKnF,GAC3BkF,EAAEC,GAAM5K,EAAEyF,KAGRoF,EAAexX,MAAQA,KAAKwX,cAAgB,SAAU7K,EAAGrZ,GAC3D,IAAK,IAAI+M,KAAKsM,EACF,YAANtM,GAAoB/M,EAAQgN,eAAeD,IAAIgX,EAAgB/jB,EAASqZ,EAAGtM,IAInFjN,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQ2F,UAAY3F,EAAQ+J,IAAM/J,EAAQO,QAAK,EAE/C,IAAIoF,EAAY,EAAQ,KAExB3F,EAAQ2F,UAAYA,EAEpB,IAAID,EAAY,EAAQ,KAEpBnF,EAAK,EAAQ,GAEjBP,EAAQO,GAAKA,EAEb,IAAIwJ,EAAM,EAAQ,KAElB/J,EAAQ+J,IAAMA,EACdjK,OAAO4hB,OAAO1hB,EAAS0F,GAKvBwe,EAAa,EAAQ,MAAgBlkB,GAMrCkkB,EAAa,EAAQ,MAAclkB,GAMnCkkB,EAAa,EAAQ,KAAWlkB,GAMhCkkB,EAAa,EAAQ,MAAgBlkB,GAMrCkkB,EAAa,EAAQ,KAAYlkB,GAMjCkkB,EAAa,EAAQ,MAAalkB,I,iCCxElC,IAAIyhB,EAAW/U,MAAQA,KAAK+U,UAAY,WAatC,OAZAA,EAAW3hB,OAAO4hB,QAAU,SAAUvJ,GACpC,IAAK,IAAIjW,EAAG2E,EAAI,EAAG5F,EAAIwZ,UAAUrX,OAAQyD,EAAI5F,EAAG4F,IAG9C,IAAK,IAAIkG,KAFT7K,EAAIuY,UAAU5T,GAGR/G,OAAOqN,UAAUH,eAAeU,KAAKxL,EAAG6K,KAAIoL,EAAEpL,GAAK7K,EAAE6K,IAI7D,OAAOoL,IAGOJ,MAAMrL,KAAM+N,YAG9B3a,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAGT,IAAIkkB,EAAW,EAAQ,MAEnBC,EAAc,EAAQ,MAMtBC,EAAS,WAOX,SAASA,EAAOvC,EAAOC,EAAUuC,GAC/B5X,KAAK6X,aAAe7X,KAAK8X,SAAS1C,GAClCpV,KAAK+X,UAAY,KACjB/X,KAAKgY,yBAA6Cle,IAAvB8d,EAAmC,GAAKA,EAE/DvC,GACFrV,KAAKiY,YAAY5C,GA0brB,OA3aAsC,EAAOO,eAAiB,SAAUC,EAAWC,EAAmB/C,EAAUuC,GACxE,IAAIS,EAAsBV,EAAOW,gBAAgBH,GAEjD,OAAO,IAAIR,EAAO5C,EAASA,EAAS,GAAIsD,GAAsBD,GAAoB/C,EAAUuC,IAG9FD,EAAOW,gBAAkB,SAAUlD,GACjC,GAAqB,kBAAVA,EAAoB,CAC7B,GAAIqC,EAASlY,OAAc,MAAE6V,GAC3B,OAAOqC,EAASlY,OAAOkY,EAASlY,OAAc,MAAE6V,IAGlD,MAAM,IAAI5gB,MAAM,iBAAmB4gB,EAAQ,kBAG7C,GAAIqC,EAASlY,OAAO6V,GAClB,OAAOqC,EAASlY,OAAO6V,GAGzB,MAAM,IAAI5gB,MAAM,mBAAqB4gB,EAAQ,mBAU/CuC,EAAOlX,UAAUqX,SAAW,SAAU1C,GACpC,GAAqB,kBAAVA,GAAuC,kBAAVA,EACtCpV,KAAK6X,aAAeF,EAAOW,gBAAgBlD,OACtC,IAAqB,kBAAVA,EAahB,MAAM,IAAI5gB,MAAM,sBAVhB,IAFA,IAES+c,EAAK,EAAGgH,EAFF,CAAC,YAAa,UAAW,YAAa,kBAEbhH,EAAKgH,EAAW7hB,OAAQ6a,IAAM,CACpE,IAAIgF,EAAQgC,EAAWhH,GAEvB,QAAqBzX,IAAjBsb,EAAMmB,GACR,MAAM,IAAI/hB,MAAM,qCAAuC+hB,GAI3DvW,KAAK6X,aAAezC,EAKtB,OAAOpV,KAAK6X,cAQdF,EAAOlX,UAAUwX,YAAc,SAAU5C,GACvC,IAAKrV,KAAKwY,qBAAqBnD,GAC7B,MAAM,IAAI7gB,MAAM,YAAc6gB,EAAW,+CAK3C,IAFA,IAAIoD,GAAU,EAELlH,EAAK,EAAGmH,EAAoBhB,EAAY5X,UAAWyR,EAAKmH,EAAkBhiB,OAAQ6a,IAAM,CAC/EmH,EAAkBnH,GAEpB,KAAO8D,IACnBrV,KAAK+X,UAAY1C,EACjBoD,GAAU,GAId,IAAKA,EACH,MAAM,IAAIjkB,MAAM,sBAAwB6gB,EAAW,mBAUvDsC,EAAOlX,UAAUkY,gBAAkB,SAAUtD,EAAUuD,GAGrD,GAFAA,OAAkC9e,IAAlB8e,GAAqCA,EAEhDvD,GAME,GAAIuD,IAAkB5Y,KAAKwY,qBAAqBnD,GACrD,MAAM,IAAI7gB,MAAM,YAAc6gB,EAAW,mDAP5B,CACb,IAAKrV,KAAK+X,UACR,MAAM,IAAIvjB,MAAM,mEAEhB6gB,EAAWrV,KAAK+X,UAMpB,OAAO1C,GASTsC,EAAOlX,UAAUoY,aAAe,SAAUxD,GAGxC,IAFA,IAES9D,EAAK,EAAGuH,EAFP9Y,KAAKF,YAEeyR,EAAKuH,EAAMpiB,OAAQ6a,IAAM,CACrD,IAAIwH,EAAKD,EAAMvH,GACf,GAAIwH,EAAS,OAAM1D,EAAU,OAAO0D,EAGtC,MAAM,IAAIvkB,MAAM,YAAc6gB,EAAW,0BAA4BrV,KAAKgZ,cAS5ErB,EAAOlX,UAAU+X,qBAAuB,SAAUnD,GAChD,KAAIrV,KAAKgY,oBAAoBthB,OAAS,GAMpC,OAAO,EALP,IAAK,IAAI6a,EAAK,EAAGhF,EAAKvM,KAAKgY,oBAAqBzG,EAAKhF,EAAG7V,OAAQ6a,IAAM,CAEpE,GAAI8D,IADc9I,EAAGgF,GACS,OAAO,EAMzC,OAAO,GAUToG,EAAOlX,UAAU8V,MAAQ,SAAU0C,EAAOxa,EAAM4W,GAE9C,IAAI9hB,EADJ8hB,EAAWrV,KAAK2Y,gBAAgBtD,GAGhC,IAAK,IAAI9D,EAAK,EAAG2H,EAAoBxB,EAAY5X,UAAWyR,EAAK2H,EAAkBxiB,OAAQ6a,IAAM,CAC/F,IAAI4H,EAAYD,EAAkB3H,GAElC,IAAK4H,EAAU,GAAGF,GAChB,MAAM,IAAIzkB,MAAM,SAAWykB,EAAQ,gBAOrC,QAJkCnf,IAA9Bqf,EAAU,GAAGF,GAAOxa,KACtBlL,EAAQ4lB,EAAU,GAAGF,GAAOxa,GAAMzC,GAGhCmd,EAAU,KAAO9D,EAAU,MAGjC,QAAcvb,IAAVvG,EACF,MAAM,IAAIiB,MAAMykB,EAAQ,cAAgBxa,EAAO,cAGjD,OAAOlL,GAUTokB,EAAOlX,UAAU2Y,aAAe,SAAUH,EAAOxa,EAAM4a,GACrD,IAAIC,EAAYtZ,KAAKuZ,gBAAgBF,GACjChE,EAAWiE,EAAUA,EAAU5iB,OAAS,GAAS,KACrD,OAAOsJ,KAAKuW,MAAM0C,EAAOxa,EAAM4W,IAWjCsC,EAAOlX,UAAU+Y,wBAA0B,SAAUnE,EAAUgE,EAAavY,GAE1E,IAAI8X,OAAuC9e,KAD3CgH,OAAgBhH,IAATgH,EAAqBA,EAAO,IACV8X,eAAsC9X,EAAK8X,cACpEvD,EAAWrV,KAAK2Y,gBAAgBtD,EAAUuD,GAC1C,IAAIa,EAAUzZ,KAAK0Z,cAAcrE,GACjC,OAAgB,OAAZoE,GAAoBJ,GAAeI,GAWzC9B,EAAOlX,UAAUkZ,cAAgB,SAAUN,EAAavY,GACtD,OAAOd,KAAKwZ,wBAAwB,KAAMH,EAAavY,IAWzD6W,EAAOlX,UAAUmZ,oBAAsB,SAAUC,EAAWC,EAAWhZ,GAErE,IAAIiZ,OAAiCjgB,KADrCgH,OAAgBhH,IAATgH,EAAqBA,EAAO,IACbiZ,YAAmCjZ,EAAKiZ,WAC9DF,EAAY7Z,KAAK2Y,gBAAgBkB,EAAW/Y,EAAK8X,eAajD,IAJA,IAAIoB,GAAU,EACVC,GAAU,EACVtjB,EAAQ,EAEH4a,EAAK,EAAG2I,EAVbH,EACU/Z,KAAKuZ,gBAAgB,KAAMzY,GAE3Bd,KAAKF,YAOuByR,EAAK2I,EAAYxjB,OAAQ6a,IAAM,CACvE,IAAIwH,EAAKmB,EAAY3I,GACjBwH,EAAS,OAAMc,IAAWG,EAASrjB,GACnCoiB,EAAS,OAAMe,IAAWG,EAAStjB,GACvCA,GAAS,EAGX,OAAOqjB,GAAUC,GAUnBtC,EAAOlX,UAAUyV,YAAc,SAAUb,EAAUvU,GACjD,OAAOd,KAAK4Z,oBAAoB,KAAMvE,EAAUvU,IAUlD6W,EAAOlX,UAAU0Z,wBAA0B,SAAU9E,EAAUvU,GAE7D,IAAI8X,OAAuC9e,KAD3CgH,OAAgBhH,IAATgH,EAAqBA,EAAO,IACV8X,eAAsC9X,EAAK8X,cACpEvD,EAAWrV,KAAK2Y,gBAAgBtD,EAAUuD,GAE1C,IAAK,IAAIrH,EAAK,EAAGhF,EAAKvM,KAAKF,YAAayR,EAAKhF,EAAG7V,OAAQ6a,IAAM,CAC5D,IAAIwH,EAAKxM,EAAGgF,GACZ,GAAIwH,EAAS,OAAM1D,GAA4B,OAAhB0D,EAAU,MAAY,OAAO,EAG9D,OAAO,GAUTpB,EAAOlX,UAAU8Y,gBAAkB,SAAUF,EAAavY,GACxDA,OAAgBhH,IAATgH,EAAqBA,EAAO,GAInC,IAHA,IAAIyY,EAAkB,GAGbhI,EAAK,EAAG6I,EAFPpa,KAAKF,YAEeyR,EAAK6I,EAAM1jB,OAAQ6a,IAAM,CACrD,IAAIwH,EAAKqB,EAAM7I,GACf,GAAoB,OAAhBwH,EAAU,MAAd,CACA,QAAoBjf,IAAhBuf,GAA6C,OAAhBA,GAAwBA,EAAcN,EAAU,MAAG,MAChFjY,EAAK8X,gBAAkB5Y,KAAKwY,qBAAqBO,EAAS,OAC9DQ,EAAgB7a,KAAKqa,IAGvB,OAAOQ,GAUT5B,EAAOlX,UAAU4Z,eAAiB,SAAUhB,EAAavY,GACvDA,OAAgBhH,IAATgH,EAAqBA,EAAO,GACnC,IAAIyY,EAAkBvZ,KAAKuZ,gBAAgBF,EAAavY,GAExD,GAAIyY,EAAgB7iB,OAAS,EAC3B,OAAO6iB,EAAgBA,EAAgB7iB,OAAS,GAAS,KAEzD,MAAM,IAAIlC,MAAM,yCAUpBmjB,EAAOlX,UAAUiZ,cAAgB,SAAUrE,GAEzC,OADAA,EAAWrV,KAAK2Y,gBAAgBtD,GAAU,GACnCrV,KAAK6Y,aAAaxD,GAAiB,OAU5CsC,EAAOlX,UAAU6Z,gBAAkB,SAAUjB,EAAahE,GAGxD,OAFAA,EAAWrV,KAAK2Y,gBAAgBtD,GAAU,GAEtCrV,KAAK0Z,cAAcrE,KAAcgE,GAavC1B,EAAOlX,UAAU8Z,UAAY,SAAUlF,GAErC,OADAA,EAAWrV,KAAK2Y,gBAAgBtD,GACzBrV,KAAK6Y,aAAaxD,GAAqB,WAShDsC,EAAOlX,UAAU+Z,SAAW,SAAUnF,GAEpC,OADAA,EAAWrV,KAAK2Y,gBAAgBtD,GACzBrV,KAAK6Y,aAAaxD,GAAoB,UAQ/CsC,EAAOlX,UAAUga,QAAU,WACzB,OAAOza,KAAK6X,aAAsB,SAQpCF,EAAOlX,UAAUX,UAAY,WAC3B,OAAOE,KAAK6X,aAAwB,WAQtCF,EAAOlX,UAAUia,eAAiB,WAChC,OAAO1a,KAAK6X,aAA6B,gBAQ3CF,EAAOlX,UAAU4U,SAAW,WAC1B,OAAOrV,KAAK+X,WAQdJ,EAAOlX,UAAUxE,QAAU,WACzB,OAAO+D,KAAK6X,aAAsB,SAQpCF,EAAOlX,UAAUuY,UAAY,WAC3B,OAAOvB,EAASlY,OAAc,MAAES,KAAK/D,YAAc+D,KAAK6X,aAAmB,MAQ7EF,EAAOlX,UAAUka,UAAY,WAC3B,OAAO3a,KAAK6X,aAAwB,WAG/BF,EAvcI,GA0cbrkB,EAAQI,QAAUikB","file":"static/js/26.672715c7.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar transaction_1 = require(\"./transaction\");\n\nexports.Transaction = transaction_1.default;\n\nvar fake_1 = require(\"./fake\");\n\nexports.FakeTransaction = fake_1.default;","\"use strict\"; // This file is imported from secp256k1 v3\n// https://github.com/cryptocoinjs/secp256k1-node/blob/master/LICENSE\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar BN = require(\"bn.js\");\n\nvar EC = require('elliptic').ec;\n\nvar ec = new EC('secp256k1');\nvar ecparams = ec.curve;\n\nexports.privateKeyExport = function (privateKey, compressed) {\n  if (compressed === void 0) {\n    compressed = true;\n  }\n\n  var d = new BN(privateKey);\n\n  if (d.ucmp(ecparams.n) >= 0) {\n    throw new Error(\"couldn't export to DER format\");\n  }\n\n  var point = ec.g.mul(d);\n  return toPublicKey(point.getX(), point.getY(), compressed);\n};\n\nexports.privateKeyModInverse = function (privateKey) {\n  var bn = new BN(privateKey);\n\n  if (bn.ucmp(ecparams.n) >= 0 || bn.isZero()) {\n    throw new Error('private key range is invalid');\n  }\n\n  return bn.invm(ecparams.n).toArrayLike(Buffer, 'be', 32);\n};\n\nexports.signatureImport = function (sigObj) {\n  var r = new BN(sigObj.r);\n\n  if (r.ucmp(ecparams.n) >= 0) {\n    r = new BN(0);\n  }\n\n  var s = new BN(sigObj.s);\n\n  if (s.ucmp(ecparams.n) >= 0) {\n    s = new BN(0);\n  }\n\n  return Buffer.concat([r.toArrayLike(Buffer, 'be', 32), s.toArrayLike(Buffer, 'be', 32)]);\n};\n\nexports.ecdhUnsafe = function (publicKey, privateKey, compressed) {\n  if (compressed === void 0) {\n    compressed = true;\n  }\n\n  var point = ec.keyFromPublic(publicKey);\n  var scalar = new BN(privateKey);\n\n  if (scalar.ucmp(ecparams.n) >= 0 || scalar.isZero()) {\n    throw new Error('scalar was invalid (zero or overflow)');\n  }\n\n  var shared = point.pub.mul(scalar);\n  return toPublicKey(shared.getX(), shared.getY(), compressed);\n};\n\nvar toPublicKey = function toPublicKey(x, y, compressed) {\n  var publicKey;\n\n  if (compressed) {\n    publicKey = Buffer.alloc(33);\n    publicKey[0] = y.isOdd() ? 0x03 : 0x02;\n    x.toArrayLike(Buffer, 'be', 32).copy(publicKey, 1);\n  } else {\n    publicKey = Buffer.alloc(65);\n    publicKey[0] = 0x04;\n    x.toArrayLike(Buffer, 'be', 32).copy(publicKey, 1);\n    y.toArrayLike(Buffer, 'be', 32).copy(publicKey, 33);\n  }\n\n  return publicKey;\n};","\"use strict\"; // This file is imported from secp256k1 v3\n// https://github.com/cryptocoinjs/secp256k1-node/blob/master/LICENSE\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar EC_PRIVKEY_EXPORT_DER_COMPRESSED = Buffer.from([// begin\n0x30, 0x81, 0xd3, 0x02, 0x01, 0x01, 0x04, 0x20, // private key\n0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // middle\n0xa0, 0x81, 0x85, 0x30, 0x81, 0x82, 0x02, 0x01, 0x01, 0x30, 0x2c, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x01, 0x01, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xfc, 0x2f, 0x30, 0x06, 0x04, 0x01, 0x00, 0x04, 0x01, 0x07, 0x04, 0x21, 0x02, 0x79, 0xbe, 0x66, 0x7e, 0xf9, 0xdc, 0xbb, 0xac, 0x55, 0xa0, 0x62, 0x95, 0xce, 0x87, 0x0b, 0x07, 0x02, 0x9b, 0xfc, 0xdb, 0x2d, 0xce, 0x28, 0xd9, 0x59, 0xf2, 0x81, 0x5b, 0x16, 0xf8, 0x17, 0x98, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xba, 0xae, 0xdc, 0xe6, 0xaf, 0x48, 0xa0, 0x3b, 0xbf, 0xd2, 0x5e, 0x8c, 0xd0, 0x36, 0x41, 0x41, 0x02, 0x01, 0x01, 0xa1, 0x24, 0x03, 0x22, 0x00, // public key\n0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]);\nvar EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED = Buffer.from([// begin\n0x30, 0x82, 0x01, 0x13, 0x02, 0x01, 0x01, 0x04, 0x20, // private key\n0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // middle\n0xa0, 0x81, 0xa5, 0x30, 0x81, 0xa2, 0x02, 0x01, 0x01, 0x30, 0x2c, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x01, 0x01, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xfc, 0x2f, 0x30, 0x06, 0x04, 0x01, 0x00, 0x04, 0x01, 0x07, 0x04, 0x41, 0x04, 0x79, 0xbe, 0x66, 0x7e, 0xf9, 0xdc, 0xbb, 0xac, 0x55, 0xa0, 0x62, 0x95, 0xce, 0x87, 0x0b, 0x07, 0x02, 0x9b, 0xfc, 0xdb, 0x2d, 0xce, 0x28, 0xd9, 0x59, 0xf2, 0x81, 0x5b, 0x16, 0xf8, 0x17, 0x98, 0x48, 0x3a, 0xda, 0x77, 0x26, 0xa3, 0xc4, 0x65, 0x5d, 0xa4, 0xfb, 0xfc, 0x0e, 0x11, 0x08, 0xa8, 0xfd, 0x17, 0xb4, 0x48, 0xa6, 0x85, 0x54, 0x19, 0x9c, 0x47, 0xd0, 0x8f, 0xfb, 0x10, 0xd4, 0xb8, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xba, 0xae, 0xdc, 0xe6, 0xaf, 0x48, 0xa0, 0x3b, 0xbf, 0xd2, 0x5e, 0x8c, 0xd0, 0x36, 0x41, 0x41, 0x02, 0x01, 0x01, 0xa1, 0x44, 0x03, 0x42, 0x00, // public key\n0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]);\n\nexports.privateKeyExport = function (privateKey, publicKey, compressed) {\n  if (compressed === void 0) {\n    compressed = true;\n  }\n\n  var result = Buffer.from(compressed ? EC_PRIVKEY_EXPORT_DER_COMPRESSED : EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED);\n  privateKey.copy(result, compressed ? 8 : 9);\n  publicKey.copy(result, compressed ? 181 : 214);\n  return result;\n};\n\nexports.privateKeyImport = function (privateKey) {\n  var length = privateKey.length; // sequence header\n\n  var index = 0;\n  if (length < index + 1 || privateKey[index] !== 0x30) return null;\n  index += 1; // sequence length constructor\n\n  if (length < index + 1 || !(privateKey[index] & 0x80)) return null;\n  var lenb = privateKey[index] & 0x7f;\n  index += 1;\n  if (lenb < 1 || lenb > 2) return null;\n  if (length < index + lenb) return null; // sequence length\n\n  var len = privateKey[index + lenb - 1] | (lenb > 1 ? privateKey[index + lenb - 2] << 8 : 0);\n  index += lenb;\n  if (length < index + len) return null; // sequence element 0: version number (=1)\n\n  if (length < index + 3 || privateKey[index] !== 0x02 || privateKey[index + 1] !== 0x01 || privateKey[index + 2] !== 0x01) {\n    return null;\n  }\n\n  index += 3; // sequence element 1: octet string, up to 32 bytes\n\n  if (length < index + 2 || privateKey[index] !== 0x04 || privateKey[index + 1] > 0x20 || length < index + 2 + privateKey[index + 1]) {\n    return null;\n  }\n\n  return privateKey.slice(index + 2, index + 2 + privateKey[index + 1]);\n};\n\nexports.signatureImportLax = function (signature) {\n  var r = Buffer.alloc(32, 0);\n  var s = Buffer.alloc(32, 0);\n  var length = signature.length;\n  var index = 0; // sequence tag byte\n\n  if (signature[index++] !== 0x30) {\n    return null;\n  } // sequence length byte\n\n\n  var lenbyte = signature[index++];\n\n  if (lenbyte & 0x80) {\n    index += lenbyte - 0x80;\n\n    if (index > length) {\n      return null;\n    }\n  } // sequence tag byte for r\n\n\n  if (signature[index++] !== 0x02) {\n    return null;\n  } // length for r\n\n\n  var rlen = signature[index++];\n\n  if (rlen & 0x80) {\n    lenbyte = rlen - 0x80;\n\n    if (index + lenbyte > length) {\n      return null;\n    }\n\n    for (; lenbyte > 0 && signature[index] === 0x00; index += 1, lenbyte -= 1) {\n      ;\n    }\n\n    for (rlen = 0; lenbyte > 0; index += 1, lenbyte -= 1) {\n      rlen = (rlen << 8) + signature[index];\n    }\n  }\n\n  if (rlen > length - index) {\n    return null;\n  }\n\n  var rindex = index;\n  index += rlen; // sequence tag byte for s\n\n  if (signature[index++] !== 0x02) {\n    return null;\n  } // length for s\n\n\n  var slen = signature[index++];\n\n  if (slen & 0x80) {\n    lenbyte = slen - 0x80;\n\n    if (index + lenbyte > length) {\n      return null;\n    }\n\n    for (; lenbyte > 0 && signature[index] === 0x00; index += 1, lenbyte -= 1) {\n      ;\n    }\n\n    for (slen = 0; lenbyte > 0; index += 1, lenbyte -= 1) {\n      slen = (slen << 8) + signature[index];\n    }\n  }\n\n  if (slen > length - index) {\n    return null;\n  }\n\n  var sindex = index;\n  index += slen; // ignore leading zeros in r\n\n  for (; rlen > 0 && signature[rindex] === 0x00; rlen -= 1, rindex += 1) {\n    ;\n  } // copy r value\n\n\n  if (rlen > 32) {\n    return null;\n  }\n\n  var rvalue = signature.slice(rindex, rindex + rlen);\n  rvalue.copy(r, 32 - rvalue.length); // ignore leading zeros in s\n\n  for (; slen > 0 && signature[sindex] === 0x00; slen -= 1, sindex += 1) {\n    ;\n  } // copy s value\n\n\n  if (slen > 32) {\n    return null;\n  }\n\n  var svalue = signature.slice(sindex, sindex + slen);\n  svalue.copy(s, 32 - svalue.length);\n  return {\n    r: r,\n    s: s\n  };\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.KECCAK256_RLP = exports.KECCAK256_RLP_S = exports.KECCAK256_RLP_ARRAY = exports.KECCAK256_RLP_ARRAY_S = exports.KECCAK256_NULL = exports.KECCAK256_NULL_S = exports.TWO_POW256 = exports.MAX_INTEGER = void 0;\n\nvar BN = require(\"bn.js\");\n/**\n * The max integer that this VM can handle\n */\n\n\nexports.MAX_INTEGER = new BN('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff', 16);\n/**\n * 2^256\n */\n\nexports.TWO_POW256 = new BN('10000000000000000000000000000000000000000000000000000000000000000', 16);\n/**\n * Keccak-256 hash of null\n */\n\nexports.KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\n/**\n * Keccak-256 hash of null\n */\n\nexports.KECCAK256_NULL = Buffer.from(exports.KECCAK256_NULL_S, 'hex');\n/**\n * Keccak-256 of an RLP of an empty array\n */\n\nexports.KECCAK256_RLP_ARRAY_S = '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347';\n/**\n * Keccak-256 of an RLP of an empty array\n */\n\nexports.KECCAK256_RLP_ARRAY = Buffer.from(exports.KECCAK256_RLP_ARRAY_S, 'hex');\n/**\n * Keccak-256 hash of the RLP of null\n */\n\nexports.KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421';\n/**\n * Keccak-256 hash of the RLP of null\n */\n\nexports.KECCAK256_RLP = Buffer.from(exports.KECCAK256_RLP_S, 'hex');","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.importPublic = exports.privateToPublic = exports.privateToAddress = exports.publicToAddress = exports.pubToAddress = exports.isValidPublic = exports.isValidPrivate = exports.isPrecompiled = exports.generateAddress2 = exports.generateAddress = exports.isValidChecksumAddress = exports.toChecksumAddress = exports.isZeroAddress = exports.isValidAddress = exports.zeroAddress = void 0;\n\nvar assert = require('assert');\n\nvar ethjsUtil = require('ethjs-util');\n\nvar secp256k1 = require('./secp256k1v3-adapter');\n\nvar BN = require(\"bn.js\");\n\nvar bytes_1 = require(\"./bytes\");\n\nvar hash_1 = require(\"./hash\");\n/**\n * Returns a zero address.\n */\n\n\nexports.zeroAddress = function () {\n  var addressLength = 20;\n  var addr = bytes_1.zeros(addressLength);\n  return bytes_1.bufferToHex(addr);\n};\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too.\n */\n\n\nexports.isValidAddress = function (address) {\n  return /^0x[0-9a-fA-F]{40}$/.test(address);\n};\n/**\n * Checks if a given address is a zero address.\n */\n\n\nexports.isZeroAddress = function (address) {\n  var zeroAddr = exports.zeroAddress();\n  return zeroAddr === bytes_1.addHexPrefix(address);\n};\n/**\n * Returns a checksummed address.\n *\n * If a eip1191ChainId is provided, the chainId will be included in the checksum calculation. This\n * has the effect of checksummed addresses for one chain having invalid checksums for others.\n * For more details, consult EIP-1191.\n *\n * WARNING: Checksums with and without the chainId will differ. As of 2019-06-26, the most commonly\n * used variation in Ethereum was without the chainId. This may change in the future.\n */\n\n\nexports.toChecksumAddress = function (address, eip1191ChainId) {\n  address = ethjsUtil.stripHexPrefix(address).toLowerCase();\n  var prefix = eip1191ChainId !== undefined ? eip1191ChainId.toString() + '0x' : '';\n  var hash = hash_1.keccak(prefix + address).toString('hex');\n  var ret = '0x';\n\n  for (var i = 0; i < address.length; i++) {\n    if (parseInt(hash[i], 16) >= 8) {\n      ret += address[i].toUpperCase();\n    } else {\n      ret += address[i];\n    }\n  }\n\n  return ret;\n};\n/**\n * Checks if the address is a valid checksummed address.\n *\n * See toChecksumAddress' documentation for details about the eip1191ChainId parameter.\n */\n\n\nexports.isValidChecksumAddress = function (address, eip1191ChainId) {\n  return exports.isValidAddress(address) && exports.toChecksumAddress(address, eip1191ChainId) === address;\n};\n/**\n * Generates an address of a newly created contract.\n * @param from The address which is creating this new address\n * @param nonce The nonce of the from account\n */\n\n\nexports.generateAddress = function (from, nonce) {\n  from = bytes_1.toBuffer(from);\n  var nonceBN = new BN(nonce);\n\n  if (nonceBN.isZero()) {\n    // in RLP we want to encode null in the case of zero nonce\n    // read the RLP documentation for an answer if you dare\n    return hash_1.rlphash([from, null]).slice(-20);\n  } // Only take the lower 160bits of the hash\n\n\n  return hash_1.rlphash([from, Buffer.from(nonceBN.toArray())]).slice(-20);\n};\n/**\n * Generates an address for a contract created using CREATE2.\n * @param from The address which is creating this new address\n * @param salt A salt\n * @param initCode The init code of the contract being created\n */\n\n\nexports.generateAddress2 = function (from, salt, initCode) {\n  var fromBuf = bytes_1.toBuffer(from);\n  var saltBuf = bytes_1.toBuffer(salt);\n  var initCodeBuf = bytes_1.toBuffer(initCode);\n  assert(fromBuf.length === 20);\n  assert(saltBuf.length === 32);\n  var address = hash_1.keccak256(Buffer.concat([Buffer.from('ff', 'hex'), fromBuf, saltBuf, hash_1.keccak256(initCodeBuf)]));\n  return address.slice(-20);\n};\n/**\n * Returns true if the supplied address belongs to a precompiled account (Byzantium).\n */\n\n\nexports.isPrecompiled = function (address) {\n  var a = bytes_1.unpad(address);\n  return a.length === 1 && a[0] >= 1 && a[0] <= 8;\n};\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n */\n\n\nexports.isValidPrivate = function (privateKey) {\n  return secp256k1.privateKeyVerify(privateKey);\n};\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\n\n\nexports.isValidPublic = function (publicKey, sanitize) {\n  if (sanitize === void 0) {\n    sanitize = false;\n  }\n\n  if (publicKey.length === 64) {\n    // Convert to SEC1 for secp256k1\n    return secp256k1.publicKeyVerify(Buffer.concat([Buffer.from([4]), publicKey]));\n  }\n\n  if (!sanitize) {\n    return false;\n  }\n\n  return secp256k1.publicKeyVerify(publicKey);\n};\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\n\n\nexports.pubToAddress = function (pubKey, sanitize) {\n  if (sanitize === void 0) {\n    sanitize = false;\n  }\n\n  pubKey = bytes_1.toBuffer(pubKey);\n\n  if (sanitize && pubKey.length !== 64) {\n    pubKey = secp256k1.publicKeyConvert(pubKey, false).slice(1);\n  }\n\n  assert(pubKey.length === 64); // Only take the lower 160bits of the hash\n\n  return hash_1.keccak(pubKey).slice(-20);\n};\n\nexports.publicToAddress = exports.pubToAddress;\n/**\n * Returns the ethereum address of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\n\nexports.privateToAddress = function (privateKey) {\n  return exports.publicToAddress(exports.privateToPublic(privateKey));\n};\n/**\n * Returns the ethereum public key of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\n\n\nexports.privateToPublic = function (privateKey) {\n  privateKey = bytes_1.toBuffer(privateKey); // skip the type flag and use the X, Y points\n\n  return secp256k1.publicKeyCreate(privateKey, false).slice(1);\n};\n/**\n * Converts a public key to the Ethereum format.\n */\n\n\nexports.importPublic = function (publicKey) {\n  publicKey = bytes_1.toBuffer(publicKey);\n\n  if (publicKey.length !== 64) {\n    publicKey = secp256k1.publicKeyConvert(publicKey, false).slice(1);\n  }\n\n  return publicKey;\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hashPersonalMessage = exports.isValidSignature = exports.fromRpcSig = exports.toRpcSig = exports.ecrecover = exports.ecsign = void 0;\n\nvar secp256k1 = require('./secp256k1v3-adapter');\n\nvar BN = require(\"bn.js\");\n\nvar bytes_1 = require(\"./bytes\");\n\nvar hash_1 = require(\"./hash\");\n/**\n * Returns the ECDSA signature of a message hash.\n */\n\n\nexports.ecsign = function (msgHash, privateKey, chainId) {\n  var sig = secp256k1.sign(msgHash, privateKey);\n  var recovery = sig.recovery;\n  var ret = {\n    r: sig.signature.slice(0, 32),\n    s: sig.signature.slice(32, 64),\n    v: chainId ? recovery + (chainId * 2 + 35) : recovery + 27\n  };\n  return ret;\n};\n/**\n * ECDSA public key recovery from signature.\n * @returns Recovered public key\n */\n\n\nexports.ecrecover = function (msgHash, v, r, s, chainId) {\n  var signature = Buffer.concat([bytes_1.setLength(r, 32), bytes_1.setLength(s, 32)], 64);\n  var recovery = calculateSigRecovery(v, chainId);\n\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value');\n  }\n\n  var senderPubKey = secp256k1.recover(msgHash, signature, recovery);\n  return secp256k1.publicKeyConvert(senderPubKey, false).slice(1);\n};\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method.\n * @returns Signature\n */\n\n\nexports.toRpcSig = function (v, r, s, chainId) {\n  var recovery = calculateSigRecovery(v, chainId);\n\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value');\n  } // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n\n\n  return bytes_1.bufferToHex(Buffer.concat([bytes_1.setLengthLeft(r, 32), bytes_1.setLengthLeft(s, 32), bytes_1.toBuffer(v)]));\n};\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n * NOTE: all because of a bug in geth: https://github.com/ethereum/go-ethereum/issues/2053\n */\n\n\nexports.fromRpcSig = function (sig) {\n  var buf = bytes_1.toBuffer(sig); // NOTE: with potential introduction of chainId this might need to be updated\n\n  if (buf.length !== 65) {\n    throw new Error('Invalid signature length');\n  }\n\n  var v = buf[64]; // support both versions of `eth_sign` responses\n\n  if (v < 27) {\n    v += 27;\n  }\n\n  return {\n    v: v,\n    r: buf.slice(0, 32),\n    s: buf.slice(32, 64)\n  };\n};\n/**\n * Validate a ECDSA signature.\n * @param homesteadOrLater Indicates whether this is being used on either the homestead hardfork or a later one\n */\n\n\nexports.isValidSignature = function (v, r, s, homesteadOrLater, chainId) {\n  if (homesteadOrLater === void 0) {\n    homesteadOrLater = true;\n  }\n\n  var SECP256K1_N_DIV_2 = new BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);\n  var SECP256K1_N = new BN('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 16);\n\n  if (r.length !== 32 || s.length !== 32) {\n    return false;\n  }\n\n  if (!isValidSigRecovery(calculateSigRecovery(v, chainId))) {\n    return false;\n  }\n\n  var rBN = new BN(r);\n  var sBN = new BN(s);\n\n  if (rBN.isZero() || rBN.gt(SECP256K1_N) || sBN.isZero() || sBN.gt(SECP256K1_N)) {\n    return false;\n  }\n\n  if (homesteadOrLater && sBN.cmp(SECP256K1_N_DIV_2) === 1) {\n    return false;\n  }\n\n  return true;\n};\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n */\n\n\nexports.hashPersonalMessage = function (message) {\n  var prefix = Buffer.from(\"\\x19Ethereum Signed Message:\\n\" + message.length.toString(), 'utf-8');\n  return hash_1.keccak(Buffer.concat([prefix, message]));\n};\n\nfunction calculateSigRecovery(v, chainId) {\n  return chainId ? v - (2 * chainId + 35) : v - 27;\n}\n\nfunction isValidSigRecovery(recovery) {\n  return recovery === 0 || recovery === 1;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defineProperties = void 0;\n\nvar assert = require('assert');\n\nvar ethjsUtil = require('ethjs-util');\n\nvar rlp = require(\"rlp\");\n\nvar bytes_1 = require(\"./bytes\");\n/**\n * Defines properties on a `Object`. It make the assumption that underlying data is binary.\n * @param self the `Object` to define properties on\n * @param fields an array fields to define. Fields can contain:\n * * `name` - the name of the properties\n * * `length` - the number of bytes the field can have\n * * `allowLess` - if the field can be less than the length\n * * `allowEmpty`\n * @param data data to be validated against the definitions\n * @deprecated\n */\n\n\nexports.defineProperties = function (self, fields, data) {\n  self.raw = [];\n  self._fields = []; // attach the `toJSON`\n\n  self.toJSON = function (label) {\n    if (label === void 0) {\n      label = false;\n    }\n\n    if (label) {\n      var obj_1 = {};\n\n      self._fields.forEach(function (field) {\n        obj_1[field] = \"0x\" + self[field].toString('hex');\n      });\n\n      return obj_1;\n    }\n\n    return bytes_1.baToJSON(self.raw);\n  };\n\n  self.serialize = function serialize() {\n    return rlp.encode(self.raw);\n  };\n\n  fields.forEach(function (field, i) {\n    self._fields.push(field.name);\n\n    function getter() {\n      return self.raw[i];\n    }\n\n    function setter(v) {\n      v = bytes_1.toBuffer(v);\n\n      if (v.toString('hex') === '00' && !field.allowZero) {\n        v = Buffer.allocUnsafe(0);\n      }\n\n      if (field.allowLess && field.length) {\n        v = bytes_1.stripZeros(v);\n        assert(field.length >= v.length, \"The field \" + field.name + \" must not have more \" + field.length + \" bytes\");\n      } else if (!(field.allowZero && v.length === 0) && field.length) {\n        assert(field.length === v.length, \"The field \" + field.name + \" must have byte length of \" + field.length);\n      }\n\n      self.raw[i] = v;\n    }\n\n    Object.defineProperty(self, field.name, {\n      enumerable: true,\n      configurable: true,\n      get: getter,\n      set: setter\n    });\n\n    if (field.default) {\n      self[field.name] = field.default;\n    } // attach alias\n\n\n    if (field.alias) {\n      Object.defineProperty(self, field.alias, {\n        enumerable: false,\n        configurable: true,\n        set: setter,\n        get: getter\n      });\n    }\n  }); // if the constuctor is passed data\n\n  if (data) {\n    if (typeof data === 'string') {\n      data = Buffer.from(ethjsUtil.stripHexPrefix(data), 'hex');\n    }\n\n    if (Buffer.isBuffer(data)) {\n      data = rlp.decode(data);\n    }\n\n    if (Array.isArray(data)) {\n      if (data.length > self._fields.length) {\n        throw new Error('wrong number of fields in data');\n      } // make sure all the items are buffers\n\n\n      data.forEach(function (d, i) {\n        self[self._fields[i]] = bytes_1.toBuffer(d);\n      });\n    } else if (typeof data === 'object') {\n      var keys_1 = Object.keys(data);\n      fields.forEach(function (field) {\n        if (keys_1.indexOf(field.name) !== -1) self[field.name] = data[field.name];\n        if (keys_1.indexOf(field.alias) !== -1) self[field.alias] = data[field.alias];\n      });\n    } else {\n      throw new Error('invalid data');\n    }\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.chains = void 0;\nexports.chains = {\n  names: {\n    '1': 'mainnet',\n    '3': 'ropsten',\n    '4': 'rinkeby',\n    '42': 'kovan',\n    '5': 'goerli'\n  },\n  mainnet: require('./mainnet.json'),\n  ropsten: require('./ropsten.json'),\n  rinkeby: require('./rinkeby.json'),\n  kovan: require('./kovan.json'),\n  goerli: require('./goerli.json')\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hardforks = void 0;\nexports.hardforks = [['chainstart', require('./chainstart.json')], ['homestead', require('./homestead.json')], ['dao', require('./dao.json')], ['tangerineWhistle', require('./tangerineWhistle.json')], ['spuriousDragon', require('./spuriousDragon.json')], ['byzantium', require('./byzantium.json')], ['constantinople', require('./constantinople.json')], ['petersburg', require('./petersburg.json')], ['istanbul', require('./istanbul.json')], ['muirGlacier', require('./muirGlacier.json')]];","\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\n\nvar buffer_1 = require(\"buffer\");\n\nvar transaction_1 = require(\"./transaction\");\n/**\n * Creates a new transaction object that doesn't need to be signed.\n *\n * @param data - A transaction can be initialized with its rlp representation, an array containing\n * the value of its fields in order, or an object containing them by name.\n *\n * @param opts - The transaction's options, used to indicate the chain and hardfork the\n * transactions belongs to.\n *\n * @see Transaction\n */\n\n\nvar FakeTransaction = function (_super) {\n  __extends(FakeTransaction, _super);\n\n  function FakeTransaction(data, opts) {\n    if (data === void 0) {\n      data = {};\n    }\n\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    var _this = _super.call(this, data, opts) || this;\n\n    Object.defineProperty(_this, 'from', {\n      enumerable: true,\n      configurable: true,\n      get: function get() {\n        return _this.getSenderAddress();\n      },\n      set: function set(val) {\n        if (val) {\n          _this._from = ethereumjs_util_1.toBuffer(val);\n        }\n      }\n    });\n    var txData = data;\n\n    if (txData.from) {\n      _this.from = ethereumjs_util_1.toBuffer(txData.from);\n    }\n\n    return _this;\n  }\n  /**\n   * Computes a sha3-256 hash of the serialized tx, using the sender address to generate a fake\n   * signature.\n   *\n   * @param includeSignature - Whether or not to include the signature\n   */\n\n\n  FakeTransaction.prototype.hash = function (includeSignature) {\n    if (includeSignature === void 0) {\n      includeSignature = true;\n    }\n\n    if (includeSignature && this._from && this._from.toString('hex') !== '') {\n      // include a fake signature using the from address as a private key\n      var fakeKey = buffer_1.Buffer.concat([this._from, this._from.slice(0, 12)]);\n      this.sign(fakeKey);\n    }\n\n    return _super.prototype.hash.call(this, includeSignature);\n  };\n\n  return FakeTransaction;\n}(transaction_1.default);\n\nexports.default = FakeTransaction;","'use strict';\n\nvar isHexPrefixed = require('is-hex-prefixed');\n\nvar stripHexPrefix = require('strip-hex-prefix');\n/**\n * Pads a `String` to have an even length\n * @param {String} value\n * @return {String} output\n */\n\n\nfunction padToEven(value) {\n  var a = value; // eslint-disable-line\n\n  if (typeof a !== 'string') {\n    throw new Error('[ethjs-util] while padding to even, value must be string, is currently ' + typeof a + ', while padToEven.');\n  }\n\n  if (a.length % 2) {\n    a = '0' + a;\n  }\n\n  return a;\n}\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\n\n\nfunction intToHex(i) {\n  var hex = i.toString(16); // eslint-disable-line\n\n  return '0x' + hex;\n}\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\n\n\nfunction intToBuffer(i) {\n  var hex = intToHex(i);\n  return new Buffer(padToEven(hex.slice(2)), 'hex');\n}\n/**\n * Get the binary size of a string\n * @param {String} str\n * @return {Number}\n */\n\n\nfunction getBinarySize(str) {\n  if (typeof str !== 'string') {\n    throw new Error('[ethjs-util] while getting binary size, method getBinarySize requires input \\'str\\' to be type String, got \\'' + typeof str + '\\'.');\n  }\n\n  return Buffer.byteLength(str, 'utf8');\n}\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param {array} superset\n * @param {array} subset\n *\n * @returns {boolean}\n */\n\n\nfunction arrayContainsArray(superset, subset, some) {\n  if (Array.isArray(superset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'superset\\' to be an array got type \\'' + typeof superset + '\\'');\n  }\n\n  if (Array.isArray(subset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'subset\\' to be an array got type \\'' + typeof subset + '\\'');\n  }\n\n  return subset[Boolean(some) && 'some' || 'every'](function (value) {\n    return superset.indexOf(value) >= 0;\n  });\n}\n/**\n * Should be called to get utf8 from it's hex representation\n *\n * @method toUtf8\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\n\n\nfunction toUtf8(hex) {\n  var bufferValue = new Buffer(padToEven(stripHexPrefix(hex).replace(/^0+|0+$/g, '')), 'hex');\n  return bufferValue.toString('utf8');\n}\n/**\n * Should be called to get ascii from it's hex representation\n *\n * @method toAscii\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\n\n\nfunction toAscii(hex) {\n  var str = ''; // eslint-disable-line\n\n  var i = 0,\n      l = hex.length; // eslint-disable-line\n\n  if (hex.substring(0, 2) === '0x') {\n    i = 2;\n  }\n\n  for (; i < l; i += 2) {\n    var code = parseInt(hex.substr(i, 2), 16);\n    str += String.fromCharCode(code);\n  }\n\n  return str;\n}\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @method fromUtf8\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\n\n\nfunction fromUtf8(stringValue) {\n  var str = new Buffer(stringValue, 'utf8');\n  return '0x' + padToEven(str.toString('hex')).replace(/^0+|0+$/g, '');\n}\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @method fromAscii\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\n\n\nfunction fromAscii(stringValue) {\n  var hex = ''; // eslint-disable-line\n\n  for (var i = 0; i < stringValue.length; i++) {\n    // eslint-disable-line\n    var code = stringValue.charCodeAt(i);\n    var n = code.toString(16);\n    hex += n.length < 2 ? '0' + n : n;\n  }\n\n  return '0x' + hex;\n}\n/**\n * getKeys([{a: 1, b: 2}, {a: 3, b: 4}], 'a') => [1, 3]\n *\n * @method getKeys get specific key from inner object array of objects\n * @param {String} params\n * @param {String} key\n * @param {Boolean} allowEmpty\n * @returns {Array} output just a simple array of output keys\n */\n\n\nfunction getKeys(params, key, allowEmpty) {\n  if (!Array.isArray(params)) {\n    throw new Error('[ethjs-util] method getKeys expecting type Array as \\'params\\' input, got \\'' + typeof params + '\\'');\n  }\n\n  if (typeof key !== 'string') {\n    throw new Error('[ethjs-util] method getKeys expecting type String for input \\'key\\' got \\'' + typeof key + '\\'.');\n  }\n\n  var result = []; // eslint-disable-line\n\n  for (var i = 0; i < params.length; i++) {\n    // eslint-disable-line\n    var value = params[i][key]; // eslint-disable-line\n\n    if (allowEmpty && !value) {\n      value = '';\n    } else if (typeof value !== 'string') {\n      throw new Error('invalid abi');\n    }\n\n    result.push(value);\n  }\n\n  return result;\n}\n/**\n * Is the string a hex string.\n *\n * @method check if string is hex string of specific length\n * @param {String} value\n * @param {Number} length\n * @returns {Boolean} output the string is a hex string\n */\n\n\nfunction isHexString(value, length) {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = {\n  arrayContainsArray: arrayContainsArray,\n  intToBuffer: intToBuffer,\n  getBinarySize: getBinarySize,\n  isHexPrefixed: isHexPrefixed,\n  stripHexPrefix: stripHexPrefix,\n  padToEven: padToEven,\n  intToHex: intToHex,\n  fromAscii: fromAscii,\n  fromUtf8: fromUtf8,\n  toAscii: toAscii,\n  toUtf8: toUtf8,\n  getKeys: getKeys,\n  isHexString: isHexString\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLength = exports.decode = exports.encode = void 0;\n\nvar BN = require(\"bn.js\");\n/**\n * RLP Encoding based on: https://github.com/ethereum/wiki/wiki/%5BEnglish%5D-RLP\n * This function takes in a data, convert it to buffer if not, and a length for recursion\n * @param input - will be converted to buffer\n * @returns returns buffer of encoded data\n **/\n\n\nfunction encode(input) {\n  if (Array.isArray(input)) {\n    var output = [];\n\n    for (var i = 0; i < input.length; i++) {\n      output.push(encode(input[i]));\n    }\n\n    var buf = Buffer.concat(output);\n    return Buffer.concat([encodeLength(buf.length, 192), buf]);\n  } else {\n    var inputBuf = toBuffer(input);\n    return inputBuf.length === 1 && inputBuf[0] < 128 ? inputBuf : Buffer.concat([encodeLength(inputBuf.length, 128), inputBuf]);\n  }\n}\n\nexports.encode = encode;\n/**\n * Parse integers. Check if there is no leading zeros\n * @param v The value to parse\n * @param base The base to parse the integer into\n */\n\nfunction safeParseInt(v, base) {\n  if (v.slice(0, 2) === '00') {\n    throw new Error('invalid RLP: extra zeros');\n  }\n\n  return parseInt(v, base);\n}\n\nfunction encodeLength(len, offset) {\n  if (len < 56) {\n    return Buffer.from([len + offset]);\n  } else {\n    var hexLength = intToHex(len);\n    var lLength = hexLength.length / 2;\n    var firstByte = intToHex(offset + 55 + lLength);\n    return Buffer.from(firstByte + hexLength, 'hex');\n  }\n}\n\nfunction decode(input, stream) {\n  if (stream === void 0) {\n    stream = false;\n  }\n\n  if (!input || input.length === 0) {\n    return Buffer.from([]);\n  }\n\n  var inputBuffer = toBuffer(input);\n\n  var decoded = _decode(inputBuffer);\n\n  if (stream) {\n    return decoded;\n  }\n\n  if (decoded.remainder.length !== 0) {\n    throw new Error('invalid remainder');\n  }\n\n  return decoded.data;\n}\n\nexports.decode = decode;\n/**\n * Get the length of the RLP input\n * @param input\n * @returns The length of the input or an empty Buffer if no input\n */\n\nfunction getLength(input) {\n  if (!input || input.length === 0) {\n    return Buffer.from([]);\n  }\n\n  var inputBuffer = toBuffer(input);\n  var firstByte = inputBuffer[0];\n\n  if (firstByte <= 0x7f) {\n    return inputBuffer.length;\n  } else if (firstByte <= 0xb7) {\n    return firstByte - 0x7f;\n  } else if (firstByte <= 0xbf) {\n    return firstByte - 0xb6;\n  } else if (firstByte <= 0xf7) {\n    // a list between  0-55 bytes long\n    return firstByte - 0xbf;\n  } else {\n    // a list  over 55 bytes long\n    var llength = firstByte - 0xf6;\n    var length = safeParseInt(inputBuffer.slice(1, llength).toString('hex'), 16);\n    return llength + length;\n  }\n}\n\nexports.getLength = getLength;\n/** Decode an input with RLP */\n\nfunction _decode(input) {\n  var length, llength, data, innerRemainder, d;\n  var decoded = [];\n  var firstByte = input[0];\n\n  if (firstByte <= 0x7f) {\n    // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.\n    return {\n      data: input.slice(0, 1),\n      remainder: input.slice(1)\n    };\n  } else if (firstByte <= 0xb7) {\n    // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string\n    // The range of the first byte is [0x80, 0xb7]\n    length = firstByte - 0x7f; // set 0x80 null to 0\n\n    if (firstByte === 0x80) {\n      data = Buffer.from([]);\n    } else {\n      data = input.slice(1, length);\n    }\n\n    if (length === 2 && data[0] < 0x80) {\n      throw new Error('invalid rlp encoding: byte must be less 0x80');\n    }\n\n    return {\n      data: data,\n      remainder: input.slice(length)\n    };\n  } else if (firstByte <= 0xbf) {\n    // string is greater than 55 bytes long. A single byte with the value (0xb7 plus the length of the length),\n    // followed by the length, followed by the string\n    llength = firstByte - 0xb6;\n\n    if (input.length - 1 < llength) {\n      throw new Error('invalid RLP: not enough bytes for string length');\n    }\n\n    length = safeParseInt(input.slice(1, llength).toString('hex'), 16);\n\n    if (length <= 55) {\n      throw new Error('invalid RLP: expected string length to be greater than 55');\n    }\n\n    data = input.slice(llength, length + llength);\n\n    if (data.length < length) {\n      throw new Error('invalid RLP: not enough bytes for string');\n    }\n\n    return {\n      data: data,\n      remainder: input.slice(length + llength)\n    };\n  } else if (firstByte <= 0xf7) {\n    // a list between  0-55 bytes long\n    length = firstByte - 0xbf;\n    innerRemainder = input.slice(1, length);\n\n    while (innerRemainder.length) {\n      d = _decode(innerRemainder);\n      decoded.push(d.data);\n      innerRemainder = d.remainder;\n    }\n\n    return {\n      data: decoded,\n      remainder: input.slice(length)\n    };\n  } else {\n    // a list  over 55 bytes long\n    llength = firstByte - 0xf6;\n    length = safeParseInt(input.slice(1, llength).toString('hex'), 16);\n    var totalLength = llength + length;\n\n    if (totalLength > input.length) {\n      throw new Error('invalid rlp: total length is larger than the data');\n    }\n\n    innerRemainder = input.slice(llength, totalLength);\n\n    if (innerRemainder.length === 0) {\n      throw new Error('invalid rlp, List has a invalid length');\n    }\n\n    while (innerRemainder.length) {\n      d = _decode(innerRemainder);\n      decoded.push(d.data);\n      innerRemainder = d.remainder;\n    }\n\n    return {\n      data: decoded,\n      remainder: input.slice(totalLength)\n    };\n  }\n}\n/** Check if a string is prefixed by 0x */\n\n\nfunction isHexPrefixed(str) {\n  return str.slice(0, 2) === '0x';\n}\n/** Removes 0x from a given String */\n\n\nfunction stripHexPrefix(str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  return isHexPrefixed(str) ? str.slice(2) : str;\n}\n/** Transform an integer into its hexadecimal value */\n\n\nfunction intToHex(integer) {\n  if (integer < 0) {\n    throw new Error('Invalid integer as argument, must be unsigned!');\n  }\n\n  var hex = integer.toString(16);\n  return hex.length % 2 ? \"0\" + hex : hex;\n}\n/** Pad a string to be even */\n\n\nfunction padToEven(a) {\n  return a.length % 2 ? \"0\" + a : a;\n}\n/** Transform an integer into a Buffer */\n\n\nfunction intToBuffer(integer) {\n  var hex = intToHex(integer);\n  return Buffer.from(hex, 'hex');\n}\n/** Transform anything into a Buffer */\n\n\nfunction toBuffer(v) {\n  if (!Buffer.isBuffer(v)) {\n    if (typeof v === 'string') {\n      if (isHexPrefixed(v)) {\n        return Buffer.from(padToEven(stripHexPrefix(v)), 'hex');\n      } else {\n        return Buffer.from(v);\n      }\n    } else if (typeof v === 'number' || typeof v === 'bigint') {\n      if (!v) {\n        return Buffer.from([]);\n      } else {\n        return intToBuffer(v);\n      }\n    } else if (v === null || v === undefined) {\n      return Buffer.from([]);\n    } else if (v instanceof Uint8Array) {\n      return Buffer.from(v);\n    } else if (BN.isBN(v)) {\n      // converts a BN to a Buffer\n      return Buffer.from(v.toArray());\n    } else {\n      throw new Error('invalid type');\n    }\n  }\n\n  return v;\n}","'use strict';\n\nvar objectAssign = require('object-assign'); // compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\n\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n\n  if (y < x) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n\n  return !!(b != null && b._isBuffer);\n} // based on node assert, original notice:\n// NB: The URL to the CommonJS spec is kept just for tradition.\n//     node-assert has evolved a lot since then, both in API and behavior.\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\nvar util = require('util/');\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\n\nvar functionsHaveNames = function () {\n  return function foo() {}.name === 'foo';\n}();\n\nfunction pToString(obj) {\n  return Object.prototype.toString.call(obj);\n}\n\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n\n  if (!arrbuf) {\n    return false;\n  }\n\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n\n  return false;\n} // 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\n\nvar assert = module.exports = ok; // 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/; // based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\n\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n\n  if (functionsHaveNames) {\n    return func.name;\n  }\n\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\n\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n\n  var stackStartFunction = options.stackStartFunction || fail;\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n\n    if (err.stack) {\n      var out = err.stack; // try to strip useless frames\n\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n}; // assert.AssertionError instanceof Error\n\n\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\n\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' + name + ']';\n}\n\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' + self.operator + ' ' + truncate(inspect(self.expected), 128);\n} // At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n} // EXTENSION! allows for well behaved errors defined elsewhere.\n\n\nassert.fail = fail; // 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\n\nassert.ok = ok; // 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n}; // 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n}; // 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0; // 7.2. If the expected value is a Date object, the actual value is\n    // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime(); // 7.3 If the expected value is a RegExp object, the actual value is\n    // equivalent if it is also a RegExp object with the same source and\n    // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source && actual.global === expected.global && actual.multiline === expected.multiline && actual.lastIndex === expected.lastIndex && actual.ignoreCase === expected.ignoreCase; // 7.4. Other pairs that do not both pass typeof value == 'object',\n    // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') && (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected; // If both values are instances of typed arrays, wrap their underlying\n    // ArrayBuffers in a Buffer each to increase performance\n    // This optimization requires the arrays to have the same type as checked by\n    // Object.prototype.toString (aka pToString). Never perform binary\n    // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n    // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) && pToString(actual) === pToString(expected) && !(actual instanceof Float32Array || actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer), new Uint8Array(expected.buffer)) === 0; // 7.5 For all other Object pairs, including Array objects, equivalence is\n    // determined by having the same number of owned properties (as verified\n    // with Object.prototype.hasOwnProperty.call), the same set of keys\n    // (although not necessarily the same order), equivalent values for every\n    // corresponding key, and an identical 'prototype' property. Note: this\n    // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {\n      actual: [],\n      expected: []\n    };\n    var actualIndex = memos.actual.indexOf(actual);\n\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined) return false; // if one is a primitive, the other must be same\n\n  if (util.isPrimitive(a) || util.isPrimitive(b)) return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b)) return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if (aIsArgs && !bIsArgs || !aIsArgs && bIsArgs) return false;\n\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i; // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n\n  if (ka.length !== kb.length) return false; //the same set of keys (although not necessarily the same order),\n\n  ka.sort();\n  kb.sort(); //~~~cheap key test\n\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i]) return false;\n  } //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n\n\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects)) return false;\n  }\n\n  return true;\n} // 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\n\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n} // 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n}; // 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {// Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') + (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if (isUnwantedException && userProvidedMessage && expectedException(actual, expected) || isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if (shouldThrow && actual && expected && !expectedException(actual, expected) || !shouldThrow && actual) {\n    throw actual;\n  }\n} // 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\n\nassert.throws = function (block,\n/*optional*/\nerror,\n/*optional*/\nmessage) {\n  _throws(true, block, error, message);\n}; // EXTENSION! This is annoying to write outside this module.\n\n\nassert.doesNotThrow = function (block,\n/*optional*/\nerror,\n/*optional*/\nmessage) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function (err) {\n  if (err) throw err;\n}; // Expose a strict only variant of assert\n\n\nfunction strict(value, message) {\n  if (!value) fail(value, true, message, '==', strict);\n}\n\nassert.strict = objectAssign(strict, assert, {\n  equal: assert.strictEqual,\n  deepEqual: assert.deepStrictEqual,\n  notEqual: assert.notStrictEqual,\n  notDeepEqual: assert.notDeepStrictEqual\n});\nassert.strict.strict = assert.strict;\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n\n  return keys;\n};","\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nfunction __export(m) {\n  for (var p in m) {\n    if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n  }\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar secp256k1_1 = require(\"secp256k1\");\n\nvar random_1 = require(\"./random\");\n\nvar SECP256K1_PRIVATE_KEY_SIZE = 32;\n\nfunction createPrivateKey() {\n  return __awaiter(this, void 0, void 0, function () {\n    var pk;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (!true) return [3\n          /*break*/\n          , 2];\n          return [4\n          /*yield*/\n          , random_1.getRandomBytes(SECP256K1_PRIVATE_KEY_SIZE)];\n\n        case 1:\n          pk = _a.sent();\n\n          if (secp256k1_1.privateKeyVerify(pk)) {\n            return [2\n            /*return*/\n            , pk];\n          }\n\n          return [3\n          /*break*/\n          , 0];\n\n        case 2:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n}\n\nexports.createPrivateKey = createPrivateKey;\n\nfunction createPrivateKeySync() {\n  while (true) {\n    var pk = random_1.getRandomBytesSync(SECP256K1_PRIVATE_KEY_SIZE);\n\n    if (secp256k1_1.privateKeyVerify(pk)) {\n      return pk;\n    }\n  }\n}\n\nexports.createPrivateKeySync = createPrivateKeySync;\n\n__export(require(\"secp256k1\"));","module.exports = require('./lib')(require('./lib/elliptic'));","/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param {String} str the string input value\n * @return {Boolean} a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nmodule.exports = function isHexPrefixed(str) {\n  if (typeof str !== 'string') {\n    throw new Error(\"[is-hex-prefixed] value must be type 'string', is currently type \" + typeof str + \", while checking isHexPrefixed.\");\n  }\n\n  return str.slice(0, 2) === '0x';\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar hash_utils_1 = require(\"./hash-utils\");\n\nvar createKeccakHash = require(\"keccak\");\n\nexports.keccak224 = hash_utils_1.createHashFunction(function () {\n  return createKeccakHash(\"keccak224\");\n});\nexports.keccak256 = hash_utils_1.createHashFunction(function () {\n  return createKeccakHash(\"keccak256\");\n});\nexports.keccak384 = hash_utils_1.createHashFunction(function () {\n  return createKeccakHash(\"keccak384\");\n});\nexports.keccak512 = hash_utils_1.createHashFunction(function () {\n  return createKeccakHash(\"keccak512\");\n});","var isHexPrefixed = require('is-hex-prefixed');\n/**\n * Removes '0x' from a given `String` is present\n * @param {String} str the string value\n * @return {String|Optional} a string by pass if necessary\n */\n\n\nmodule.exports = function stripHexPrefix(str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  return isHexPrefixed(str) ? str.slice(2) : str;\n};","var _createForOfIteratorHelper = require(\"/Users/sora/keystone/react-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar errors = {\n  IMPOSSIBLE_CASE: 'Impossible case. Please create issue.',\n  TWEAK_ADD: 'The tweak was out of range or the resulted private key is invalid',\n  TWEAK_MUL: 'The tweak was out of range or equal to zero',\n  CONTEXT_RANDOMIZE_UNKNOW: 'Unknow error on context randomization',\n  SECKEY_INVALID: 'Private Key is invalid',\n  PUBKEY_PARSE: 'Public Key could not be parsed',\n  PUBKEY_SERIALIZE: 'Public Key serialization error',\n  PUBKEY_COMBINE: 'The sum of the public keys is not valid',\n  SIG_PARSE: 'Signature could not be parsed',\n  SIGN: 'The nonce generation function failed, or the private key was invalid',\n  RECOVER: 'Public key could not be recover',\n  ECDH: 'Scalar was invalid (zero or overflow)'\n};\n\nfunction assert(cond, msg) {\n  if (!cond) throw new Error(msg);\n}\n\nfunction isUint8Array(name, value, length) {\n  assert(value instanceof Uint8Array, \"Expected \".concat(name, \" to be an Uint8Array\"));\n\n  if (length !== undefined) {\n    if (Array.isArray(length)) {\n      var numbers = length.join(', ');\n      var msg = \"Expected \".concat(name, \" to be an Uint8Array with length [\").concat(numbers, \"]\");\n      assert(length.includes(value.length), msg);\n    } else {\n      var _msg = \"Expected \".concat(name, \" to be an Uint8Array with length \").concat(length);\n\n      assert(value.length === length, _msg);\n    }\n  }\n}\n\nfunction isCompressed(value) {\n  assert(toTypeString(value) === 'Boolean', 'Expected compressed to be a Boolean');\n}\n\nfunction getAssertedOutput() {\n  var output = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : function (len) {\n    return new Uint8Array(len);\n  };\n  var length = arguments.length > 1 ? arguments[1] : undefined;\n  if (typeof output === 'function') output = output(length);\n  isUint8Array('output', output, length);\n  return output;\n}\n\nfunction toTypeString(value) {\n  return Object.prototype.toString.call(value).slice(8, -1);\n}\n\nmodule.exports = function (secp256k1) {\n  return {\n    contextRandomize: function contextRandomize(seed) {\n      assert(seed === null || seed instanceof Uint8Array, 'Expected seed to be an Uint8Array or null');\n      if (seed !== null) isUint8Array('seed', seed, 32);\n\n      switch (secp256k1.contextRandomize(seed)) {\n        case 1:\n          throw new Error(errors.CONTEXT_RANDOMIZE_UNKNOW);\n      }\n    },\n    privateKeyVerify: function privateKeyVerify(seckey) {\n      isUint8Array('private key', seckey, 32);\n      return secp256k1.privateKeyVerify(seckey) === 0;\n    },\n    privateKeyNegate: function privateKeyNegate(seckey) {\n      isUint8Array('private key', seckey, 32);\n\n      switch (secp256k1.privateKeyNegate(seckey)) {\n        case 0:\n          return seckey;\n\n        case 1:\n          throw new Error(errors.IMPOSSIBLE_CASE);\n      }\n    },\n    privateKeyTweakAdd: function privateKeyTweakAdd(seckey, tweak) {\n      isUint8Array('private key', seckey, 32);\n      isUint8Array('tweak', tweak, 32);\n\n      switch (secp256k1.privateKeyTweakAdd(seckey, tweak)) {\n        case 0:\n          return seckey;\n\n        case 1:\n          throw new Error(errors.TWEAK_ADD);\n      }\n    },\n    privateKeyTweakMul: function privateKeyTweakMul(seckey, tweak) {\n      isUint8Array('private key', seckey, 32);\n      isUint8Array('tweak', tweak, 32);\n\n      switch (secp256k1.privateKeyTweakMul(seckey, tweak)) {\n        case 0:\n          return seckey;\n\n        case 1:\n          throw new Error(errors.TWEAK_MUL);\n      }\n    },\n    publicKeyVerify: function publicKeyVerify(pubkey) {\n      isUint8Array('public key', pubkey, [33, 65]);\n      return secp256k1.publicKeyVerify(pubkey) === 0;\n    },\n    publicKeyCreate: function publicKeyCreate(seckey) {\n      var compressed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var output = arguments.length > 2 ? arguments[2] : undefined;\n      isUint8Array('private key', seckey, 32);\n      isCompressed(compressed);\n      output = getAssertedOutput(output, compressed ? 33 : 65);\n\n      switch (secp256k1.publicKeyCreate(output, seckey)) {\n        case 0:\n          return output;\n\n        case 1:\n          throw new Error(errors.SECKEY_INVALID);\n\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE);\n      }\n    },\n    publicKeyConvert: function publicKeyConvert(pubkey) {\n      var compressed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var output = arguments.length > 2 ? arguments[2] : undefined;\n      isUint8Array('public key', pubkey, [33, 65]);\n      isCompressed(compressed);\n      output = getAssertedOutput(output, compressed ? 33 : 65);\n\n      switch (secp256k1.publicKeyConvert(output, pubkey)) {\n        case 0:\n          return output;\n\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE);\n\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE);\n      }\n    },\n    publicKeyNegate: function publicKeyNegate(pubkey) {\n      var compressed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var output = arguments.length > 2 ? arguments[2] : undefined;\n      isUint8Array('public key', pubkey, [33, 65]);\n      isCompressed(compressed);\n      output = getAssertedOutput(output, compressed ? 33 : 65);\n\n      switch (secp256k1.publicKeyNegate(output, pubkey)) {\n        case 0:\n          return output;\n\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE);\n\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE);\n\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE);\n      }\n    },\n    publicKeyCombine: function publicKeyCombine(pubkeys) {\n      var compressed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var output = arguments.length > 2 ? arguments[2] : undefined;\n      assert(Array.isArray(pubkeys), 'Expected public keys to be an Array');\n      assert(pubkeys.length > 0, 'Expected public keys array will have more than zero items');\n\n      var _iterator = _createForOfIteratorHelper(pubkeys),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var pubkey = _step.value;\n          isUint8Array('public key', pubkey, [33, 65]);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      isCompressed(compressed);\n      output = getAssertedOutput(output, compressed ? 33 : 65);\n\n      switch (secp256k1.publicKeyCombine(output, pubkeys)) {\n        case 0:\n          return output;\n\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE);\n\n        case 2:\n          throw new Error(errors.PUBKEY_COMBINE);\n\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE);\n      }\n    },\n    publicKeyTweakAdd: function publicKeyTweakAdd(pubkey, tweak) {\n      var compressed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var output = arguments.length > 3 ? arguments[3] : undefined;\n      isUint8Array('public key', pubkey, [33, 65]);\n      isUint8Array('tweak', tweak, 32);\n      isCompressed(compressed);\n      output = getAssertedOutput(output, compressed ? 33 : 65);\n\n      switch (secp256k1.publicKeyTweakAdd(output, pubkey, tweak)) {\n        case 0:\n          return output;\n\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE);\n\n        case 2:\n          throw new Error(errors.TWEAK_ADD);\n      }\n    },\n    publicKeyTweakMul: function publicKeyTweakMul(pubkey, tweak) {\n      var compressed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var output = arguments.length > 3 ? arguments[3] : undefined;\n      isUint8Array('public key', pubkey, [33, 65]);\n      isUint8Array('tweak', tweak, 32);\n      isCompressed(compressed);\n      output = getAssertedOutput(output, compressed ? 33 : 65);\n\n      switch (secp256k1.publicKeyTweakMul(output, pubkey, tweak)) {\n        case 0:\n          return output;\n\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE);\n\n        case 2:\n          throw new Error(errors.TWEAK_MUL);\n      }\n    },\n    signatureNormalize: function signatureNormalize(sig) {\n      isUint8Array('signature', sig, 64);\n\n      switch (secp256k1.signatureNormalize(sig)) {\n        case 0:\n          return sig;\n\n        case 1:\n          throw new Error(errors.SIG_PARSE);\n      }\n    },\n    signatureExport: function signatureExport(sig, output) {\n      isUint8Array('signature', sig, 64);\n      output = getAssertedOutput(output, 72);\n      var obj = {\n        output: output,\n        outputlen: 72\n      };\n\n      switch (secp256k1.signatureExport(obj, sig)) {\n        case 0:\n          return output.slice(0, obj.outputlen);\n\n        case 1:\n          throw new Error(errors.SIG_PARSE);\n\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE);\n      }\n    },\n    signatureImport: function signatureImport(sig, output) {\n      isUint8Array('signature', sig);\n      output = getAssertedOutput(output, 64);\n\n      switch (secp256k1.signatureImport(output, sig)) {\n        case 0:\n          return output;\n\n        case 1:\n          throw new Error(errors.SIG_PARSE);\n\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE);\n      }\n    },\n    ecdsaSign: function ecdsaSign(msg32, seckey) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var output = arguments.length > 3 ? arguments[3] : undefined;\n      isUint8Array('message', msg32, 32);\n      isUint8Array('private key', seckey, 32);\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object');\n      if (options.data !== undefined) isUint8Array('options.data', options.data);\n      if (options.noncefn !== undefined) assert(toTypeString(options.noncefn) === 'Function', 'Expected options.noncefn to be a Function');\n      output = getAssertedOutput(output, 64);\n      var obj = {\n        signature: output,\n        recid: null\n      };\n\n      switch (secp256k1.ecdsaSign(obj, msg32, seckey, options.data, options.noncefn)) {\n        case 0:\n          return obj;\n\n        case 1:\n          throw new Error(errors.SIGN);\n\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE);\n      }\n    },\n    ecdsaVerify: function ecdsaVerify(sig, msg32, pubkey) {\n      isUint8Array('signature', sig, 64);\n      isUint8Array('message', msg32, 32);\n      isUint8Array('public key', pubkey, [33, 65]);\n\n      switch (secp256k1.ecdsaVerify(sig, msg32, pubkey)) {\n        case 0:\n          return true;\n\n        case 3:\n          return false;\n\n        case 1:\n          throw new Error(errors.SIG_PARSE);\n\n        case 2:\n          throw new Error(errors.PUBKEY_PARSE);\n      }\n    },\n    ecdsaRecover: function ecdsaRecover(sig, recid, msg32) {\n      var compressed = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n      var output = arguments.length > 4 ? arguments[4] : undefined;\n      isUint8Array('signature', sig, 64);\n      assert(toTypeString(recid) === 'Number' && recid >= 0 && recid <= 3, 'Expected recovery id to be a Number within interval [0, 3]');\n      isUint8Array('message', msg32, 32);\n      isCompressed(compressed);\n      output = getAssertedOutput(output, compressed ? 33 : 65);\n\n      switch (secp256k1.ecdsaRecover(output, sig, recid, msg32)) {\n        case 0:\n          return output;\n\n        case 1:\n          throw new Error(errors.SIG_PARSE);\n\n        case 2:\n          throw new Error(errors.RECOVER);\n\n        case 3:\n          throw new Error(errors.IMPOSSIBLE_CASE);\n      }\n    },\n    ecdh: function ecdh(pubkey, seckey) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var output = arguments.length > 3 ? arguments[3] : undefined;\n      isUint8Array('public key', pubkey, [33, 65]);\n      isUint8Array('private key', seckey, 32);\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object');\n      if (options.data !== undefined) isUint8Array('options.data', options.data);\n\n      if (options.hashfn !== undefined) {\n        assert(toTypeString(options.hashfn) === 'Function', 'Expected options.hashfn to be a Function');\n        if (options.xbuf !== undefined) isUint8Array('options.xbuf', options.xbuf, 32);\n        if (options.ybuf !== undefined) isUint8Array('options.ybuf', options.ybuf, 32);\n        isUint8Array('output', output);\n      } else {\n        output = getAssertedOutput(output, 32);\n      }\n\n      switch (secp256k1.ecdh(output, pubkey, seckey, options.data, options.hashfn, options.xbuf, options.ybuf)) {\n        case 0:\n          return output;\n\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE);\n\n        case 2:\n          throw new Error(errors.ECDH);\n      }\n    }\n  };\n};","var EC = require('elliptic').ec;\n\nvar ec = new EC('secp256k1');\nvar ecparams = ec.curve; // Hack, we can not use bn.js@5, while elliptic uses bn.js@4\n// See https://github.com/indutny/elliptic/issues/191#issuecomment-569888758\n\nvar BN = ecparams.n.constructor;\n\nfunction loadCompressedPublicKey(first, xbuf) {\n  var x = new BN(xbuf); // overflow\n\n  if (x.cmp(ecparams.p) >= 0) return null;\n  x = x.toRed(ecparams.red); // compute corresponding Y\n\n  var y = x.redSqr().redIMul(x).redIAdd(ecparams.b).redSqrt();\n  if (first === 0x03 !== y.isOdd()) y = y.redNeg();\n  return ec.keyPair({\n    pub: {\n      x: x,\n      y: y\n    }\n  });\n}\n\nfunction loadUncompressedPublicKey(first, xbuf, ybuf) {\n  var x = new BN(xbuf);\n  var y = new BN(ybuf); // overflow\n\n  if (x.cmp(ecparams.p) >= 0 || y.cmp(ecparams.p) >= 0) return null;\n  x = x.toRed(ecparams.red);\n  y = y.toRed(ecparams.red); // is odd flag\n\n  if ((first === 0x06 || first === 0x07) && y.isOdd() !== (first === 0x07)) return null; // x*x*x + b = y*y\n\n  var x3 = x.redSqr().redIMul(x);\n  if (!y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero()) return null;\n  return ec.keyPair({\n    pub: {\n      x: x,\n      y: y\n    }\n  });\n}\n\nfunction loadPublicKey(pubkey) {\n  // length should be validated in interface\n  var first = pubkey[0];\n\n  switch (first) {\n    case 0x02:\n    case 0x03:\n      if (pubkey.length !== 33) return null;\n      return loadCompressedPublicKey(first, pubkey.subarray(1, 33));\n\n    case 0x04:\n    case 0x06:\n    case 0x07:\n      if (pubkey.length !== 65) return null;\n      return loadUncompressedPublicKey(first, pubkey.subarray(1, 33), pubkey.subarray(33, 65));\n\n    default:\n      return null;\n  }\n}\n\nfunction savePublicKey(output, point) {\n  var pubkey = point.encode(null, output.length === 33); // Loop should be faster because we do not need create extra Uint8Array\n  // output.set(new Uint8Array(pubkey))\n\n  for (var i = 0; i < output.length; ++i) {\n    output[i] = pubkey[i];\n  }\n}\n\nmodule.exports = {\n  contextRandomize: function contextRandomize() {\n    return 0;\n  },\n  privateKeyVerify: function privateKeyVerify(seckey) {\n    var bn = new BN(seckey);\n    return bn.cmp(ecparams.n) < 0 && !bn.isZero() ? 0 : 1;\n  },\n  privateKeyNegate: function privateKeyNegate(seckey) {\n    var bn = new BN(seckey);\n    var negate = ecparams.n.sub(bn).umod(ecparams.n).toArrayLike(Uint8Array, 'be', 32);\n    seckey.set(negate);\n    return 0;\n  },\n  privateKeyTweakAdd: function privateKeyTweakAdd(seckey, tweak) {\n    var bn = new BN(tweak);\n    if (bn.cmp(ecparams.n) >= 0) return 1;\n    bn.iadd(new BN(seckey));\n    if (bn.cmp(ecparams.n) >= 0) bn.isub(ecparams.n);\n    if (bn.isZero()) return 1;\n    var tweaked = bn.toArrayLike(Uint8Array, 'be', 32);\n    seckey.set(tweaked);\n    return 0;\n  },\n  privateKeyTweakMul: function privateKeyTweakMul(seckey, tweak) {\n    var bn = new BN(tweak);\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1;\n    bn.imul(new BN(seckey));\n    if (bn.cmp(ecparams.n) >= 0) bn = bn.umod(ecparams.n);\n    var tweaked = bn.toArrayLike(Uint8Array, 'be', 32);\n    seckey.set(tweaked);\n    return 0;\n  },\n  publicKeyVerify: function publicKeyVerify(pubkey) {\n    var pair = loadPublicKey(pubkey);\n    return pair === null ? 1 : 0;\n  },\n  publicKeyCreate: function publicKeyCreate(output, seckey) {\n    var bn = new BN(seckey);\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1;\n    var point = ec.keyFromPrivate(seckey).getPublic();\n    savePublicKey(output, point);\n    return 0;\n  },\n  publicKeyConvert: function publicKeyConvert(output, pubkey) {\n    var pair = loadPublicKey(pubkey);\n    if (pair === null) return 1;\n    var point = pair.getPublic();\n    savePublicKey(output, point);\n    return 0;\n  },\n  publicKeyNegate: function publicKeyNegate(output, pubkey) {\n    var pair = loadPublicKey(pubkey);\n    if (pair === null) return 1;\n    var point = pair.getPublic();\n    point.y = point.y.redNeg();\n    savePublicKey(output, point);\n    return 0;\n  },\n  publicKeyCombine: function publicKeyCombine(output, pubkeys) {\n    var pairs = new Array(pubkeys.length);\n\n    for (var i = 0; i < pubkeys.length; ++i) {\n      pairs[i] = loadPublicKey(pubkeys[i]);\n      if (pairs[i] === null) return 1;\n    }\n\n    var point = pairs[0].getPublic();\n\n    for (var _i = 1; _i < pairs.length; ++_i) {\n      point = point.add(pairs[_i].pub);\n    }\n\n    if (point.isInfinity()) return 2;\n    savePublicKey(output, point);\n    return 0;\n  },\n  publicKeyTweakAdd: function publicKeyTweakAdd(output, pubkey, tweak) {\n    var pair = loadPublicKey(pubkey);\n    if (pair === null) return 1;\n    tweak = new BN(tweak);\n    if (tweak.cmp(ecparams.n) >= 0) return 2;\n    var point = pair.getPublic().add(ecparams.g.mul(tweak));\n    if (point.isInfinity()) return 2;\n    savePublicKey(output, point);\n    return 0;\n  },\n  publicKeyTweakMul: function publicKeyTweakMul(output, pubkey, tweak) {\n    var pair = loadPublicKey(pubkey);\n    if (pair === null) return 1;\n    tweak = new BN(tweak);\n    if (tweak.cmp(ecparams.n) >= 0 || tweak.isZero()) return 2;\n    var point = pair.getPublic().mul(tweak);\n    savePublicKey(output, point);\n    return 0;\n  },\n  signatureNormalize: function signatureNormalize(sig) {\n    var r = new BN(sig.subarray(0, 32));\n    var s = new BN(sig.subarray(32, 64));\n    if (r.cmp(ecparams.n) >= 0 || s.cmp(ecparams.n) >= 0) return 1;\n\n    if (s.cmp(ec.nh) === 1) {\n      sig.set(ecparams.n.sub(s).toArrayLike(Uint8Array, 'be', 32), 32);\n    }\n\n    return 0;\n  },\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureExport: function signatureExport(obj, sig) {\n    var sigR = sig.subarray(0, 32);\n    var sigS = sig.subarray(32, 64);\n    if (new BN(sigR).cmp(ecparams.n) >= 0) return 1;\n    if (new BN(sigS).cmp(ecparams.n) >= 0) return 1;\n    var output = obj.output; // Prepare R\n\n    var r = output.subarray(4, 4 + 33);\n    r[0] = 0x00;\n    r.set(sigR, 1);\n    var lenR = 33;\n    var posR = 0;\n\n    for (; lenR > 1 && r[posR] === 0x00 && !(r[posR + 1] & 0x80); --lenR, ++posR) {\n      ;\n    }\n\n    r = r.subarray(posR);\n    if (r[0] & 0x80) return 1;\n    if (lenR > 1 && r[0] === 0x00 && !(r[1] & 0x80)) return 1; // Prepare S\n\n    var s = output.subarray(6 + 33, 6 + 33 + 33);\n    s[0] = 0x00;\n    s.set(sigS, 1);\n    var lenS = 33;\n    var posS = 0;\n\n    for (; lenS > 1 && s[posS] === 0x00 && !(s[posS + 1] & 0x80); --lenS, ++posS) {\n      ;\n    }\n\n    s = s.subarray(posS);\n    if (s[0] & 0x80) return 1;\n    if (lenS > 1 && s[0] === 0x00 && !(s[1] & 0x80)) return 1; // Set output length for return\n\n    obj.outputlen = 6 + lenR + lenS; // Output in specified format\n    // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n\n    output[0] = 0x30;\n    output[1] = obj.outputlen - 2;\n    output[2] = 0x02;\n    output[3] = r.length;\n    output.set(r, 4);\n    output[4 + lenR] = 0x02;\n    output[5 + lenR] = s.length;\n    output.set(s, 6 + lenR);\n    return 0;\n  },\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureImport: function signatureImport(output, sig) {\n    if (sig.length < 8) return 1;\n    if (sig.length > 72) return 1;\n    if (sig[0] !== 0x30) return 1;\n    if (sig[1] !== sig.length - 2) return 1;\n    if (sig[2] !== 0x02) return 1;\n    var lenR = sig[3];\n    if (lenR === 0) return 1;\n    if (5 + lenR >= sig.length) return 1;\n    if (sig[4 + lenR] !== 0x02) return 1;\n    var lenS = sig[5 + lenR];\n    if (lenS === 0) return 1;\n    if (6 + lenR + lenS !== sig.length) return 1;\n    if (sig[4] & 0x80) return 1;\n    if (lenR > 1 && sig[4] === 0x00 && !(sig[5] & 0x80)) return 1;\n    if (sig[lenR + 6] & 0x80) return 1;\n    if (lenS > 1 && sig[lenR + 6] === 0x00 && !(sig[lenR + 7] & 0x80)) return 1;\n    var sigR = sig.subarray(4, 4 + lenR);\n    if (sigR.length === 33 && sigR[0] === 0x00) sigR = sigR.subarray(1);\n    if (sigR.length > 32) return 1;\n    var sigS = sig.subarray(6 + lenR);\n    if (sigS.length === 33 && sigS[0] === 0x00) sigS = sigS.slice(1);\n    if (sigS.length > 32) throw new Error('S length is too long');\n    var r = new BN(sigR);\n    if (r.cmp(ecparams.n) >= 0) r = new BN(0);\n    var s = new BN(sig.subarray(6 + lenR));\n    if (s.cmp(ecparams.n) >= 0) s = new BN(0);\n    output.set(r.toArrayLike(Uint8Array, 'be', 32), 0);\n    output.set(s.toArrayLike(Uint8Array, 'be', 32), 32);\n    return 0;\n  },\n  ecdsaSign: function ecdsaSign(obj, message, seckey, data, noncefn) {\n    if (noncefn) {\n      var _noncefn = noncefn;\n\n      noncefn = function noncefn(counter) {\n        var nonce = _noncefn(message, seckey, null, data, counter);\n\n        var isValid = nonce instanceof Uint8Array && nonce.length === 32;\n        if (!isValid) throw new Error('This is the way');\n        return new BN(nonce);\n      };\n    }\n\n    var d = new BN(seckey);\n    if (d.cmp(ecparams.n) >= 0 || d.isZero()) return 1;\n    var sig;\n\n    try {\n      sig = ec.sign(message, seckey, {\n        canonical: true,\n        k: noncefn,\n        pers: data\n      });\n    } catch (err) {\n      return 1;\n    }\n\n    obj.signature.set(sig.r.toArrayLike(Uint8Array, 'be', 32), 0);\n    obj.signature.set(sig.s.toArrayLike(Uint8Array, 'be', 32), 32);\n    obj.recid = sig.recoveryParam;\n    return 0;\n  },\n  ecdsaVerify: function ecdsaVerify(sig, msg32, pubkey) {\n    var sigObj = {\n      r: sig.subarray(0, 32),\n      s: sig.subarray(32, 64)\n    };\n    var sigr = new BN(sigObj.r);\n    var sigs = new BN(sigObj.s);\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1;\n    if (sigs.cmp(ec.nh) === 1 || sigr.isZero() || sigs.isZero()) return 3;\n    var pair = loadPublicKey(pubkey);\n    if (pair === null) return 2;\n    var point = pair.getPublic();\n    var isValid = ec.verify(msg32, sigObj, point);\n    return isValid ? 0 : 3;\n  },\n  ecdsaRecover: function ecdsaRecover(output, sig, recid, msg32) {\n    var sigObj = {\n      r: sig.slice(0, 32),\n      s: sig.slice(32, 64)\n    };\n    var sigr = new BN(sigObj.r);\n    var sigs = new BN(sigObj.s);\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1;\n    if (sigr.isZero() || sigs.isZero()) return 2; // Can throw `throw new Error('Unable to find sencond key candinate');`\n\n    var point;\n\n    try {\n      point = ec.recoverPubKey(msg32, sigObj, recid);\n    } catch (err) {\n      return 2;\n    }\n\n    savePublicKey(output, point);\n    return 0;\n  },\n  ecdh: function ecdh(output, pubkey, seckey, data, hashfn, xbuf, ybuf) {\n    var pair = loadPublicKey(pubkey);\n    if (pair === null) return 1;\n    var scalar = new BN(seckey);\n    if (scalar.cmp(ecparams.n) >= 0 || scalar.isZero()) return 2;\n    var point = pair.getPublic().mul(scalar);\n\n    if (hashfn === undefined) {\n      var _data = point.encode(null, true);\n\n      var sha256 = ec.hash().update(_data).digest();\n\n      for (var i = 0; i < 32; ++i) {\n        output[i] = sha256[i];\n      }\n    } else {\n      if (!xbuf) xbuf = new Uint8Array(32);\n      var x = point.getX().toArray('be', 32);\n\n      for (var _i2 = 0; _i2 < 32; ++_i2) {\n        xbuf[_i2] = x[_i2];\n      }\n\n      if (!ybuf) ybuf = new Uint8Array(32);\n      var y = point.getY().toArray('be', 32);\n\n      for (var _i3 = 0; _i3 < 32; ++_i3) {\n        ybuf[_i3] = y[_i3];\n      }\n\n      var hash = hashfn(xbuf, ybuf, data);\n      var isValid = hash instanceof Uint8Array && hash.length === output.length;\n      if (!isValid) return 2;\n      output.set(hash);\n    }\n\n    return 0;\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar randombytes = require(\"randombytes\");\n\nfunction getRandomBytes(bytes) {\n  return new Promise(function (resolve, reject) {\n    randombytes(bytes, function (err, resp) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(resp);\n    });\n  });\n}\n\nexports.getRandomBytes = getRandomBytes;\n\nfunction getRandomBytesSync(bytes) {\n  return randombytes(bytes);\n}\n\nexports.getRandomBytesSync = getRandomBytesSync;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction createHashFunction(hashConstructor) {\n  return function (msg) {\n    var hash = hashConstructor();\n    hash.update(msg);\n    return Buffer.from(hash.digest());\n  };\n}\n\nexports.createHashFunction = createHashFunction;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.baToJSON = exports.addHexPrefix = exports.toUnsigned = exports.fromSigned = exports.bufferToHex = exports.bufferToInt = exports.toBuffer = exports.stripZeros = exports.unpad = exports.setLengthRight = exports.setLength = exports.setLengthLeft = exports.zeros = void 0;\n\nvar ethjsUtil = require('ethjs-util');\n\nvar BN = require(\"bn.js\");\n/**\n * Returns a buffer filled with 0s.\n * @param bytes the number of bytes the buffer should be\n */\n\n\nexports.zeros = function (bytes) {\n  return Buffer.allocUnsafe(bytes).fill(0);\n};\n/**\n * Left Pads an `Array` or `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer|Array)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Buffer|Array)\n */\n\n\nexports.setLengthLeft = function (msg, length, right) {\n  if (right === void 0) {\n    right = false;\n  }\n\n  var buf = exports.zeros(length);\n  msg = exports.toBuffer(msg);\n\n  if (right) {\n    if (msg.length < length) {\n      msg.copy(buf);\n      return buf;\n    }\n\n    return msg.slice(0, length);\n  } else {\n    if (msg.length < length) {\n      msg.copy(buf, length - msg.length);\n      return buf;\n    }\n\n    return msg.slice(-length);\n  }\n};\n\nexports.setLength = exports.setLengthLeft;\n/**\n * Right Pads an `Array` or `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer|Array)\n * @param length the number of bytes the output should be\n * @return (Buffer|Array)\n */\n\nexports.setLengthRight = function (msg, length) {\n  return exports.setLength(msg, length, true);\n};\n/**\n * Trims leading zeros from a `Buffer` or an `Array`.\n * @param a (Buffer|Array|String)\n * @return (Buffer|Array|String)\n */\n\n\nexports.unpad = function (a) {\n  a = ethjsUtil.stripHexPrefix(a);\n  var first = a[0];\n\n  while (a.length > 0 && first.toString() === '0') {\n    a = a.slice(1);\n    first = a[0];\n  }\n\n  return a;\n};\n\nexports.stripZeros = exports.unpad;\n/**\n * Attempts to turn a value into a `Buffer`. As input it supports `Buffer`, `String`, `Number`, null/undefined, `BN` and other objects with a `toArray()` method.\n * @param v the value\n */\n\nexports.toBuffer = function (v) {\n  if (!Buffer.isBuffer(v)) {\n    if (Array.isArray(v)) {\n      v = Buffer.from(v);\n    } else if (typeof v === 'string') {\n      if (ethjsUtil.isHexString(v)) {\n        v = Buffer.from(ethjsUtil.padToEven(ethjsUtil.stripHexPrefix(v)), 'hex');\n      } else {\n        throw new Error(\"Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: \" + v);\n      }\n    } else if (typeof v === 'number') {\n      v = ethjsUtil.intToBuffer(v);\n    } else if (v === null || v === undefined) {\n      v = Buffer.allocUnsafe(0);\n    } else if (BN.isBN(v)) {\n      v = v.toArrayLike(Buffer);\n    } else if (v.toArray) {\n      // converts a BN to a Buffer\n      v = Buffer.from(v.toArray());\n    } else {\n      throw new Error('invalid type');\n    }\n  }\n\n  return v;\n};\n/**\n * Converts a `Buffer` to a `Number`.\n * @param buf `Buffer` object to convert\n * @throws If the input number exceeds 53 bits.\n */\n\n\nexports.bufferToInt = function (buf) {\n  return new BN(exports.toBuffer(buf)).toNumber();\n};\n/**\n * Converts a `Buffer` into a `0x`-prefixed hex `String`.\n * @param buf `Buffer` object to convert\n */\n\n\nexports.bufferToHex = function (buf) {\n  buf = exports.toBuffer(buf);\n  return '0x' + buf.toString('hex');\n};\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BN`. Assumes 256-bit numbers.\n * @param num Signed integer value\n */\n\n\nexports.fromSigned = function (num) {\n  return new BN(num).fromTwos(256);\n};\n/**\n * Converts a `BN` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param num\n */\n\n\nexports.toUnsigned = function (num) {\n  return Buffer.from(num.toTwos(256).toArray());\n};\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\".\n */\n\n\nexports.addHexPrefix = function (str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  return ethjsUtil.isHexPrefixed(str) ? str : '0x' + str;\n};\n/**\n * Converts a `Buffer` or `Array` to JSON.\n * @param ba (Buffer|Array)\n * @return (Array|String|null)\n */\n\n\nexports.baToJSON = function (ba) {\n  if (Buffer.isBuffer(ba)) {\n    return \"0x\" + ba.toString('hex');\n  } else if (ba instanceof Array) {\n    var array = [];\n\n    for (var i = 0; i < ba.length; i++) {\n      array.push(exports.baToJSON(ba[i]));\n    }\n\n    return array;\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ecdhUnsafe = exports.ecdh = exports.recover = exports.verify = exports.sign = exports.signatureImportLax = exports.signatureImport = exports.signatureExport = exports.signatureNormalize = exports.publicKeyCombine = exports.publicKeyTweakMul = exports.publicKeyTweakAdd = exports.publicKeyVerify = exports.publicKeyConvert = exports.publicKeyCreate = exports.privateKeyTweakMul = exports.privateKeyTweakAdd = exports.privateKeyModInverse = exports.privateKeyNegate = exports.privateKeyImport = exports.privateKeyExport = exports.privateKeyVerify = void 0;\n\nvar secp256k1 = require('ethereum-cryptography/secp256k1');\n\nvar secp256k1v3 = require('./secp256k1v3-lib/index');\n\nvar der = require('./secp256k1v3-lib/der');\n/**\n * Verify an ECDSA privateKey\n * @method privateKeyVerify\n * @param {Buffer} privateKey\n * @return {boolean}\n */\n\n\nexports.privateKeyVerify = function (privateKey) {\n  // secp256k1 v4 version throws when privateKey length is not 32\n  if (privateKey.length !== 32) {\n    return false;\n  }\n\n  return secp256k1.privateKeyVerify(Uint8Array.from(privateKey));\n};\n/**\n * Export a privateKey in DER format\n * @method privateKeyExport\n * @param {Buffer} privateKey\n * @param {boolean} compressed\n * @return {boolean}\n */\n\n\nexports.privateKeyExport = function (privateKey, compressed) {\n  // secp256k1 v4 version throws when privateKey length is not 32\n  if (privateKey.length !== 32) {\n    throw new RangeError('private key length is invalid');\n  }\n\n  var publicKey = secp256k1v3.privateKeyExport(privateKey, compressed);\n  return der.privateKeyExport(privateKey, publicKey, compressed);\n};\n/**\n * Import a privateKey in DER format\n * @method privateKeyImport\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\n\n\nexports.privateKeyImport = function (privateKey) {\n  // privateKeyImport method is not part of secp256k1 v4 package\n  // this implementation is based on v3\n  privateKey = der.privateKeyImport(privateKey);\n\n  if (privateKey !== null && privateKey.length === 32 && exports.privateKeyVerify(privateKey)) {\n    return privateKey;\n  }\n\n  throw new Error(\"couldn't import from DER format\");\n};\n/**\n * Negate a privateKey by subtracting it from the order of the curve's base point\n * @method privateKeyNegate\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\n\n\nexports.privateKeyNegate = function (privateKey) {\n  return Buffer.from(secp256k1.privateKeyNegate(Uint8Array.from(privateKey)));\n};\n/**\n * Compute the inverse of a privateKey (modulo the order of the curve's base point).\n * @method privateKeyModInverse\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\n\n\nexports.privateKeyModInverse = function (privateKey) {\n  if (privateKey.length !== 32) {\n    throw new Error('private key length is invalid');\n  }\n\n  return Buffer.from(secp256k1v3.privateKeyModInverse(Uint8Array.from(privateKey)));\n};\n/**\n * Tweak a privateKey by adding tweak to it.\n * @method privateKeyTweakAdd\n * @param {Buffer} privateKey\n * @param {Buffer} tweak\n * @return {Buffer}\n */\n\n\nexports.privateKeyTweakAdd = function (privateKey, tweak) {\n  return Buffer.from(secp256k1.privateKeyTweakAdd(Uint8Array.from(privateKey), tweak));\n};\n/**\n * Tweak a privateKey by multiplying it by a tweak.\n * @method privateKeyTweakMul\n * @param {Buffer} privateKey\n * @param {Buffer} tweak\n * @return {Buffer}\n */\n\n\nexports.privateKeyTweakMul = function (privateKey, tweak) {\n  return Buffer.from(secp256k1.privateKeyTweakMul(Uint8Array.from(privateKey), Uint8Array.from(tweak)));\n};\n/**\n * Compute the public key for a privateKey.\n * @method publicKeyCreate\n * @param {Buffer} privateKey\n * @param {boolean} compressed\n * @return {Buffer}\n */\n\n\nexports.publicKeyCreate = function (privateKey, compressed) {\n  return Buffer.from(secp256k1.publicKeyCreate(Uint8Array.from(privateKey), compressed));\n};\n/**\n * Convert a publicKey to compressed or uncompressed form.\n * @method publicKeyConvert\n * @param {Buffer} publicKey\n * @param {boolean} compressed\n * @return {Buffer}\n */\n\n\nexports.publicKeyConvert = function (publicKey, compressed) {\n  return Buffer.from(secp256k1.publicKeyConvert(Uint8Array.from(publicKey), compressed));\n};\n/**\n * Verify an ECDSA publicKey.\n * @method publicKeyVerify\n * @param {Buffer} publicKey\n * @return {boolean}\n */\n\n\nexports.publicKeyVerify = function (publicKey) {\n  // secp256k1 v4 version throws when publicKey length is not 33 or 65\n  if (publicKey.length !== 33 && publicKey.length !== 65) {\n    return false;\n  }\n\n  return secp256k1.publicKeyVerify(Uint8Array.from(publicKey));\n};\n/**\n * Tweak a publicKey by adding tweak times the generator to it.\n * @method publicKeyTweakAdd\n * @param {Buffer} publicKey\n * @param {Buffer} tweak\n * @param {boolean} compressed\n * @return {Buffer}\n */\n\n\nexports.publicKeyTweakAdd = function (publicKey, tweak, compressed) {\n  return Buffer.from(secp256k1.publicKeyTweakAdd(Uint8Array.from(publicKey), Uint8Array.from(tweak), compressed));\n};\n/**\n * Tweak a publicKey by multiplying it by a tweak value\n * @method publicKeyTweakMul\n * @param {Buffer} publicKey\n * @param {Buffer} tweak\n * @param {boolean} compressed\n * @return {Buffer}\n */\n\n\nexports.publicKeyTweakMul = function (publicKey, tweak, compressed) {\n  return Buffer.from(secp256k1.publicKeyTweakMul(Uint8Array.from(publicKey), Uint8Array.from(tweak), compressed));\n};\n/**\n * Add a given publicKeys together.\n * @method publicKeyCombine\n * @param {Array<Buffer>} publicKeys\n * @param {boolean} compressed\n * @return {Buffer}\n */\n\n\nexports.publicKeyCombine = function (publicKeys, compressed) {\n  var keys = [];\n  publicKeys.forEach(function (publicKey) {\n    keys.push(Uint8Array.from(publicKey));\n  });\n  return Buffer.from(secp256k1.publicKeyCombine(keys, compressed));\n};\n/**\n * Convert a signature to a normalized lower-S form.\n * @method signatureNormalize\n * @param {Buffer} signature\n * @return {Buffer}\n */\n\n\nexports.signatureNormalize = function (signature) {\n  return Buffer.from(secp256k1.signatureNormalize(Uint8Array.from(signature)));\n};\n/**\n * Serialize an ECDSA signature in DER format.\n * @method signatureExport\n * @param {Buffer} signature\n * @return {Buffer}\n */\n\n\nexports.signatureExport = function (signature) {\n  return Buffer.from(secp256k1.signatureExport(Uint8Array.from(signature)));\n};\n/**\n * Parse a DER ECDSA signature (follow by [BIP66](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki)).\n * @method signatureImport\n * @param {Buffer} signature\n * @return {Buffer}\n */\n\n\nexports.signatureImport = function (signature) {\n  return Buffer.from(secp256k1.signatureImport(Uint8Array.from(signature)));\n};\n/**\n * Parse a DER ECDSA signature (not follow by [BIP66](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki)).\n * @method signatureImportLax\n * @param {Buffer} signature\n * @return {Buffer}\n */\n\n\nexports.signatureImportLax = function (signature) {\n  // signatureImportLax method is not part of secp256k1 v4 package\n  // this implementation is based on v3\n  // ensure that signature is greater than 0\n  if (signature.length === 0) {\n    throw new RangeError('signature length is invalid');\n  }\n\n  var sigObj = der.signatureImportLax(signature);\n\n  if (sigObj === null) {\n    throw new Error(\"couldn't parse DER signature\");\n  }\n\n  return secp256k1v3.signatureImport(sigObj);\n};\n/**\n * Create an ECDSA signature. Always return low-S signature.\n * @method sign\n * @param {Buffer} message\n * @param {Buffer} privateKey\n * @param {Object} options\n * @return {Buffer}\n */\n\n\nexports.sign = function (message, privateKey, options) {\n  if (options === null) {\n    throw new TypeError('options should be an Object');\n  }\n\n  var signOptions = undefined;\n\n  if (options) {\n    signOptions = {};\n\n    if (options.data === null) {\n      // validate option.data length\n      throw new TypeError('options.data should be a Buffer');\n    }\n\n    if (options.data) {\n      if (options.data.length != 32) {\n        throw new RangeError('options.data length is invalid');\n      }\n\n      signOptions.data = new Uint8Array(options.data);\n    }\n\n    if (options.noncefn === null) {\n      throw new TypeError('options.noncefn should be a Function');\n    }\n\n    if (options.noncefn) {\n      // convert option.noncefn function signature\n      signOptions.noncefn = function (message, privateKey, algo, data, attempt) {\n        var bufferAlgo = algo != null ? Buffer.from(algo) : null;\n        var bufferData = data != null ? Buffer.from(data) : null;\n        var buffer = Buffer.from('');\n\n        if (options.noncefn) {\n          buffer = options.noncefn(Buffer.from(message), Buffer.from(privateKey), bufferAlgo, bufferData, attempt);\n        }\n\n        return new Uint8Array(buffer);\n      };\n    }\n  }\n\n  var sig = secp256k1.ecdsaSign(Uint8Array.from(message), Uint8Array.from(privateKey), signOptions);\n  return {\n    signature: Buffer.from(sig.signature),\n    recovery: sig.recid\n  };\n};\n/**\n * Verify an ECDSA signature.\n * @method verify\n * @param {Buffer} message\n * @param {Buffer} signature\n * @param {Buffer} publicKey\n * @return {boolean}\n */\n\n\nexports.verify = function (message, signature, publicKey) {\n  return secp256k1.ecdsaVerify(Uint8Array.from(signature), Uint8Array.from(message), publicKey);\n};\n/**\n * Recover an ECDSA public key from a signature.\n * @method recover\n * @param {Buffer} message\n * @param {Buffer} signature\n * @param {Number} recid\n * @param {boolean} compressed\n * @return {Buffer}\n */\n\n\nexports.recover = function (message, signature, recid, compressed) {\n  return Buffer.from(secp256k1.ecdsaRecover(Uint8Array.from(signature), recid, Uint8Array.from(message), compressed));\n};\n/**\n * Compute an EC Diffie-Hellman secret and applied sha256 to compressed public key.\n * @method ecdh\n * @param {Buffer} publicKey\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\n\n\nexports.ecdh = function (publicKey, privateKey) {\n  // note: secp256k1 v3 doesn't allow optional parameter\n  return Buffer.from(secp256k1.ecdh(Uint8Array.from(publicKey), Uint8Array.from(privateKey), {}));\n};\n\nexports.ecdhUnsafe = function (publicKey, privateKey, compressed) {\n  // ecdhUnsafe method is not part of secp256k1 v4 package\n  // this implementation is based on v3\n  // ensure valid publicKey length\n  if (publicKey.length !== 33 && publicKey.length !== 65) {\n    throw new RangeError('public key length is invalid');\n  } // ensure valid privateKey length\n\n\n  if (privateKey.length !== 32) {\n    throw new RangeError('private key length is invalid');\n  }\n\n  return Buffer.from(secp256k1v3.ecdhUnsafe(Uint8Array.from(publicKey), Uint8Array.from(privateKey), compressed));\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.rlphash = exports.ripemd160 = exports.sha256 = exports.keccak256 = exports.keccak = void 0;\n\nvar _a = require('ethereum-cryptography/keccak'),\n    keccak224 = _a.keccak224,\n    keccak384 = _a.keccak384,\n    k256 = _a.keccak256,\n    keccak512 = _a.keccak512;\n\nvar createHash = require('create-hash');\n\nvar ethjsUtil = require('ethjs-util');\n\nvar rlp = require(\"rlp\");\n\nvar bytes_1 = require(\"./bytes\");\n/**\n * Creates Keccak hash of the input\n * @param a The input data (Buffer|Array|String|Number) If the string is a 0x-prefixed hex value\n * it's interpreted as hexadecimal, otherwise as utf8.\n * @param bits The Keccak width\n */\n\n\nexports.keccak = function (a, bits) {\n  if (bits === void 0) {\n    bits = 256;\n  }\n\n  if (typeof a === 'string' && !ethjsUtil.isHexString(a)) {\n    a = Buffer.from(a, 'utf8');\n  } else {\n    a = bytes_1.toBuffer(a);\n  }\n\n  if (!bits) bits = 256;\n\n  switch (bits) {\n    case 224:\n      {\n        return keccak224(a);\n      }\n\n    case 256:\n      {\n        return k256(a);\n      }\n\n    case 384:\n      {\n        return keccak384(a);\n      }\n\n    case 512:\n      {\n        return keccak512(a);\n      }\n\n    default:\n      {\n        throw new Error(\"Invald algorithm: keccak\" + bits);\n      }\n  }\n};\n/**\n * Creates Keccak-256 hash of the input, alias for keccak(a, 256).\n * @param a The input data (Buffer|Array|String|Number)\n */\n\n\nexports.keccak256 = function (a) {\n  return exports.keccak(a);\n};\n/**\n * Creates SHA256 hash of the input.\n * @param a The input data (Buffer|Array|String|Number)\n */\n\n\nexports.sha256 = function (a) {\n  a = bytes_1.toBuffer(a);\n  return createHash('sha256').update(a).digest();\n};\n/**\n * Creates RIPEMD160 hash of the input.\n * @param a The input data (Buffer|Array|String|Number)\n * @param padded Whether it should be padded to 256 bits or not\n */\n\n\nexports.ripemd160 = function (a, padded) {\n  a = bytes_1.toBuffer(a);\n  var hash = createHash('rmd160').update(a).digest();\n\n  if (padded === true) {\n    return bytes_1.setLength(hash, 32);\n  } else {\n    return hash;\n  }\n};\n/**\n * Creates SHA-3 hash of the RLP encoded version of the input.\n * @param a The input data\n */\n\n\nexports.rlphash = function (a) {\n  return exports.keccak(rlp.encode(a));\n};","\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\n\nvar ethereumjs_common_1 = require(\"ethereumjs-common\");\n\nvar buffer_1 = require(\"buffer\"); // secp256k1n/2\n\n\nvar N_DIV_2 = new ethereumjs_util_1.BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);\n/**\n * An Ethereum transaction.\n */\n\nvar Transaction = function () {\n  /**\n   * Creates a new transaction from an object with its fields' values.\n   *\n   * @param data - A transaction can be initialized with its rlp representation, an array containing\n   * the value of its fields in order, or an object containing them by name.\n   *\n   * @param opts - The transaction's options, used to indicate the chain and hardfork the\n   * transactions belongs to.\n   *\n   * @note Transaction objects implement EIP155 by default. To disable it, use the constructor's\n   * second parameter to set a chain and hardfork before EIP155 activation (i.e. before Spurious\n   * Dragon.)\n   *\n   * @example\n   * ```js\n   * const txData = {\n   *   nonce: '0x00',\n   *   gasPrice: '0x09184e72a000',\n   *   gasLimit: '0x2710',\n   *   to: '0x0000000000000000000000000000000000000000',\n   *   value: '0x00',\n   *   data: '0x7f7465737432000000000000000000000000000000000000000000000000000000600057',\n   *   v: '0x1c',\n   *   r: '0x5e1d3a76fbf824220eafc8c79ad578ad2b67d01b0c2425eb1f1347e8f50882ab',\n   *   s: '0x5bd428537f05f9830e93792f90ea6a3e2d1ee84952dd96edbae9f658f831ab13'\n   * };\n   * const tx = new Transaction(txData);\n   * ```\n   */\n  function Transaction(data, opts) {\n    if (data === void 0) {\n      data = {};\n    }\n\n    if (opts === void 0) {\n      opts = {};\n    } // instantiate Common class instance based on passed options\n\n\n    if (opts.common) {\n      if (opts.chain || opts.hardfork) {\n        throw new Error('Instantiation with both opts.common, and opts.chain and opts.hardfork parameter not allowed!');\n      }\n\n      this._common = opts.common;\n    } else {\n      var chain = opts.chain ? opts.chain : 'mainnet';\n      var hardfork = opts.hardfork ? opts.hardfork : 'petersburg';\n      this._common = new ethereumjs_common_1.default(chain, hardfork);\n    } // Define Properties\n\n\n    var fields = [{\n      name: 'nonce',\n      length: 32,\n      allowLess: true,\n      default: new buffer_1.Buffer([])\n    }, {\n      name: 'gasPrice',\n      length: 32,\n      allowLess: true,\n      default: new buffer_1.Buffer([])\n    }, {\n      name: 'gasLimit',\n      alias: 'gas',\n      length: 32,\n      allowLess: true,\n      default: new buffer_1.Buffer([])\n    }, {\n      name: 'to',\n      allowZero: true,\n      length: 20,\n      default: new buffer_1.Buffer([])\n    }, {\n      name: 'value',\n      length: 32,\n      allowLess: true,\n      default: new buffer_1.Buffer([])\n    }, {\n      name: 'data',\n      alias: 'input',\n      allowZero: true,\n      default: new buffer_1.Buffer([])\n    }, {\n      name: 'v',\n      allowZero: true,\n      default: new buffer_1.Buffer([])\n    }, {\n      name: 'r',\n      length: 32,\n      allowZero: true,\n      allowLess: true,\n      default: new buffer_1.Buffer([])\n    }, {\n      name: 's',\n      length: 32,\n      allowZero: true,\n      allowLess: true,\n      default: new buffer_1.Buffer([])\n    }]; // attached serialize\n\n    ethereumjs_util_1.defineProperties(this, fields, data);\n    /**\n     * @property {Buffer} from (read only) sender address of this transaction, mathematically derived from other parameters.\n     * @name from\n     * @memberof Transaction\n     */\n\n    Object.defineProperty(this, 'from', {\n      enumerable: true,\n      configurable: true,\n      get: this.getSenderAddress.bind(this)\n    });\n\n    this._validateV(this.v);\n\n    this._overrideVSetterWithValidation();\n  }\n  /**\n   * If the tx's `to` is to the creation address\n   */\n\n\n  Transaction.prototype.toCreationAddress = function () {\n    return this.to.toString('hex') === '';\n  };\n  /**\n   * Computes a sha3-256 hash of the serialized tx\n   * @param includeSignature - Whether or not to include the signature\n   */\n\n\n  Transaction.prototype.hash = function (includeSignature) {\n    if (includeSignature === void 0) {\n      includeSignature = true;\n    }\n\n    var items;\n\n    if (includeSignature) {\n      items = this.raw;\n    } else {\n      if (this._implementsEIP155()) {\n        items = this.raw.slice(0, 6).concat([ethereumjs_util_1.toBuffer(this.getChainId()), // TODO: stripping zeros should probably be a responsibility of the rlp module\n        ethereumjs_util_1.stripZeros(ethereumjs_util_1.toBuffer(0)), ethereumjs_util_1.stripZeros(ethereumjs_util_1.toBuffer(0))]);\n      } else {\n        items = this.raw.slice(0, 6);\n      }\n    } // create hash\n\n\n    return ethereumjs_util_1.rlphash(items);\n  };\n  /**\n   * returns chain ID\n   */\n\n\n  Transaction.prototype.getChainId = function () {\n    return this._common.chainId();\n  };\n  /**\n   * returns the sender's address\n   */\n\n\n  Transaction.prototype.getSenderAddress = function () {\n    if (this._from) {\n      return this._from;\n    }\n\n    var pubkey = this.getSenderPublicKey();\n    this._from = ethereumjs_util_1.publicToAddress(pubkey);\n    return this._from;\n  };\n  /**\n   * returns the public key of the sender\n   */\n\n\n  Transaction.prototype.getSenderPublicKey = function () {\n    if (!this.verifySignature()) {\n      throw new Error('Invalid Signature');\n    } // If the signature was verified successfully the _senderPubKey field is defined\n\n\n    return this._senderPubKey;\n  };\n  /**\n   * Determines if the signature is valid\n   */\n\n\n  Transaction.prototype.verifySignature = function () {\n    var msgHash = this.hash(false); // All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n\n    if (this._common.gteHardfork('homestead') && new ethereumjs_util_1.BN(this.s).cmp(N_DIV_2) === 1) {\n      return false;\n    }\n\n    try {\n      var v = ethereumjs_util_1.bufferToInt(this.v);\n\n      var useChainIdWhileRecoveringPubKey = v >= this.getChainId() * 2 + 35 && this._common.gteHardfork('spuriousDragon');\n\n      this._senderPubKey = ethereumjs_util_1.ecrecover(msgHash, v, this.r, this.s, useChainIdWhileRecoveringPubKey ? this.getChainId() : undefined);\n    } catch (e) {\n      return false;\n    }\n\n    return !!this._senderPubKey;\n  };\n  /**\n   * sign a transaction with a given private key\n   * @param privateKey - Must be 32 bytes in length\n   */\n\n\n  Transaction.prototype.sign = function (privateKey) {\n    // We clear any previous signature before signing it. Otherwise, _implementsEIP155's can give\n    // different results if this tx was already signed.\n    this.v = new buffer_1.Buffer([]);\n    this.s = new buffer_1.Buffer([]);\n    this.r = new buffer_1.Buffer([]);\n    var msgHash = this.hash(false);\n    var sig = ethereumjs_util_1.ecsign(msgHash, privateKey);\n\n    if (this._implementsEIP155()) {\n      sig.v += this.getChainId() * 2 + 8;\n    }\n\n    Object.assign(this, sig);\n  };\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n\n\n  Transaction.prototype.getDataFee = function () {\n    var data = this.raw[5];\n    var cost = new ethereumjs_util_1.BN(0);\n\n    for (var i = 0; i < data.length; i++) {\n      data[i] === 0 ? cost.iaddn(this._common.param('gasPrices', 'txDataZero')) : cost.iaddn(this._common.param('gasPrices', 'txDataNonZero'));\n    }\n\n    return cost;\n  };\n  /**\n   * the minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n   */\n\n\n  Transaction.prototype.getBaseFee = function () {\n    var fee = this.getDataFee().iaddn(this._common.param('gasPrices', 'tx'));\n\n    if (this._common.gteHardfork('homestead') && this.toCreationAddress()) {\n      fee.iaddn(this._common.param('gasPrices', 'txCreation'));\n    }\n\n    return fee;\n  };\n  /**\n   * the up front amount that an account must have for this transaction to be valid\n   */\n\n\n  Transaction.prototype.getUpfrontCost = function () {\n    return new ethereumjs_util_1.BN(this.gasLimit).imul(new ethereumjs_util_1.BN(this.gasPrice)).iadd(new ethereumjs_util_1.BN(this.value));\n  };\n\n  Transaction.prototype.validate = function (stringError) {\n    if (stringError === void 0) {\n      stringError = false;\n    }\n\n    var errors = [];\n\n    if (!this.verifySignature()) {\n      errors.push('Invalid Signature');\n    }\n\n    if (this.getBaseFee().cmp(new ethereumjs_util_1.BN(this.gasLimit)) > 0) {\n      errors.push([\"gas limit is too low. Need at least \" + this.getBaseFee()]);\n    }\n\n    if (stringError === false) {\n      return errors.length === 0;\n    } else {\n      return errors.join(' ');\n    }\n  };\n  /**\n   * Returns the rlp encoding of the transaction\n   */\n\n\n  Transaction.prototype.serialize = function () {\n    // Note: This never gets executed, defineProperties overwrites it.\n    return ethereumjs_util_1.rlp.encode(this.raw);\n  };\n  /**\n   * Returns the transaction in JSON format\n   * @see {@link https://github.com/ethereumjs/ethereumjs-util/blob/master/docs/index.md#defineproperties|ethereumjs-util}\n   */\n\n\n  Transaction.prototype.toJSON = function (labels) {\n    if (labels === void 0) {\n      labels = false;\n    } // Note: This never gets executed, defineProperties overwrites it.\n\n\n    return {};\n  };\n\n  Transaction.prototype._validateV = function (v) {\n    if (v === undefined || v.length === 0) {\n      return;\n    }\n\n    if (!this._common.gteHardfork('spuriousDragon')) {\n      return;\n    }\n\n    var vInt = ethereumjs_util_1.bufferToInt(v);\n\n    if (vInt === 27 || vInt === 28) {\n      return;\n    }\n\n    var isValidEIP155V = vInt === this.getChainId() * 2 + 35 || vInt === this.getChainId() * 2 + 36;\n\n    if (!isValidEIP155V) {\n      throw new Error(\"Incompatible EIP155-based V \" + vInt + \" and chain id \" + this.getChainId() + \". See the second parameter of the Transaction constructor to set the chain id.\");\n    }\n  };\n\n  Transaction.prototype._isSigned = function () {\n    return this.v.length > 0 && this.r.length > 0 && this.s.length > 0;\n  };\n\n  Transaction.prototype._overrideVSetterWithValidation = function () {\n    var _this = this;\n\n    var vDescriptor = Object.getOwnPropertyDescriptor(this, 'v');\n    Object.defineProperty(this, 'v', __assign({}, vDescriptor, {\n      set: function set(v) {\n        if (v !== undefined) {\n          _this._validateV(ethereumjs_util_1.toBuffer(v));\n        }\n\n        vDescriptor.set(v);\n      }\n    }));\n  };\n\n  Transaction.prototype._implementsEIP155 = function () {\n    var onEIP155BlockOrLater = this._common.gteHardfork('spuriousDragon');\n\n    if (!this._isSigned()) {\n      // We sign with EIP155 all unsigned transactions after spuriousDragon\n      return onEIP155BlockOrLater;\n    } // EIP155 spec:\n    // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36, then when computing\n    // the hash of a transaction for purposes of signing or recovering, instead of hashing only the first six\n    // elements (i.e. nonce, gasprice, startgas, to, value, data), hash nine elements, with v replaced by\n    // CHAIN_ID, r = 0 and s = 0.\n\n\n    var v = ethereumjs_util_1.bufferToInt(this.v);\n    var vAndChainIdMeetEIP155Conditions = v === this.getChainId() * 2 + 35 || v === this.getChainId() * 2 + 36;\n    return vAndChainIdMeetEIP155Conditions && onEIP155BlockOrLater;\n  };\n\n  return Transaction;\n}();\n\nexports.default = Transaction;","\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) {\n    if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.secp256k1 = exports.rlp = exports.BN = void 0;\n\nvar secp256k1 = require('./secp256k1v3-adapter');\n\nexports.secp256k1 = secp256k1;\n\nvar ethjsUtil = require('ethjs-util');\n\nvar BN = require(\"bn.js\");\n\nexports.BN = BN;\n\nvar rlp = require(\"rlp\");\n\nexports.rlp = rlp;\nObject.assign(exports, ethjsUtil);\n/**\n * Constants\n */\n\n__exportStar(require(\"./constants\"), exports);\n/**\n * Public-key cryptography (secp256k1) and addresses\n */\n\n\n__exportStar(require(\"./account\"), exports);\n/**\n * Hash functions\n */\n\n\n__exportStar(require(\"./hash\"), exports);\n/**\n * ECDSA signature\n */\n\n\n__exportStar(require(\"./signature\"), exports);\n/**\n * Utilities for manipulating Buffers, byte arrays, etc.\n */\n\n\n__exportStar(require(\"./bytes\"), exports);\n/**\n * Function for definining properties on an object\n */\n\n\n__exportStar(require(\"./object\"), exports);","\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar chains_1 = require(\"./chains\");\n\nvar hardforks_1 = require(\"./hardforks\");\n/**\n * Common class to access chain and hardfork parameters\n */\n\n\nvar Common = function () {\n  /**\n   * @constructor\n   * @param chain String ('mainnet') or Number (1) chain\n   * @param hardfork String identifier ('byzantium') for hardfork (optional)\n   * @param supportedHardforks Limit parameter returns to the given hardforks (optional)\n   */\n  function Common(chain, hardfork, supportedHardforks) {\n    this._chainParams = this.setChain(chain);\n    this._hardfork = null;\n    this._supportedHardforks = supportedHardforks === undefined ? [] : supportedHardforks;\n\n    if (hardfork) {\n      this.setHardfork(hardfork);\n    }\n  }\n  /**\n   * Creates a Common object for a custom chain, based on a standard one. It uses all the [[Chain]]\n   * params from [[baseChain]] except the ones overridden in [[customChainParams]].\n   *\n   * @param baseChain The name (`mainnet`) or id (`1`) of a standard chain used to base the custom\n   * chain params on.\n   * @param customChainParams The custom parameters of the chain.\n   * @param hardfork String identifier ('byzantium') for hardfork (optional)\n   * @param supportedHardforks Limit parameter returns to the given hardforks (optional)\n   */\n\n\n  Common.forCustomChain = function (baseChain, customChainParams, hardfork, supportedHardforks) {\n    var standardChainParams = Common._getChainParams(baseChain);\n\n    return new Common(__assign(__assign({}, standardChainParams), customChainParams), hardfork, supportedHardforks);\n  };\n\n  Common._getChainParams = function (chain) {\n    if (typeof chain === 'number') {\n      if (chains_1.chains['names'][chain]) {\n        return chains_1.chains[chains_1.chains['names'][chain]];\n      }\n\n      throw new Error(\"Chain with ID \" + chain + \" not supported\");\n    }\n\n    if (chains_1.chains[chain]) {\n      return chains_1.chains[chain];\n    }\n\n    throw new Error(\"Chain with name \" + chain + \" not supported\");\n  };\n  /**\n   * Sets the chain\n   * @param chain String ('mainnet') or Number (1) chain\n   *     representation. Or, a Dictionary of chain parameters for a private network.\n   * @returns The dictionary with parameters set as chain\n   */\n\n\n  Common.prototype.setChain = function (chain) {\n    if (typeof chain === 'number' || typeof chain === 'string') {\n      this._chainParams = Common._getChainParams(chain);\n    } else if (typeof chain === 'object') {\n      var required = ['networkId', 'genesis', 'hardforks', 'bootstrapNodes'];\n\n      for (var _i = 0, required_1 = required; _i < required_1.length; _i++) {\n        var param = required_1[_i];\n\n        if (chain[param] === undefined) {\n          throw new Error(\"Missing required chain parameter: \" + param);\n        }\n      }\n\n      this._chainParams = chain;\n    } else {\n      throw new Error('Wrong input format');\n    }\n\n    return this._chainParams;\n  };\n  /**\n   * Sets the hardfork to get params for\n   * @param hardfork String identifier ('byzantium')\n   */\n\n\n  Common.prototype.setHardfork = function (hardfork) {\n    if (!this._isSupportedHardfork(hardfork)) {\n      throw new Error(\"Hardfork \" + hardfork + \" not set as supported in supportedHardforks\");\n    }\n\n    var changed = false;\n\n    for (var _i = 0, hardforkChanges_1 = hardforks_1.hardforks; _i < hardforkChanges_1.length; _i++) {\n      var hfChanges = hardforkChanges_1[_i];\n\n      if (hfChanges[0] === hardfork) {\n        this._hardfork = hardfork;\n        changed = true;\n      }\n    }\n\n    if (!changed) {\n      throw new Error(\"Hardfork with name \" + hardfork + \" not supported\");\n    }\n  };\n  /**\n   * Internal helper function to choose between hardfork set and hardfork provided as param\n   * @param hardfork Hardfork given to function as a parameter\n   * @returns Hardfork chosen to be used\n   */\n\n\n  Common.prototype._chooseHardfork = function (hardfork, onlySupported) {\n    onlySupported = onlySupported === undefined ? true : onlySupported;\n\n    if (!hardfork) {\n      if (!this._hardfork) {\n        throw new Error('Method called with neither a hardfork set nor provided by param');\n      } else {\n        hardfork = this._hardfork;\n      }\n    } else if (onlySupported && !this._isSupportedHardfork(hardfork)) {\n      throw new Error(\"Hardfork \" + hardfork + \" not set as supported in supportedHardforks\");\n    }\n\n    return hardfork;\n  };\n  /**\n   * Internal helper function, returns the params for the given hardfork for the chain set\n   * @param hardfork Hardfork name\n   * @returns Dictionary with hardfork params\n   */\n\n\n  Common.prototype._getHardfork = function (hardfork) {\n    var hfs = this.hardforks();\n\n    for (var _i = 0, hfs_1 = hfs; _i < hfs_1.length; _i++) {\n      var hf = hfs_1[_i];\n      if (hf['name'] === hardfork) return hf;\n    }\n\n    throw new Error(\"Hardfork \" + hardfork + \" not defined for chain \" + this.chainName());\n  };\n  /**\n   * Internal helper function to check if a hardfork is set to be supported by the library\n   * @param hardfork Hardfork name\n   * @returns True if hardfork is supported\n   */\n\n\n  Common.prototype._isSupportedHardfork = function (hardfork) {\n    if (this._supportedHardforks.length > 0) {\n      for (var _i = 0, _a = this._supportedHardforks; _i < _a.length; _i++) {\n        var supportedHf = _a[_i];\n        if (hardfork === supportedHf) return true;\n      }\n    } else {\n      return true;\n    }\n\n    return false;\n  };\n  /**\n   * Returns the parameter corresponding to a hardfork\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow', 'casper', 'sharding')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param hardfork Hardfork name, optional if hardfork set\n   */\n\n\n  Common.prototype.param = function (topic, name, hardfork) {\n    hardfork = this._chooseHardfork(hardfork);\n    var value;\n\n    for (var _i = 0, hardforkChanges_2 = hardforks_1.hardforks; _i < hardforkChanges_2.length; _i++) {\n      var hfChanges = hardforkChanges_2[_i];\n\n      if (!hfChanges[1][topic]) {\n        throw new Error(\"Topic \" + topic + \" not defined\");\n      }\n\n      if (hfChanges[1][topic][name] !== undefined) {\n        value = hfChanges[1][topic][name].v;\n      }\n\n      if (hfChanges[0] === hardfork) break;\n    }\n\n    if (value === undefined) {\n      throw new Error(topic + \" value for \" + name + \" not found\");\n    }\n\n    return value;\n  };\n  /**\n   * Returns a parameter for the hardfork active on block number\n   * @param topic Parameter topic\n   * @param name Parameter name\n   * @param blockNumber Block number\n   */\n\n\n  Common.prototype.paramByBlock = function (topic, name, blockNumber) {\n    var activeHfs = this.activeHardforks(blockNumber);\n    var hardfork = activeHfs[activeHfs.length - 1]['name'];\n    return this.param(topic, name, hardfork);\n  };\n  /**\n   * Checks if set or provided hardfork is active on block number\n   * @param hardfork Hardfork name or null (for HF set)\n   * @param blockNumber\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if HF is active on block number\n   */\n\n\n  Common.prototype.hardforkIsActiveOnBlock = function (hardfork, blockNumber, opts) {\n    opts = opts !== undefined ? opts : {};\n    var onlySupported = opts.onlySupported === undefined ? false : opts.onlySupported;\n    hardfork = this._chooseHardfork(hardfork, onlySupported);\n    var hfBlock = this.hardforkBlock(hardfork);\n    if (hfBlock !== null && blockNumber >= hfBlock) return true;\n    return false;\n  };\n  /**\n   * Alias to hardforkIsActiveOnBlock when hardfork is set\n   * @param blockNumber\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if HF is active on block number\n   */\n\n\n  Common.prototype.activeOnBlock = function (blockNumber, opts) {\n    return this.hardforkIsActiveOnBlock(null, blockNumber, opts);\n  };\n  /**\n   * Sequence based check if given or set HF1 is greater than or equal HF2\n   * @param hardfork1 Hardfork name or null (if set)\n   * @param hardfork2 Hardfork name\n   * @param opts Hardfork options\n   * @returns True if HF1 gte HF2\n   */\n\n\n  Common.prototype.hardforkGteHardfork = function (hardfork1, hardfork2, opts) {\n    opts = opts !== undefined ? opts : {};\n    var onlyActive = opts.onlyActive === undefined ? false : opts.onlyActive;\n    hardfork1 = this._chooseHardfork(hardfork1, opts.onlySupported);\n    var hardforks;\n\n    if (onlyActive) {\n      hardforks = this.activeHardforks(null, opts);\n    } else {\n      hardforks = this.hardforks();\n    }\n\n    var posHf1 = -1,\n        posHf2 = -1;\n    var index = 0;\n\n    for (var _i = 0, hardforks_2 = hardforks; _i < hardforks_2.length; _i++) {\n      var hf = hardforks_2[_i];\n      if (hf['name'] === hardfork1) posHf1 = index;\n      if (hf['name'] === hardfork2) posHf2 = index;\n      index += 1;\n    }\n\n    return posHf1 >= posHf2;\n  };\n  /**\n   * Alias to hardforkGteHardfork when hardfork is set\n   * @param hardfork Hardfork name\n   * @param opts Hardfork options\n   * @returns True if hardfork set is greater than hardfork provided\n   */\n\n\n  Common.prototype.gteHardfork = function (hardfork, opts) {\n    return this.hardforkGteHardfork(null, hardfork, opts);\n  };\n  /**\n   * Checks if given or set hardfork is active on the chain\n   * @param hardfork Hardfork name, optional if HF set\n   * @param opts Hardfork options (onlyActive unused)\n   * @returns True if hardfork is active on the chain\n   */\n\n\n  Common.prototype.hardforkIsActiveOnChain = function (hardfork, opts) {\n    opts = opts !== undefined ? opts : {};\n    var onlySupported = opts.onlySupported === undefined ? false : opts.onlySupported;\n    hardfork = this._chooseHardfork(hardfork, onlySupported);\n\n    for (var _i = 0, _a = this.hardforks(); _i < _a.length; _i++) {\n      var hf = _a[_i];\n      if (hf['name'] === hardfork && hf['block'] !== null) return true;\n    }\n\n    return false;\n  };\n  /**\n   * Returns the active hardfork switches for the current chain\n   * @param blockNumber up to block if provided, otherwise for the whole chain\n   * @param opts Hardfork options (onlyActive unused)\n   * @return Array with hardfork arrays\n   */\n\n\n  Common.prototype.activeHardforks = function (blockNumber, opts) {\n    opts = opts !== undefined ? opts : {};\n    var activeHardforks = [];\n    var hfs = this.hardforks();\n\n    for (var _i = 0, hfs_2 = hfs; _i < hfs_2.length; _i++) {\n      var hf = hfs_2[_i];\n      if (hf['block'] === null) continue;\n      if (blockNumber !== undefined && blockNumber !== null && blockNumber < hf['block']) break;\n      if (opts.onlySupported && !this._isSupportedHardfork(hf['name'])) continue;\n      activeHardforks.push(hf);\n    }\n\n    return activeHardforks;\n  };\n  /**\n   * Returns the latest active hardfork name for chain or block or throws if unavailable\n   * @param blockNumber up to block if provided, otherwise for the whole chain\n   * @param opts Hardfork options (onlyActive unused)\n   * @return Hardfork name\n   */\n\n\n  Common.prototype.activeHardfork = function (blockNumber, opts) {\n    opts = opts !== undefined ? opts : {};\n    var activeHardforks = this.activeHardforks(blockNumber, opts);\n\n    if (activeHardforks.length > 0) {\n      return activeHardforks[activeHardforks.length - 1]['name'];\n    } else {\n      throw new Error(\"No (supported) active hardfork found\");\n    }\n  };\n  /**\n   * Returns the hardfork change block for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number\n   */\n\n\n  Common.prototype.hardforkBlock = function (hardfork) {\n    hardfork = this._chooseHardfork(hardfork, false);\n    return this._getHardfork(hardfork)['block'];\n  };\n  /**\n   * True if block number provided is the hardfork (given or set) change block of the current chain\n   * @param blockNumber Number of the block to check\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns True if blockNumber is HF block\n   */\n\n\n  Common.prototype.isHardforkBlock = function (blockNumber, hardfork) {\n    hardfork = this._chooseHardfork(hardfork, false);\n\n    if (this.hardforkBlock(hardfork) === blockNumber) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  /**\n   * Provide the consensus type for the hardfork set or provided as param\n   * @param hardfork Hardfork name, optional if hardfork set\n   * @returns Consensus type (e.g. 'pow', 'poa')\n   */\n\n\n  Common.prototype.consensus = function (hardfork) {\n    hardfork = this._chooseHardfork(hardfork);\n    return this._getHardfork(hardfork)['consensus'];\n  };\n  /**\n   * Provide the finality type for the hardfork set or provided as param\n   * @param {String} hardfork Hardfork name, optional if hardfork set\n   * @returns {String} Finality type (e.g. 'pos', null of no finality)\n   */\n\n\n  Common.prototype.finality = function (hardfork) {\n    hardfork = this._chooseHardfork(hardfork);\n    return this._getHardfork(hardfork)['finality'];\n  };\n  /**\n   * Returns the Genesis parameters of current chain\n   * @returns Genesis dictionary\n   */\n\n\n  Common.prototype.genesis = function () {\n    return this._chainParams['genesis'];\n  };\n  /**\n   * Returns the hardforks for current chain\n   * @returns {Array} Array with arrays of hardforks\n   */\n\n\n  Common.prototype.hardforks = function () {\n    return this._chainParams['hardforks'];\n  };\n  /**\n   * Returns bootstrap nodes for the current chain\n   * @returns {Dictionary} Dict with bootstrap nodes\n   */\n\n\n  Common.prototype.bootstrapNodes = function () {\n    return this._chainParams['bootstrapNodes'];\n  };\n  /**\n   * Returns the hardfork set\n   * @returns Hardfork name\n   */\n\n\n  Common.prototype.hardfork = function () {\n    return this._hardfork;\n  };\n  /**\n   * Returns the Id of current chain\n   * @returns chain Id\n   */\n\n\n  Common.prototype.chainId = function () {\n    return this._chainParams['chainId'];\n  };\n  /**\n   * Returns the name of current chain\n   * @returns chain name (lower case)\n   */\n\n\n  Common.prototype.chainName = function () {\n    return chains_1.chains['names'][this.chainId()] || this._chainParams['name'];\n  };\n  /**\n   * Returns the Id of current network\n   * @returns network Id\n   */\n\n\n  Common.prototype.networkId = function () {\n    return this._chainParams['networkId'];\n  };\n\n  return Common;\n}();\n\nexports.default = Common;"],"sourceRoot":""}