{"version":3,"sources":["../node_modules/bnc-onboard-staging/dist/esm/fortmatic-ff0b96b7.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","options","apiKey","networkId","preferred","label","iconSrc","name","svg","wallet","_wallet","mark","_callee2","helpers","_yield$import","Fortmatic","instance","provider","BigNumber","getAddress","enabled","wrap","_context2","prev","next","sent","getProvider","abrupt","connect","user","login","res","disconnect","logout","address","get","network","balance","_get","_callee","_context","getBalances","crypto_amount","times","toString","stop","dashboard","settings","_x","type","desktop","mobile"],"mappings":"0IAAA,6DAEA,SAASA,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,MACjB,MAAOC,GAEP,YADAP,EAAOO,GAILF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,GAIvC,SAASS,EAAkBC,GACzB,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,GAGlE,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,GAGnEjB,OAAMkB,OAqHG,UAzGf,SAAmBC,GACjB,IAAIC,EAASD,EAAQC,OACjBC,EAAYF,EAAQE,UACpBC,EAAYH,EAAQG,UACpBC,EAAQJ,EAAQI,MAChBC,EAAUL,EAAQK,QAEtB,MAAO,CACLC,KAAMF,GAAS,YACfG,IAHQP,EAAQO,KARA,6iBAYhBF,QAASA,EACTG,OAAQ,WACN,IAAIC,EAAUlB,EAAgC,IAAoBmB,MAAK,SAASC,EAASC,GACvF,IAAIC,EAAeC,EAAWC,EAAUC,EAAUC,EAAWC,EAAYC,EAEzE,OAAO,IAAoBC,MAAK,SAAmBC,GACjD,OACE,OAAQA,EAAUC,KAAOD,EAAUE,MACjC,KAAK,EAEH,OADAF,EAAUE,KAAO,EACV,qCAET,KAAK,EAMH,OALAV,EAAgBQ,EAAUG,KAC1BV,EAAYD,EAAuB,QACnCE,EAAW,IAAID,EAAUb,EAAsB,IAAdC,OAAkBH,EAAY,YAAYG,IAC3Ec,EAAWD,EAASU,cACpBR,EAAYL,EAAQK,UAAWC,EAAaN,EAAQM,WAC7CG,EAAUK,OAAO,SAAU,CAChCV,SAAUA,EACVD,SAAUA,EACV,UAAa,CACXT,KAAM,YACNqB,QAAS,WACP,OAAOZ,EAASa,KAAKC,QAAQvC,MAAK,SAAUwC,GAE1C,OADAX,GAAU,EACHW,MAGXC,WAAY,WACV,OAAOhB,EAASa,KAAKI,UAEvBC,QAAS,CACPC,IAAK,WACH,OAAOf,EAAUD,EAAWF,GAAY3B,QAAQV,YAGpDwD,QAAS,CACPD,IAAK,WACH,OAAO7C,QAAQV,QAAQuB,KAG3BkC,QAAS,CACPF,IAAK,WACH,IAAIG,EAAO9C,EAAgC,IAAoBmB,MAAK,SAAS4B,IAC3E,OAAO,IAAoBlB,MAAK,SAAkBmB,GAChD,OACE,OAAQA,EAASjB,KAAOiB,EAAShB,MAC/B,KAAK,EACH,OAAOgB,EAASb,OAAO,SAAUP,GAAWJ,EAASa,KAAKY,cAAclD,MAAK,SAAUwC,GACrF,OAAOA,EAAI,GAAKb,EAAUa,EAAI,GAAGW,eAAeC,MAAMzB,EAAU,wBAAwB0B,SAAS,IAAM,SAG3G,KAAK,EACL,IAAK,MACH,OAAOJ,EAASK,UAGrBN,OAOL,OAJA,WACE,OAAOD,EAAKxC,MAAMH,KAAME,YAnBvB,IAyBPiD,UAAW,WACT,OAAO9B,EAASa,KAAKkB,eAK7B,KAAK,EACL,IAAK,MACH,OAAOzB,EAAUuB,UAGtBjC,OAOL,OAJA,SAAgBoC,GACd,OAAOtC,EAAQZ,MAAMH,KAAME,YAlFvB,GAuFRoD,KAAM,MACNC,SAAS,EACTC,QAAQ,EACR/C,UAAWA","file":"static/js/132.052fb449.chunk.js","sourcesContent":["import _regeneratorRuntime from \"/Users/sora/keystone/react-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nimport 'regenerator-runtime/runtime';\nimport { n as networkName } from './onboard-2a8111d2.js';\nimport 'bignumber.js';\nimport 'bnc-sdk';\nimport 'bowser';\nvar fortmaticIcon = \"\\n  <svg \\n    height=\\\"40\\\" \\n    viewBox=\\\"0 0 40 40\\\" \\n    width=\\\"40\\\" \\n    xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n  >\\n    <path d=\\\"m2744.99995 1155h9.99997 10.00008v9.98139h-10.00008-9.99997-9.99998v9.9814.64001 9.28323.05815 9.9234h-9.99997v-9.9234-.05815-9.28323-.64001-9.9814-9.98139h9.99997zm9.99961 29.88552h-9.94167v-9.92324h19.93595v10.27235c0 2.55359-1.01622 5.00299-2.82437 6.80909-1.80867 1.8061-4.26182 2.82181-6.82018 2.82335h-.34973z\\\" \\n      fill=\\\"#617bff\\\" \\n      fill-rule=\\\"evenodd\\\" \\n      transform=\\\"translate(-2725 -1155)\\\"/>\\n  </svg>\\n\";\n\nfunction fortmatic(options) {\n  var apiKey = options.apiKey,\n      networkId = options.networkId,\n      preferred = options.preferred,\n      label = options.label,\n      iconSrc = options.iconSrc,\n      svg = options.svg;\n  return {\n    name: label || 'Fortmatic',\n    svg: svg || fortmaticIcon,\n    iconSrc: iconSrc,\n    wallet: function () {\n      var _wallet = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(helpers) {\n        var _yield$import, Fortmatic, instance, provider, BigNumber, getAddress, enabled;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return import('fortmatic');\n\n              case 2:\n                _yield$import = _context2.sent;\n                Fortmatic = _yield$import[\"default\"];\n                instance = new Fortmatic(apiKey, networkId === 1 ? undefined : networkName(networkId));\n                provider = instance.getProvider();\n                BigNumber = helpers.BigNumber, getAddress = helpers.getAddress;\n                return _context2.abrupt(\"return\", {\n                  provider: provider,\n                  instance: instance,\n                  \"interface\": {\n                    name: 'Fortmatic',\n                    connect: function connect() {\n                      return instance.user.login().then(function (res) {\n                        enabled = true;\n                        return res;\n                      });\n                    },\n                    disconnect: function disconnect() {\n                      return instance.user.logout();\n                    },\n                    address: {\n                      get: function get() {\n                        return enabled ? getAddress(provider) : Promise.resolve();\n                      }\n                    },\n                    network: {\n                      get: function get() {\n                        return Promise.resolve(networkId);\n                      }\n                    },\n                    balance: {\n                      get: function () {\n                        var _get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                          return _regeneratorRuntime.wrap(function _callee$(_context) {\n                            while (1) {\n                              switch (_context.prev = _context.next) {\n                                case 0:\n                                  return _context.abrupt(\"return\", enabled && instance.user.getBalances().then(function (res) {\n                                    return res[0] ? BigNumber(res[0].crypto_amount).times(BigNumber('1000000000000000000')).toString(10) : null;\n                                  }));\n\n                                case 1:\n                                case \"end\":\n                                  return _context.stop();\n                              }\n                            }\n                          }, _callee);\n                        }));\n\n                        function get() {\n                          return _get.apply(this, arguments);\n                        }\n\n                        return get;\n                      }()\n                    },\n                    dashboard: function dashboard() {\n                      return instance.user.settings();\n                    }\n                  }\n                });\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function wallet(_x) {\n        return _wallet.apply(this, arguments);\n      }\n\n      return wallet;\n    }(),\n    type: 'sdk',\n    desktop: true,\n    mobile: true,\n    preferred: preferred\n  };\n}\n\nexport default fortmatic;"],"sourceRoot":""}