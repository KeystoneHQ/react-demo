{"version":3,"sources":["signer.js","services.js","App.js","index.js"],"names":["UncheckedJsonRpcSigner","signer","ethers","utils","defineReadOnly","provider","this","getAddress","transaction","sendUncheckedTransaction","then","hash","nonce","gasLimit","gasPrice","data","value","chainId","confirmations","from","wait","waitForTransaction","Signer","getSigner","rpcUrl","apiUrl","process","REACT_APP_API_URL","staging","REACT_APP_STAGING","dappId","window","innerWidth","VConsole","internalTransferContract","internalTransferABI","inputs","internalType","name","type","outputs","stateMutability","App","useState","address","setAddress","network","setNetwork","balance","setBalance","wallet","setWallet","onboard","setOnboard","notify","setNotify","darkMode","setDarkMode","desktopPosition","setDesktopPosition","mobilePosition","setMobilePosition","toAddress","setToAddress","readyToTransact","a","walletSelect","walletCheck","ready","sendHash","alert","sendTransaction","to","emitter","on","onclick","open","console","log","sendInternalTransaction","internalTransfer","txDetails","tx","getGasPrice","res","toString","estimateGas","getState","useEffect","subscriptions","ethersProvider","providers","Web3Provider","Contract","localStorage","setItem","stagingOnboard","Onboard","hideBranding","networkId","wallets","walletName","appUrl","email","infuraKey","appName","apiKey","disableNotifications","checkName","minimumBalance","stagingNotify","Notify","onerror","error","message","previouslySelectedWallet","getItem","className","Number","id","networkName","onClick","walletReset","dashboard","accountSelect","style","display","flexDirection","alignItems","marginBottom","padding","border","borderRadius","marginLeft","width","placeholder","onChange","e","target","account","unsubscribe","update","notification","eventCode","setTimeout","background","color","config","position","bottom","left","version","dependencies","slice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.558cf3b1.chunk.js","sourcesContent":["import { ethers } from 'ethers'\n\nclass UncheckedJsonRpcSigner extends ethers.Signer {\n  constructor(signer) {\n    super()\n    ethers.utils.defineReadOnly(this, 'signer', signer)\n    ethers.utils.defineReadOnly(this, 'provider', signer.provider)\n  }\n\n  getAddress() {\n    return this.signer.getAddress()\n  }\n\n  sendTransaction(transaction) {\n    return this.signer.sendUncheckedTransaction(transaction).then(hash => ({\n      hash,\n      nonce: null,\n      gasLimit: null,\n      gasPrice: null,\n      data: null,\n      value: null,\n      chainId: null,\n      confirmations: 0,\n      from: null,\n      wait: confirmations =>\n        this.provider.waitForTransaction(hash, confirmations)\n    }))\n  }\n}\n\nfunction getSigner(provider) {\n  return new UncheckedJsonRpcSigner(provider.getSigner())\n}\n\nexport default getSigner\n","import stagingOnboard from 'bnc-onboard-staging'\nimport stagingNotify from 'bnc-notify-staging'\nimport Notify from 'bnc-notify'\nimport Onboard from 'bnc-onboard'\n\nconst networkId = 4\nconst rpcUrl = 'https://rinkeby.infura.io/v3/8f97d231c89b42b088f7f8e4acb31ea8'\nconst apiUrl = process.env.REACT_APP_API_URL\nconst staging = process.env.REACT_APP_STAGING\nconst dappId = '12153f55-f29e-4f11-aa07-90f10da5d778'\n\nexport function initOnboard(subscriptions) {\n  const onboard = staging ? stagingOnboard : Onboard\n  return onboard({\n    dappId,\n    hideBranding: false,\n    networkId,\n    apiUrl,\n    // darkMode: true,\n    subscriptions,\n    walletSelect: {\n      wallets: [\n        { walletName: 'detectedwallet' },\n        { walletName: 'metamask' },\n        {\n          walletName: 'trezor',\n          appUrl: 'https://reactdemo.blocknative.com',\n          email: 'aaron@blocknative.com',\n          rpcUrl\n        },\n        {\n          walletName: 'ledger',\n          rpcUrl\n        },\n        {\n          walletName: 'walletConnect',\n          infuraKey: 'cea9deb6467748b0b81b920b005c10c1'\n        },\n        { walletName: 'cobovault', appName: 'React Demo', rpcUrl },\n        { walletName: 'keystone', appName: 'React Demo', rpcUrl },\n        {\n          walletName: 'lattice',\n          appName: 'Onboard Demo',\n          rpcUrl\n        },\n        { walletName: 'coinbase' },\n        { walletName: 'status' },\n        { walletName: 'walletLink', rpcUrl },\n        {\n          walletName: 'portis',\n          apiKey: 'b2b7586f-2b1e-4c30-a7fb-c2d1533b153b'\n        },\n        { walletName: 'fortmatic', apiKey: 'pk_test_886ADCAB855632AA' },\n        { walletName: 'torus' },\n        { walletName: 'trust', rpcUrl },\n        { walletName: 'opera' },\n        { walletName: 'operaTouch' },\n        { walletName: 'imToken', rpcUrl },\n        { walletName: 'meetone' },\n        { walletName: 'mykey', rpcUrl },\n        { walletName: 'wallet.io', rpcUrl },\n        { walletName: 'huobiwallet', rpcUrl },\n        { walletName: 'hyperpay' },\n        { walletName: 'atoken' },\n        { walletName: 'liquality' },\n        { walletName: 'frame' },\n        { walletName: 'tokenpocket', rpcUrl },\n        { walletName: 'authereum', disableNotifications: true },\n        { walletName: 'ownbit' },\n        { walletName: 'gnosis' },\n        { walletName: 'bitpie' },\n        { walletName: 'xdefi' },\n        { walletName: 'keepkey', rpcUrl }\n      ]\n    },\n    walletCheck: [\n      { checkName: 'derivationPath' },\n      { checkName: 'connect' },\n      { checkName: 'accounts' },\n      { checkName: 'network' },\n      { checkName: 'balance', minimumBalance: '100000' }\n    ]\n  })\n}\n\nexport function initNotify() {\n  const notify = staging ? stagingNotify : Notify\n  return notify({\n    dappId,\n    networkId,\n    apiUrl,\n    onerror: error => console.log(`Notify error: ${error.message}`)\n  })\n}\n","import React, { useState, useEffect } from 'react'\nimport { ethers } from 'ethers'\nimport VConsole from 'vconsole'\nimport getSigner from './signer'\nimport { initOnboard, initNotify } from './services'\nimport { version, dependencies } from '../package.json'\n\nimport './App.css'\n\nconst staging = process.env.REACT_APP_STAGING\n\nif (window.innerWidth < 700) {\n  new VConsole()\n}\n\nlet provider\n\nconst internalTransferABI = [\n  {\n    inputs: [\n      {\n        internalType: 'address payable',\n        name: 'to',\n        type: 'address'\n      }\n    ],\n    name: 'internalTransfer',\n    outputs: [],\n    stateMutability: 'payable',\n    type: 'function'\n  }\n]\n\nlet internalTransferContract\n\nfunction App() {\n  const [address, setAddress] = useState(null)\n  const [network, setNetwork] = useState(null)\n  const [balance, setBalance] = useState(null)\n  const [wallet, setWallet] = useState({})\n\n  const [onboard, setOnboard] = useState(null)\n  const [notify, setNotify] = useState(null)\n\n  const [darkMode, setDarkMode] = useState(false)\n  const [desktopPosition, setDesktopPosition] = useState('bottomRight')\n  const [mobilePosition, setMobilePosition] = useState('top')\n\n  const [toAddress, setToAddress] = useState('')\n\n  useEffect(() => {\n    const onboard = initOnboard({\n      address: setAddress,\n      network: setNetwork,\n      balance: setBalance,\n      wallet: wallet => {\n        if (wallet.provider) {\n          setWallet(wallet)\n\n          const ethersProvider = new ethers.providers.Web3Provider(\n            wallet.provider\n          )\n\n          provider = ethersProvider\n\n          internalTransferContract = new ethers.Contract(\n            '0xb8c12850827ded46b9ded8c1b6373da0c4d60370',\n            internalTransferABI,\n            getSigner(ethersProvider)\n          )\n\n          window.localStorage.setItem('selectedWallet', wallet.name)\n        } else {\n          provider = null\n          setWallet({})\n        }\n      }\n    })\n\n    setOnboard(onboard)\n\n    setNotify(initNotify())\n  }, [])\n\n  useEffect(() => {\n    const previouslySelectedWallet = window.localStorage.getItem(\n      'selectedWallet'\n    )\n\n    if (previouslySelectedWallet && onboard) {\n      onboard.walletSelect(previouslySelectedWallet)\n    }\n  }, [onboard])\n\n  async function readyToTransact() {\n    if (!provider) {\n      const walletSelected = await onboard.walletSelect()\n      if (!walletSelected) return false\n    }\n\n    const ready = await onboard.walletCheck()\n    return ready\n  }\n\n  async function sendHash() {\n    if (!toAddress) {\n      alert('An Ethereum address to send Eth to is required.')\n      return\n    }\n\n    const signer = getSigner(provider)\n\n    const { hash } = await signer.sendTransaction({\n      to: toAddress,\n      value: 1000000000000000\n    })\n\n    const { emitter } = notify.hash(hash)\n\n    emitter.on('txPool', transaction => {\n      return {\n        // message: `Your transaction is pending, click <a href=\"https://rinkeby.etherscan.io/tx/${transaction.hash}\" rel=\"noopener noreferrer\" target=\"_blank\">here</a> for more info.`,\n        // or you could use onclick for when someone clicks on the notification itself\n        onclick: () =>\n          window.open(`https://rinkeby.etherscan.io/tx/${transaction.hash}`)\n      }\n    })\n\n    emitter.on('txSent', console.log)\n    emitter.on('txConfirmed', console.log)\n    emitter.on('txSpeedUp', console.log)\n    emitter.on('txCancel', console.log)\n    emitter.on('txFailed', console.log)\n\n  }\n\n  async function sendInternalTransaction() {\n    if (!toAddress) {\n      alert('An Ethereum address to send Eth to is required.')\n      return\n    }\n\n    const { hash } = await internalTransferContract.internalTransfer(\n      toAddress,\n      {\n        value: 1000000000000000\n      }\n    )\n\n    const { emitter } = notify.hash(hash)\n\n    emitter.on('txSent', console.log)\n    emitter.on('txPool', console.log)\n    emitter.on('txConfirmed', console.log)\n    emitter.on('txSpeedUp', console.log)\n    emitter.on('txCancel', console.log)\n    emitter.on('txFailed', console.log)\n  }\n\n  async function sendTransaction() {\n    if (!toAddress) {\n      alert('An Ethereum address to send Eth to is required.')\n    }\n\n    const signer = getSigner(provider)\n\n    const txDetails = {\n      to: toAddress,\n      value: 1000000000000000\n    }\n\n    const sendTransaction = () =>\n      signer.sendTransaction(txDetails).then(tx => tx.hash)\n\n    const gasPrice = () => provider.getGasPrice().then(res => res.toString())\n\n    const estimateGas = () =>\n      provider.estimateGas(txDetails).then(res => res.toString())\n\n    const { emitter } = await notify.transaction({\n      sendTransaction,\n      gasPrice,\n      estimateGas,\n      balance: onboard.getState().balance,\n      txDetails\n    })\n\n    emitter.on('txRequest', console.log)\n    emitter.on('nsfFail', console.log)\n    emitter.on('txRepeat', console.log)\n    emitter.on('txAwaitingApproval', console.log)\n    emitter.on('txConfirmReminder', console.log)\n    emitter.on('txSendFail', console.log)\n    emitter.on('txError', console.log)\n    emitter.on('txUnderPriced', console.log)\n    emitter.on('txSent', console.log)\n    emitter.on('txPool', console.log)\n    emitter.on('txConfirmed', console.log)\n    emitter.on('txSpeedUp', console.log)\n    emitter.on('txCancel', console.log)\n    emitter.on('txFailed', console.log)\n  }\n\n  return onboard && notify ? (\n    <main>\n      <header className=\"user-info\">\n        {address && <span>{address}</span>}\n        {balance != null && (\n          <span>\n            {Number(balance) > 0 ? balance / 1000000000000000000 : balance} ETH\n          </span>\n        )}\n        {network && <span>{networkName(network)} network</span>}\n      </header>\n      <section className=\"main\">\n        <div className=\"container\">\n          <h2>Onboarding Users with Onboard</h2>\n          <div>\n            {!wallet.provider && (\n              <button\n                className=\"bn-demo-button\"\n                onClick={() => {\n                  onboard.walletSelect()\n                }}\n              >\n                Select a Wallet\n              </button>\n            )}\n\n            {wallet.provider && (\n              <button className=\"bn-demo-button\" onClick={onboard.walletCheck}>\n                Wallet Checks\n              </button>\n            )}\n\n            {wallet.provider && (\n              <button className=\"bn-demo-button\" onClick={onboard.walletSelect}>\n                Switch Wallets\n              </button>\n            )}\n\n            {wallet.provider && (\n              <button className=\"bn-demo-button\" onClick={onboard.walletReset}>\n                Reset Wallet State\n              </button>\n            )}\n            {wallet.provider && wallet.dashboard && (\n              <button className=\"bn-demo-button\" onClick={wallet.dashboard}>\n                Open Wallet Dashboard\n              </button>\n            )}\n            {wallet.provider && wallet.type === 'hardware' && address && (\n              <button\n                className=\"bn-demo-button\"\n                onClick={onboard.accountSelect}\n              >\n                Switch Account\n              </button>\n            )}\n          </div>\n        </div>\n        <div className=\"container\">\n          <h2>Transaction Notifications with Notify</h2>\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'flex-start',\n              marginBottom: '1rem'\n            }}\n          >\n            <div style={{ marginBottom: '1rem' }}>\n              <label>Send 0.001 Rinkeby Eth to:</label>\n              <input\n                type=\"text\"\n                style={{\n                  padding: '0.5rem',\n                  border: 'none',\n                  borderRadius: '10px',\n                  marginLeft: '0.5rem',\n                  width: '18rem'\n                }}\n                value={toAddress}\n                placeholder=\"address\"\n                onChange={e => setToAddress(e.target.value)}\n              />\n            </div>\n            <div>\n              <button\n                className=\"bn-demo-button\"\n                onClick={async () => {\n                  const ready = await readyToTransact()\n                  if (!ready) return\n                  sendHash()\n                }}\n              >\n                Send\n              </button>\n              with in-flight notifications\n            </div>\n            <div>\n              <button\n                className=\"bn-demo-button\"\n                onClick={async () => {\n                  const ready = await readyToTransact()\n                  if (!ready) return\n                  sendTransaction()\n                }}\n              >\n                Send\n              </button>\n              with pre-flight and in-flight notifications\n            </div>\n            <div>\n              <button\n                className=\"bn-demo-button\"\n                onClick={async () => {\n                  const ready = await readyToTransact()\n                  if (!ready) return\n                  sendInternalTransaction()\n                }}\n              >\n                Send\n              </button>\n              via a internal transaction\n            </div>\n          </div>\n          <div>\n            <button\n              className=\"bn-demo-button\"\n              onClick={async () => {\n                if (!address) {\n                  await readyToTransact()\n                }\n\n                address && notify.account(address)\n              }}\n            >\n              Watch Current Account\n            </button>\n            <button\n              className=\"bn-demo-button\"\n              onClick={async () => {\n                if (!address) {\n                  await readyToTransact()\n                }\n\n                address && notify.unsubscribe(address)\n              }}\n            >\n              Un-watch Current Account\n            </button>\n            <button\n              className=\"bn-demo-button\"\n              onClick={() => {\n                const { update } = notify.notification({\n                  eventCode: 'dbUpdate',\n                  type: 'pending',\n                  message: 'This is a custom notification triggered by the dapp'\n                })\n                setTimeout(\n                  () =>\n                    update({\n                      eventCode: 'dbUpdateSuccess',\n                      message: 'Updated status for custom notification',\n                      type: 'success'\n                    }),\n                  4000\n                )\n              }}\n            >\n              Custom Notification\n            </button>\n          </div>\n        </div>\n        <div className=\"container\">\n          <h3>UI Settings</h3>\n          <button\n            className=\"bn-demo-button\"\n            style={{\n              background: darkMode ? '#ab47bc' : 'white',\n              color: darkMode ? 'white' : '#4a90e2'\n            }}\n            onClick={() => {\n              setDarkMode(true)\n              notify.config({ darkMode: true })\n              onboard.config({ darkMode: true })\n            }}\n          >\n            Dark Mode\n          </button>\n          <button\n            className=\"bn-demo-button\"\n            style={{\n              background: !darkMode ? '#ab47bc' : 'white',\n              color: !darkMode ? 'white' : '#4a90e2'\n            }}\n            onClick={() => {\n              setDarkMode(false)\n              notify.config({ darkMode: false })\n              onboard.config({ darkMode: false })\n            }}\n          >\n            Light Mode\n          </button>\n          <h3>Desktop Positioning</h3>\n          <button\n            className=\"bn-demo-button\"\n            style={{\n              background: desktopPosition === 'topLeft' ? '#ab47bc' : 'white',\n              color: desktopPosition === 'topLeft' ? 'white' : '#4a90e2'\n            }}\n            onClick={() => {\n              setDesktopPosition('topLeft')\n              notify.config({ desktopPosition: 'topLeft' })\n            }}\n          >\n            Top Left\n          </button>\n          <button\n            className=\"bn-demo-button\"\n            style={{\n              background: desktopPosition === 'topRight' ? '#ab47bc' : 'white',\n              color: desktopPosition === 'topRight' ? 'white' : '#4a90e2'\n            }}\n            onClick={() => {\n              setDesktopPosition('topRight')\n              notify.config({ desktopPosition: 'topRight' })\n            }}\n          >\n            Top Right\n          </button>\n          <button\n            className=\"bn-demo-button\"\n            style={{\n              background:\n                desktopPosition === 'bottomRight' ? '#ab47bc' : 'white',\n              color: desktopPosition === 'bottomRight' ? 'white' : '#4a90e2'\n            }}\n            onClick={() => {\n              setDesktopPosition('bottomRight')\n              notify.config({ desktopPosition: 'bottomRight' })\n            }}\n          >\n            Bottom Right\n          </button>\n          <button\n            className=\"bn-demo-button\"\n            style={{\n              background:\n                desktopPosition === 'bottomLeft' ? '#ab47bc' : 'white',\n              color: desktopPosition === 'bottomLeft' ? 'white' : '#4a90e2'\n            }}\n            onClick={() => {\n              setDesktopPosition('bottomLeft')\n              notify.config({ desktopPosition: 'bottomLeft' })\n            }}\n          >\n            Bottom Left\n          </button>\n          <h3>Mobile Positioning</h3>\n          <button\n            className=\"bn-demo-button\"\n            style={{\n              background: mobilePosition === 'top' ? '#ab47bc' : 'white',\n              color: mobilePosition === 'top' ? 'white' : '#4a90e2'\n            }}\n            onClick={() => {\n              setMobilePosition('top')\n              notify.config({ mobilePosition: 'top' })\n            }}\n          >\n            Top\n          </button>\n          <button\n            className=\"bn-demo-button\"\n            style={{\n              background: mobilePosition === 'bottom' ? '#ab47bc' : 'white',\n              color: mobilePosition === 'bottom' ? 'white' : '#4a90e2'\n            }}\n            onClick={() => {\n              setMobilePosition('bottom')\n              notify.config({ mobilePosition: 'bottom' })\n            }}\n          >\n            Bottom\n          </button>\n        </div>\n      </section>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          position: 'fixed',\n          bottom: '1rem',\n          left: '1rem'\n        }}\n      >\n        <span>\n          React Demo version: <i>{staging ? 'NEXT' : version}</i>\n        </span>\n        <span>\n          Onboard version:{' '}\n          <i>{staging ? 'NEXT' : dependencies['bnc-onboard'].slice(1)}</i>\n        </span>\n        <span>\n          Notify version:{' '}\n          <i>{staging ? 'NEXT' : dependencies['bnc-notify'].slice(1)}</i>\n        </span>\n      </div>\n    </main>\n  ) : (\n    <div>Loading...</div>\n  )\n}\n\nfunction networkName(id) {\n  switch (Number(id)) {\n    case 1:\n      return 'main'\n    case 3:\n      return 'ropsten'\n    case 4:\n      return 'rinkeby'\n    case 5:\n      return 'goerli'\n    case 42:\n      return 'kovan'\n    case 100:\n      return 'xdai'\n    case 'localhost':\n      return 'localhost'\n    default:\n      return 'local'\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}