{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray.js","../../onboard/node_modules/eth-sig-util/dist/index.js","../../onboard/node_modules/eth-sig-util/node_modules/ethereumjs-util/dist/index.js","../../onboard/node_modules/eth-sig-util/node_modules/ethereumjs-util/dist/secp256k1-adapter.js","../../onboard/node_modules/eth-sig-util/node_modules/ethereumjs-util/dist/secp256k1-lib/index.js","../../onboard/node_modules/eth-sig-util/node_modules/ethereumjs-util/dist/secp256k1-lib/der.js","../../onboard/node_modules/eth-sig-util/node_modules/tweetnacl/nacl-fast.js","../../onboard/node_modules/tweetnacl-util/nacl-util.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/nonIterableRest.js","../../onboard/node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/bytes.js","../../onboard/node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/secp256k1v3-adapter.js","../../onboard/node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/hash.js","../../onboard/node_modules/ethereumjs-abi/index.js","../../onboard/node_modules/ethereumjs-abi/lib/index.js","../../onboard/node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/index.js","../../onboard/node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/secp256k1v3-lib/index.js","../../onboard/node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/secp256k1v3-lib/der.js","../../onboard/node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/constants.js","../../onboard/node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/account.js","../../onboard/node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/signature.js","../../onboard/node_modules/ethereumjs-abi/node_modules/ethereumjs-util/dist/object.js"],"names":["arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","module","exports","arr","i","_createForOfIteratorHelper","_slicedToArray","__createBinding","this","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","prototype","hasOwnProperty","call","recoverTypedSignature_v4","recoverTypedSignature","signTypedData_v4","signTypedData","recoverTypedMessage","signTypedMessage","getEncryptionPublicKey","decryptSafely","decrypt","encryptSafely","encrypt","recoverTypedSignatureLegacy","signTypedDataLegacy","typedSignatureHash","extractPublicKey","recoverPersonalSignature","personalSign","normalize","concatSig","TypedDataUtils","TYPED_MESSAGE_SCHEMA","ethUtil","ethAbi","nacl","naclUtil","type","properties","types","additionalProperties","items","name","required","primaryType","domain","message","encodeData","data","_this","useV4","arguments","length","encodedTypes","encodedValues","hashType","_step","encodeField","keccak","Error","concat","Buffer","from","lastIndexOf","parsedType","slice","typeValuePairs","map","item","rawEncode","_ref","_ref3","_iterator","s","n","done","field","_encodeField","_encodeField2","push","err","e","f","_step2","_iterator2","_field","_value","encodeType","deps","findTypeDependencies","filter","dep","sort","_step3","_iterator3","_ref5","t","join","results","_primaryType$match","match","_primaryType$match2","includes","_step4","_iterator4","_step5","_iterator5","hashStruct","sanitizeData","sanitizedData","key","assign","EIP712Domain","sign","typedData","parts","r","rSig","fromSigned","sSig","vSig","bufferToInt","rStr","padWithZeroes","toUnsigned","toString","sStr","vStr","stripHexPrefix","intToHex","addHexPrefix","privateKey","msgParams","msgHash","sig","ecsign","bufferToHex","publicKey","recoverPublicKey","sender","publicToAddress","receiverPublicKey","version","pubKeyUInt8Array","ephemeralKeyPair","box","keyPair","decodeBase64","msgParamsUInt8Array","decodeUTF8","nonce","randomBytes","nonceLength","encryptedMessage","secretKey","encodeBase64","ephemPublicKey","ciphertext","encryptedData","receiverPrivateKey","output","recieverPrivateKeyUint8Array","nacl_decodeHex","recieverEncryptionPrivateKey","fromSecretKey","decryptedMessage","open","encodeUTF8","error","toBuffer","schema","soliditySHA3","Array","fill","hash","signature","sigParams","fromRpcSig","ecrecover","getPublicKeyFor","hashPersonalMessage","number","myString","msgHex","msgBase64","input","buffer","msg","toLowerCase","hashBuffer","DEFAULT_PADDING_LENGTH","Math","pow","dataWithPadding","padding","modVal","byteLength","JSON","stringify","padLength","repeat","parse","privateKeyUint8Array","encryptionPublicKey","_typeof","Symbol","iterator","obj","constructor","_require","keccak224","keccak384","k256","keccak256","keccak512","secp256k1","assert","rlp","BN","createHash","MAX_INTEGER","TWO_POW256","KECCAK256_NULL_S","SHA3_NULL_S","KECCAK256_NULL","SHA3_NULL","KECCAK256_RLP_ARRAY_S","SHA3_RLP_ARRAY_S","KECCAK256_RLP_ARRAY","SHA3_RLP_ARRAY","KECCAK256_RLP_S","SHA3_RLP_S","KECCAK256_RLP","SHA3_RLP","zeros","bytes","allocUnsafe","zeroAddress","setLengthLeft","setLength","right","buf","copy","setLengthRight","unpad","stripZeros","a","first","isBuffer","isArray","isHexString","padToEven","intToBuffer","isBN","toArrayLike","toArray","toNumber","num","fromTwos","toTwos","bits","sha3","sha256","update","digest","ripemd160","padded","rlphash","encode","isValidPrivate","privateKeyVerify","isValidPublic","sanitize","publicKeyVerify","pubToAddress","pubKey","publicKeyConvert","privateToPublic","publicKeyCreate","importPublic","ret","recovery","prefix","senderPubKey","recover","toRpcSig","privateToAddress","isValidAddress","address","test","isZeroAddress","toChecksumAddress","parseInt","toUpperCase","isValidChecksumAddress","generateAddress","isZero","isPrecompiled","str","isHexPrefixed","isValidSignature","homestead","SECP256K1_N_DIV_2","SECP256K1_N","gt","cmp","baToJSON","ba","array","defineProperties","self","fields","raw","_fields","toJSON","label","forEach","serialize","getter","setter","allowZero","allowLess","configurable","set","default","alias","decode","d","keys","indexOf","secp256k1v3","der","Uint8Array","privateKeyExport","compressed","RangeError","privateKeyImport","privateKeyNegate","privateKeyModInverse","privateKeyTweakAdd","tweak","privateKeyTweakMul","publicKeyTweakAdd","publicKeyTweakMul","publicKeyCombine","publicKeys","signatureNormalize","signatureExport","signatureImport","signatureImportLax","sigObj","options","TypeError","signOptions","noncefn","algo","attempt","bufferAlgo","bufferData","ecdsaSign","recid","verify","ecdsaVerify","ecdsaRecover","ecdh","ecdhUnsafe","ec","EC","ecparams","curve","ucmp","point","g","mul","toPublicKey","getX","getY","bn","invm","keyFromPublic","scalar","shared","pub","x","y","alloc","isOdd","EC_PRIVKEY_EXPORT_DER_COMPRESSED","EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED","index","lenb","len","lenbyte","rlen","rindex","slen","sindex","rvalue","svalue","gf","init","Float64Array","randombytes","_0","_9","gf0","gf1","_121665","D","D2","X","Y","I","ts64","h","l","vn","xi","yi","crypto_verify_16","crypto_verify_32","crypto_core_salsa20","out","inp","c","p","u","j0","j1","j2","j3","j4","j5","j6","j7","j8","j9","j10","j11","j12","j13","j14","j15","x0","x1","x2","x3","x4","x5","x6","x7","x8","x9","x10","x11","x12","x13","x14","x15","core_salsa20","crypto_core_hsalsa20","core_hsalsa20","sigma","crypto_stream_salsa20_xor","cpos","mpos","b","z","crypto_stream_salsa20","crypto_stream","sn","crypto_stream_xor","poly1305","t0","t1","t2","t3","t4","t5","t6","t7","Uint16Array","pad","leftover","fin","crypto_onetimeauth","outpos","finish","crypto_onetimeauth_verify","hpos","crypto_secretbox","crypto_secretbox_open","set25519","car25519","floor","sel25519","q","pack25519","j","neq25519","par25519","unpack25519","A","Z","M","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","S","inv25519","pow2523","crypto_scalarmult","x32","subarray","x16","crypto_scalarmult_base","crypto_box_keypair","crypto_box_beforenm","blocks","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","hibit","h0","h1","h2","h3","h4","h5","h6","h7","h8","h9","r0","r1","r2","r3","r4","r5","r6","r7","r8","r9","mac","macpos","mask","want","crypto_box_afternm","crypto_box_open_afternm","K","crypto_hashblocks_hl","hh","hl","bh0","bh1","bh2","bh3","bh4","bh5","bh6","bh7","bl0","bl1","bl2","bl3","bl4","bl5","bl6","bl7","th","tl","wh","Int32Array","wl","ah0","ah1","ah2","ah3","ah4","ah5","ah6","ah7","al0","al1","al2","al3","al4","al5","al6","al7","pos","crypto_hash","add","cswap","pack","tx","ty","zi","scalarmult","scalarbase","crypto_sign_keypair","pk","sk","seeded","L","modL","carry","reduce","crypto_sign","sm","smlen","crypto_sign_open","chk","den","den2","den4","den6","unpackneg","checkLengths","checkArrayTypes","cleanup","lowlevel","crypto_box","crypto_box_open","crypto_secretbox_KEYBYTES","crypto_secretbox_NONCEBYTES","crypto_secretbox_ZEROBYTES","crypto_secretbox_BOXZEROBYTES","crypto_scalarmult_BYTES","crypto_scalarmult_SCALARBYTES","crypto_box_PUBLICKEYBYTES","crypto_box_SECRETKEYBYTES","crypto_box_BEFORENMBYTES","crypto_box_NONCEBYTES","crypto_box_ZEROBYTES","crypto_box_BOXZEROBYTES","crypto_sign_BYTES","crypto_sign_PUBLICKEYBYTES","crypto_sign_SECRETKEYBYTES","crypto_sign_SEEDBYTES","crypto_hash_BYTES","secretbox","keyLength","overheadLength","scalarMult","base","scalarLength","groupElementLength","before","checkBoxLengths","after","publicKeyLength","secretKeyLength","sharedKeyLength","signedMsg","tmp","mlen","detached","fromSeed","seed","seedLength","signatureLength","hashLength","setPRNG","fn","crypto","msCrypto","getRandomValues","min","root","util","validateBase64","unescape","encodeURIComponent","charCodeAt","String","fromCharCode","decodeURIComponent","escape","atob","btoa","_arr","_n","_d","_e","_s","_i","next","ethjsUtil","_a","bytes_1","utils","ABI","elementaryName","startsWith","parseTypeN","exec","parseTypeNxM","parseTypeArray","parseNumber","arg","parseSignature","args","method","split","retargs","params","encodeSingle","size","unshift","bitLength","decodeSingle","offset","parseType","rawType","decoded","subArray","memoryUsage","div","isDynamic","eventID","methodID","values","headLength","cur","rawDecode","parsed","simpleEncode","simpleDecode","solidityHexValue","bitsize","subType","replace","arraySize","arrayValues","bytesize","solidityPack","soliditySHA256","solidityRIPEMD160","fromSerpent","toSerpent","__exportStar","generateAddress2","hash_1","addr","eip1191ChainId","nonceBN","salt","initCode","fromBuf","saltBuf","initCodeBuf","calculateSigRecovery","chainId","isValidSigRecovery","homesteadOrLater","rBN","sBN","obj_1","keys_1"],"mappings":"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","file":"static/js/57.fd9444b8.chunk.js","sourcesContent":["var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/sora/keystone/react-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar _slicedToArray = require(\"/Users/sora/keystone/react-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.recoverTypedSignature_v4 = exports.recoverTypedSignature = exports.signTypedData_v4 = exports.signTypedData = exports.recoverTypedMessage = exports.signTypedMessage = exports.getEncryptionPublicKey = exports.decryptSafely = exports.decrypt = exports.encryptSafely = exports.encrypt = exports.recoverTypedSignatureLegacy = exports.signTypedDataLegacy = exports.typedSignatureHash = exports.extractPublicKey = exports.recoverPersonalSignature = exports.personalSign = exports.normalize = exports.concatSig = exports.TypedDataUtils = exports.TYPED_MESSAGE_SCHEMA = void 0;\n\nvar ethUtil = __importStar(require(\"ethereumjs-util\"));\n\nvar ethAbi = __importStar(require(\"ethereumjs-abi\"));\n\nvar nacl = __importStar(require(\"tweetnacl\"));\n\nvar naclUtil = __importStar(require(\"tweetnacl-util\"));\n\nvar TYPED_MESSAGE_SCHEMA = {\n  type: 'object',\n  properties: {\n    types: {\n      type: 'object',\n      additionalProperties: {\n        type: 'array',\n        items: {\n          type: 'object',\n          properties: {\n            name: {\n              type: 'string'\n            },\n            type: {\n              type: 'string'\n            }\n          },\n          required: ['name', 'type']\n        }\n      }\n    },\n    primaryType: {\n      type: 'string'\n    },\n    domain: {\n      type: 'object'\n    },\n    message: {\n      type: 'object'\n    }\n  },\n  required: ['types', 'primaryType', 'domain', 'message']\n};\nexports.TYPED_MESSAGE_SCHEMA = TYPED_MESSAGE_SCHEMA;\n/**\n * A collection of utility functions used for signing typed data\n */\n\nvar TypedDataUtils = {\n  /**\n   * Encodes an object by encoding and concatenating each of its members\n   *\n   * @param {string} primaryType - Root type\n   * @param {Object} data - Object to encode\n   * @param {Object} types - Type definitions\n   * @returns {Buffer} - Encoded representation of an object\n   */\n  encodeData: function encodeData(primaryType, data, types) {\n    var _this = this;\n\n    var useV4 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n    var encodedTypes = ['bytes32'];\n    var encodedValues = [this.hashType(primaryType, types)];\n\n    if (useV4) {\n      var encodeField = function encodeField(name, type, value) {\n        if (types[type] !== undefined) {\n          return ['bytes32', value == null // eslint-disable-line no-eq-null\n          ? '0x0000000000000000000000000000000000000000000000000000000000000000' : ethUtil.keccak(_this.encodeData(type, value, types, useV4))];\n        }\n\n        if (value === undefined) {\n          throw new Error(\"missing value for field \".concat(name, \" of type \").concat(type));\n        }\n\n        if (type === 'bytes') {\n          return ['bytes32', ethUtil.keccak(value)];\n        }\n\n        if (type === 'string') {\n          // convert string to buffer - prevents ethUtil from interpreting strings like '0xabcd' as hex\n          if (typeof value === 'string') {\n            value = Buffer.from(value, 'utf8');\n          }\n\n          return ['bytes32', ethUtil.keccak(value)];\n        }\n\n        if (type.lastIndexOf(']') === type.length - 1) {\n          var parsedType = type.slice(0, type.lastIndexOf('['));\n          var typeValuePairs = value.map(function (item) {\n            return encodeField(name, parsedType, item);\n          });\n          return ['bytes32', ethUtil.keccak(ethAbi.rawEncode(typeValuePairs.map(function (_ref) {\n            var _ref2 = _slicedToArray(_ref, 1),\n                t = _ref2[0];\n\n            return t;\n          }), typeValuePairs.map(function (_ref3) {\n            var _ref4 = _slicedToArray(_ref3, 2),\n                v = _ref4[1];\n\n            return v;\n          })))];\n        }\n\n        return [type, value];\n      };\n\n      var _iterator = _createForOfIteratorHelper(types[primaryType]),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var field = _step.value;\n\n          var _encodeField = encodeField(field.name, field.type, data[field.name]),\n              _encodeField2 = _slicedToArray(_encodeField, 2),\n              type = _encodeField2[0],\n              value = _encodeField2[1];\n\n          encodedTypes.push(type);\n          encodedValues.push(value);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    } else {\n      var _iterator2 = _createForOfIteratorHelper(types[primaryType]),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _field = _step2.value;\n          var _value = data[_field.name];\n\n          if (_value !== undefined) {\n            if (_field.type === 'bytes') {\n              encodedTypes.push('bytes32');\n              _value = ethUtil.keccak(_value);\n              encodedValues.push(_value);\n            } else if (_field.type === 'string') {\n              encodedTypes.push('bytes32'); // convert string to buffer - prevents ethUtil from interpreting strings like '0xabcd' as hex\n\n              if (typeof _value === 'string') {\n                _value = Buffer.from(_value, 'utf8');\n              }\n\n              _value = ethUtil.keccak(_value);\n              encodedValues.push(_value);\n            } else if (types[_field.type] !== undefined) {\n              encodedTypes.push('bytes32');\n              _value = ethUtil.keccak(this.encodeData(_field.type, _value, types, useV4));\n              encodedValues.push(_value);\n            } else if (_field.type.lastIndexOf(']') === _field.type.length - 1) {\n              throw new Error('Arrays are unimplemented in encodeData; use V4 extension');\n            } else {\n              encodedTypes.push(_field.type);\n              encodedValues.push(_value);\n            }\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n\n    return ethAbi.rawEncode(encodedTypes, encodedValues);\n  },\n\n  /**\n   * Encodes the type of an object by encoding a comma delimited list of its members\n   *\n   * @param {string} primaryType - Root type to encode\n   * @param {Object} types - Type definitions\n   * @returns {string} - Encoded representation of the type of an object\n   */\n  encodeType: function encodeType(primaryType, types) {\n    var result = '';\n    var deps = this.findTypeDependencies(primaryType, types).filter(function (dep) {\n      return dep !== primaryType;\n    });\n    deps = [primaryType].concat(deps.sort());\n\n    var _iterator3 = _createForOfIteratorHelper(deps),\n        _step3;\n\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var type = _step3.value;\n        var children = types[type];\n\n        if (!children) {\n          throw new Error(\"No type definition specified: \".concat(type));\n        }\n\n        result += \"\".concat(type, \"(\").concat(types[type].map(function (_ref5) {\n          var name = _ref5.name,\n              t = _ref5.type;\n          return \"\".concat(t, \" \").concat(name);\n        }).join(','), \")\");\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n\n    return result;\n  },\n\n  /**\n   * Finds all types within a type definition object\n   *\n   * @param {string} primaryType - Root type\n   * @param {Object} types - Type definitions\n   * @param {Array} results - current set of accumulated types\n   * @returns {Array} - Set of all types found in the type definition\n   */\n  findTypeDependencies: function findTypeDependencies(primaryType, types) {\n    var results = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n    var _primaryType$match = primaryType.match(/^[0-9A-Z_a-z]*/);\n\n    var _primaryType$match2 = _slicedToArray(_primaryType$match, 1);\n\n    primaryType = _primaryType$match2[0];\n\n    if (results.includes(primaryType) || types[primaryType] === undefined) {\n      return results;\n    }\n\n    results.push(primaryType);\n\n    var _iterator4 = _createForOfIteratorHelper(types[primaryType]),\n        _step4;\n\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var field = _step4.value;\n\n        var _iterator5 = _createForOfIteratorHelper(this.findTypeDependencies(field.type, types, results)),\n            _step5;\n\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var dep = _step5.value;\n            !results.includes(dep) && results.push(dep);\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n\n    return results;\n  },\n\n  /**\n   * Hashes an object\n   *\n   * @param {string} primaryType - Root type\n   * @param {Object} data - Object to hash\n   * @param {Object} types - Type definitions\n   * @returns {Buffer} - Hash of an object\n   */\n  hashStruct: function hashStruct(primaryType, data, types) {\n    var useV4 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n    return ethUtil.keccak(this.encodeData(primaryType, data, types, useV4));\n  },\n\n  /**\n   * Hashes the type of an object\n   *\n   * @param {string} primaryType - Root type to hash\n   * @param {Object} types - Type definitions\n   * @returns {Buffer} - Hash of an object\n   */\n  hashType: function hashType(primaryType, types) {\n    return ethUtil.keccak(this.encodeType(primaryType, types));\n  },\n\n  /**\n   * Removes properties from a message object that are not defined per EIP-712\n   *\n   * @param {Object} data - typed message object\n   * @returns {Object} - typed message object with only allowed fields\n   */\n  sanitizeData: function sanitizeData(data) {\n    var sanitizedData = {};\n\n    for (var key in TYPED_MESSAGE_SCHEMA.properties) {\n      if (data[key]) {\n        sanitizedData[key] = data[key];\n      }\n    }\n\n    if ('types' in sanitizedData) {\n      sanitizedData.types = Object.assign({\n        EIP712Domain: []\n      }, sanitizedData.types);\n    }\n\n    return sanitizedData;\n  },\n\n  /**\n   * Signs a typed message as per EIP-712 and returns its keccak hash\n   *\n   * @param {Object} typedData - Types message data to sign\n   * @returns {Buffer} - keccak hash of the resulting signed message\n   */\n  sign: function sign(typedData) {\n    var useV4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    var sanitizedData = this.sanitizeData(typedData);\n    var parts = [Buffer.from('1901', 'hex')];\n    parts.push(this.hashStruct('EIP712Domain', sanitizedData.domain, sanitizedData.types, useV4));\n\n    if (sanitizedData.primaryType !== 'EIP712Domain') {\n      parts.push(this.hashStruct(sanitizedData.primaryType, sanitizedData.message, sanitizedData.types, useV4));\n    }\n\n    return ethUtil.keccak(Buffer.concat(parts));\n  }\n};\nexports.TypedDataUtils = TypedDataUtils;\n\nfunction concatSig(v, r, s) {\n  var rSig = ethUtil.fromSigned(r);\n  var sSig = ethUtil.fromSigned(s);\n  var vSig = ethUtil.bufferToInt(v);\n  var rStr = padWithZeroes(ethUtil.toUnsigned(rSig).toString('hex'), 64);\n  var sStr = padWithZeroes(ethUtil.toUnsigned(sSig).toString('hex'), 64);\n  var vStr = ethUtil.stripHexPrefix(ethUtil.intToHex(vSig));\n  return ethUtil.addHexPrefix(rStr.concat(sStr, vStr)).toString('hex');\n}\n\nexports.concatSig = concatSig;\n\nfunction normalize(input) {\n  if (!input) {\n    return undefined;\n  }\n\n  if (typeof input === 'number') {\n    var buffer = ethUtil.toBuffer(input);\n    input = ethUtil.bufferToHex(buffer);\n  }\n\n  if (typeof input !== 'string') {\n    var msg = 'eth-sig-util.normalize() requires hex string or integer input.';\n    msg += \" received \".concat(typeof input, \": \").concat(input);\n    throw new Error(msg);\n  }\n\n  return ethUtil.addHexPrefix(input.toLowerCase());\n}\n\nexports.normalize = normalize;\n\nfunction personalSign(privateKey, msgParams) {\n  var message = ethUtil.toBuffer(msgParams.data);\n  var msgHash = ethUtil.hashPersonalMessage(message);\n  var sig = ethUtil.ecsign(msgHash, privateKey);\n  var serialized = ethUtil.bufferToHex(concatSig(sig.v, sig.r, sig.s));\n  return serialized;\n}\n\nexports.personalSign = personalSign;\n\nfunction recoverPersonalSignature(msgParams) {\n  var publicKey = getPublicKeyFor(msgParams);\n  var sender = ethUtil.publicToAddress(publicKey);\n  var senderHex = ethUtil.bufferToHex(sender);\n  return senderHex;\n}\n\nexports.recoverPersonalSignature = recoverPersonalSignature;\n\nfunction extractPublicKey(msgParams) {\n  var publicKey = getPublicKeyFor(msgParams);\n  return \"0x\".concat(publicKey.toString('hex'));\n}\n\nexports.extractPublicKey = extractPublicKey;\n\nfunction externalTypedSignatureHash(typedData) {\n  var hashBuffer = typedSignatureHash(typedData);\n  return ethUtil.bufferToHex(hashBuffer);\n}\n\nexports.typedSignatureHash = externalTypedSignatureHash;\n\nfunction signTypedDataLegacy(privateKey, msgParams) {\n  var msgHash = typedSignatureHash(msgParams.data);\n  var sig = ethUtil.ecsign(msgHash, privateKey);\n  return ethUtil.bufferToHex(concatSig(sig.v, sig.r, sig.s));\n}\n\nexports.signTypedDataLegacy = signTypedDataLegacy;\n\nfunction recoverTypedSignatureLegacy(msgParams) {\n  var msgHash = typedSignatureHash(msgParams.data);\n  var publicKey = recoverPublicKey(msgHash, msgParams.sig);\n  var sender = ethUtil.publicToAddress(publicKey);\n  return ethUtil.bufferToHex(sender);\n}\n\nexports.recoverTypedSignatureLegacy = recoverTypedSignatureLegacy;\n\nfunction encrypt(receiverPublicKey, msgParams, version) {\n  switch (version) {\n    case 'x25519-xsalsa20-poly1305':\n      {\n        if (typeof msgParams.data !== 'string') {\n          throw new Error('Cannot detect secret message, message params should be of the form {data: \"secret message\"} ');\n        } // generate ephemeral keypair\n\n\n        var ephemeralKeyPair = nacl.box.keyPair(); // assemble encryption parameters - from string to UInt8\n\n        var pubKeyUInt8Array;\n\n        try {\n          pubKeyUInt8Array = naclUtil.decodeBase64(receiverPublicKey);\n        } catch (err) {\n          throw new Error('Bad public key');\n        }\n\n        var msgParamsUInt8Array = naclUtil.decodeUTF8(msgParams.data);\n        var nonce = nacl.randomBytes(nacl.box.nonceLength); // encrypt\n\n        var encryptedMessage = nacl.box(msgParamsUInt8Array, nonce, pubKeyUInt8Array, ephemeralKeyPair.secretKey); // handle encrypted data\n\n        var output = {\n          version: 'x25519-xsalsa20-poly1305',\n          nonce: naclUtil.encodeBase64(nonce),\n          ephemPublicKey: naclUtil.encodeBase64(ephemeralKeyPair.publicKey),\n          ciphertext: naclUtil.encodeBase64(encryptedMessage)\n        }; // return encrypted msg data\n\n        return output;\n      }\n\n    default:\n      throw new Error('Encryption type/version not supported');\n  }\n}\n\nexports.encrypt = encrypt;\n\nfunction encryptSafely(receiverPublicKey, msgParams, version) {\n  var DEFAULT_PADDING_LENGTH = Math.pow(2, 11);\n  var NACL_EXTRA_BYTES = 16;\n  var data = msgParams.data;\n\n  if (!data) {\n    throw new Error('Cannot encrypt empty msg.data');\n  }\n\n  if (typeof data === 'object' && 'toJSON' in data) {\n    // remove toJSON attack vector\n    // TODO, check all possible children\n    throw new Error('Cannot encrypt with toJSON property.  Please remove toJSON property');\n  } // add padding\n\n\n  var dataWithPadding = {\n    data: data,\n    padding: ''\n  }; // calculate padding\n\n  var dataLength = Buffer.byteLength(JSON.stringify(dataWithPadding), 'utf-8');\n  var modVal = dataLength % DEFAULT_PADDING_LENGTH;\n  var padLength = 0; // Only pad if necessary\n\n  if (modVal > 0) {\n    padLength = DEFAULT_PADDING_LENGTH - modVal - NACL_EXTRA_BYTES; // nacl extra bytes\n  }\n\n  dataWithPadding.padding = '0'.repeat(padLength);\n  var paddedMsgParams = {\n    data: JSON.stringify(dataWithPadding)\n  };\n  return encrypt(receiverPublicKey, paddedMsgParams, version);\n}\n\nexports.encryptSafely = encryptSafely;\n\nfunction decrypt(encryptedData, receiverPrivateKey) {\n  switch (encryptedData.version) {\n    case 'x25519-xsalsa20-poly1305':\n      {\n        // string to buffer to UInt8Array\n        var recieverPrivateKeyUint8Array = nacl_decodeHex(receiverPrivateKey);\n        var recieverEncryptionPrivateKey = nacl.box.keyPair.fromSecretKey(recieverPrivateKeyUint8Array).secretKey; // assemble decryption parameters\n\n        var nonce = naclUtil.decodeBase64(encryptedData.nonce);\n        var ciphertext = naclUtil.decodeBase64(encryptedData.ciphertext);\n        var ephemPublicKey = naclUtil.decodeBase64(encryptedData.ephemPublicKey); // decrypt\n\n        var decryptedMessage = nacl.box.open(ciphertext, nonce, ephemPublicKey, recieverEncryptionPrivateKey); // return decrypted msg data\n\n        var output;\n\n        try {\n          output = naclUtil.encodeUTF8(decryptedMessage);\n        } catch (err) {\n          throw new Error('Decryption failed.');\n        }\n\n        if (output) {\n          return output;\n        }\n\n        throw new Error('Decryption failed.');\n      }\n\n    default:\n      throw new Error('Encryption type/version not supported.');\n  }\n}\n\nexports.decrypt = decrypt;\n\nfunction decryptSafely(encryptedData, receiverPrivateKey) {\n  var dataWithPadding = JSON.parse(decrypt(encryptedData, receiverPrivateKey));\n  return dataWithPadding.data;\n}\n\nexports.decryptSafely = decryptSafely;\n\nfunction getEncryptionPublicKey(privateKey) {\n  var privateKeyUint8Array = nacl_decodeHex(privateKey);\n  var encryptionPublicKey = nacl.box.keyPair.fromSecretKey(privateKeyUint8Array).publicKey;\n  return naclUtil.encodeBase64(encryptionPublicKey);\n}\n\nexports.getEncryptionPublicKey = getEncryptionPublicKey;\n/**\n * A generic entry point for all typed data methods to be passed, includes a version parameter.\n */\n\nfunction signTypedMessage(privateKey, msgParams) {\n  var version = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'V4';\n\n  switch (version) {\n    case 'V1':\n      return signTypedDataLegacy(privateKey, msgParams);\n\n    case 'V3':\n      return signTypedData(privateKey, msgParams);\n\n    case 'V4':\n    default:\n      return signTypedData_v4(privateKey, msgParams);\n  }\n}\n\nexports.signTypedMessage = signTypedMessage;\n\nfunction recoverTypedMessage(msgParams) {\n  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'V4';\n\n  switch (version) {\n    case 'V1':\n      return recoverTypedSignatureLegacy(msgParams);\n\n    case 'V3':\n      return recoverTypedSignature(msgParams);\n\n    case 'V4':\n    default:\n      return recoverTypedSignature_v4(msgParams);\n  }\n}\n\nexports.recoverTypedMessage = recoverTypedMessage;\n\nfunction signTypedData(privateKey, msgParams) {\n  var message = TypedDataUtils.sign(msgParams.data, false);\n  var sig = ethUtil.ecsign(message, privateKey);\n  return ethUtil.bufferToHex(concatSig(sig.v, sig.r, sig.s));\n}\n\nexports.signTypedData = signTypedData;\n\nfunction signTypedData_v4(privateKey, msgParams) {\n  var message = TypedDataUtils.sign(msgParams.data);\n  var sig = ethUtil.ecsign(message, privateKey);\n  return ethUtil.bufferToHex(concatSig(sig.v, sig.r, sig.s));\n}\n\nexports.signTypedData_v4 = signTypedData_v4;\n\nfunction recoverTypedSignature(msgParams) {\n  var message = TypedDataUtils.sign(msgParams.data, false);\n  var publicKey = recoverPublicKey(message, msgParams.sig);\n  var sender = ethUtil.publicToAddress(publicKey);\n  return ethUtil.bufferToHex(sender);\n}\n\nexports.recoverTypedSignature = recoverTypedSignature;\n\nfunction recoverTypedSignature_v4(msgParams) {\n  var message = TypedDataUtils.sign(msgParams.data);\n  var publicKey = recoverPublicKey(message, msgParams.sig);\n  var sender = ethUtil.publicToAddress(publicKey);\n  return ethUtil.bufferToHex(sender);\n}\n\nexports.recoverTypedSignature_v4 = recoverTypedSignature_v4;\n/**\n * @param typedData - Array of data along with types, as per EIP712.\n * @returns Buffer\n */\n\nfunction typedSignatureHash(typedData) {\n  var error = new Error('Expect argument to be non-empty array');\n\n  if (typeof typedData !== 'object' || !('length' in typedData) || !typedData.length) {\n    throw error;\n  }\n\n  var data = typedData.map(function (e) {\n    return e.type === 'bytes' ? ethUtil.toBuffer(e.value) : e.value;\n  });\n  var types = typedData.map(function (e) {\n    return e.type;\n  });\n  var schema = typedData.map(function (e) {\n    if (!e.name) {\n      throw error;\n    }\n\n    return \"\".concat(e.type, \" \").concat(e.name);\n  });\n  return ethAbi.soliditySHA3(['bytes32', 'bytes32'], [ethAbi.soliditySHA3(new Array(typedData.length).fill('string'), schema), ethAbi.soliditySHA3(types, data)]);\n}\n\nfunction recoverPublicKey(hash, sig) {\n  var signature = ethUtil.toBuffer(sig);\n  var sigParams = ethUtil.fromRpcSig(signature);\n  return ethUtil.ecrecover(hash, sigParams.v, sigParams.r, sigParams.s);\n}\n\nfunction getPublicKeyFor(msgParams) {\n  var message = ethUtil.toBuffer(msgParams.data);\n  var msgHash = ethUtil.hashPersonalMessage(message);\n  return recoverPublicKey(msgHash, msgParams.sig);\n}\n\nfunction padWithZeroes(number, length) {\n  var myString = \"\".concat(number);\n\n  while (myString.length < length) {\n    myString = \"0\".concat(myString);\n  }\n\n  return myString;\n} // converts hex strings to the Uint8Array format used by nacl\n\n\nfunction nacl_decodeHex(msgHex) {\n  var msgBase64 = Buffer.from(msgHex, 'hex').toString('base64');\n  return naclUtil.decodeBase64(msgBase64);\n}","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar _require = require('ethereum-cryptography/keccak'),\n    keccak224 = _require.keccak224,\n    keccak384 = _require.keccak384,\n    k256 = _require.keccak256,\n    keccak512 = _require.keccak512;\n\nvar secp256k1 = require('./secp256k1-adapter');\n\nvar assert = require('assert');\n\nvar rlp = require('rlp');\n\nvar BN = require('bn.js');\n\nvar createHash = require('create-hash');\n\nvar Buffer = require('safe-buffer').Buffer;\n\nObject.assign(exports, require('ethjs-util'));\n/**\n * the max integer that this VM can handle (a ```BN```)\n * @var {BN} MAX_INTEGER\n */\n\nexports.MAX_INTEGER = new BN('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff', 16);\n/**\n * 2^256 (a ```BN```)\n * @var {BN} TWO_POW256\n */\n\nexports.TWO_POW256 = new BN('10000000000000000000000000000000000000000000000000000000000000000', 16);\n/**\n * Keccak-256 hash of null (a ```String```)\n * @var {String} KECCAK256_NULL_S\n */\n\nexports.KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\nexports.SHA3_NULL_S = exports.KECCAK256_NULL_S;\n/**\n * Keccak-256 hash of null (a ```Buffer```)\n * @var {Buffer} KECCAK256_NULL\n */\n\nexports.KECCAK256_NULL = Buffer.from(exports.KECCAK256_NULL_S, 'hex');\nexports.SHA3_NULL = exports.KECCAK256_NULL;\n/**\n * Keccak-256 of an RLP of an empty array (a ```String```)\n * @var {String} KECCAK256_RLP_ARRAY_S\n */\n\nexports.KECCAK256_RLP_ARRAY_S = '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347';\nexports.SHA3_RLP_ARRAY_S = exports.KECCAK256_RLP_ARRAY_S;\n/**\n * Keccak-256 of an RLP of an empty array (a ```Buffer```)\n * @var {Buffer} KECCAK256_RLP_ARRAY\n */\n\nexports.KECCAK256_RLP_ARRAY = Buffer.from(exports.KECCAK256_RLP_ARRAY_S, 'hex');\nexports.SHA3_RLP_ARRAY = exports.KECCAK256_RLP_ARRAY;\n/**\n * Keccak-256 hash of the RLP of null  (a ```String```)\n * @var {String} KECCAK256_RLP_S\n */\n\nexports.KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421';\nexports.SHA3_RLP_S = exports.KECCAK256_RLP_S;\n/**\n * Keccak-256 hash of the RLP of null (a ```Buffer```)\n * @var {Buffer} KECCAK256_RLP\n */\n\nexports.KECCAK256_RLP = Buffer.from(exports.KECCAK256_RLP_S, 'hex');\nexports.SHA3_RLP = exports.KECCAK256_RLP;\n/**\n * [`BN`](https://github.com/indutny/bn.js)\n * @var {Function}\n */\n\nexports.BN = BN;\n/**\n * [`rlp`](https://github.com/ethereumjs/rlp)\n * @var {Function}\n */\n\nexports.rlp = rlp;\n/**\n * [`secp256k1`](https://github.com/cryptocoinjs/secp256k1-node/)\n * @var {Object}\n */\n\nexports.secp256k1 = secp256k1;\n/**\n * Returns a buffer filled with 0s\n * @method zeros\n * @param {Number} bytes  the number of bytes the buffer should be\n * @return {Buffer}\n */\n\nexports.zeros = function (bytes) {\n  return Buffer.allocUnsafe(bytes).fill(0);\n};\n/**\n  * Returns a zero address\n  * @method zeroAddress\n  * @return {String}\n  */\n\n\nexports.zeroAddress = function () {\n  var addressLength = 20;\n  var zeroAddress = exports.zeros(addressLength);\n  return exports.bufferToHex(zeroAddress);\n};\n/**\n * Left Pads an `Array` or `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @method lsetLength\n * @param {Buffer|Array} msg the value to pad\n * @param {Number} length the number of bytes the output should be\n * @param {Boolean} [right=false] whether to start padding form the left or right\n * @return {Buffer|Array}\n */\n\n\nexports.setLengthLeft = exports.setLength = function (msg, length, right) {\n  var buf = exports.zeros(length);\n  msg = exports.toBuffer(msg);\n\n  if (right) {\n    if (msg.length < length) {\n      msg.copy(buf);\n      return buf;\n    }\n\n    return msg.slice(0, length);\n  } else {\n    if (msg.length < length) {\n      msg.copy(buf, length - msg.length);\n      return buf;\n    }\n\n    return msg.slice(-length);\n  }\n};\n/**\n * Right Pads an `Array` or `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param {Buffer|Array} msg the value to pad\n * @param {Number} length the number of bytes the output should be\n * @return {Buffer|Array}\n */\n\n\nexports.setLengthRight = function (msg, length) {\n  return exports.setLength(msg, length, true);\n};\n/**\n * Trims leading zeros from a `Buffer` or an `Array`\n * @param {Buffer|Array|String} a\n * @return {Buffer|Array|String}\n */\n\n\nexports.unpad = exports.stripZeros = function (a) {\n  a = exports.stripHexPrefix(a);\n  var first = a[0];\n\n  while (a.length > 0 && first.toString() === '0') {\n    a = a.slice(1);\n    first = a[0];\n  }\n\n  return a;\n};\n/**\n * Attempts to turn a value into a `Buffer`. As input it supports `Buffer`, `String`, `Number`, null/undefined, `BN` and other objects with a `toArray()` method.\n * @param {*} v the value\n */\n\n\nexports.toBuffer = function (v) {\n  if (!Buffer.isBuffer(v)) {\n    if (Array.isArray(v)) {\n      v = Buffer.from(v);\n    } else if (typeof v === 'string') {\n      if (exports.isHexString(v)) {\n        v = Buffer.from(exports.padToEven(exports.stripHexPrefix(v)), 'hex');\n      } else {\n        v = Buffer.from(v);\n      }\n    } else if (typeof v === 'number') {\n      v = exports.intToBuffer(v);\n    } else if (v === null || v === undefined) {\n      v = Buffer.allocUnsafe(0);\n    } else if (BN.isBN(v)) {\n      v = v.toArrayLike(Buffer);\n    } else if (v.toArray) {\n      // converts a BN to a Buffer\n      v = Buffer.from(v.toArray());\n    } else {\n      throw new Error('invalid type');\n    }\n  }\n\n  return v;\n};\n/**\n * Converts a `Buffer` to a `Number`\n * @param {Buffer} buf\n * @return {Number}\n * @throws If the input number exceeds 53 bits.\n */\n\n\nexports.bufferToInt = function (buf) {\n  return new BN(exports.toBuffer(buf)).toNumber();\n};\n/**\n * Converts a `Buffer` into a hex `String`\n * @param {Buffer} buf\n * @return {String}\n */\n\n\nexports.bufferToHex = function (buf) {\n  buf = exports.toBuffer(buf);\n  return '0x' + buf.toString('hex');\n};\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BN`. Assumes 256-bit numbers.\n * @param {Buffer} num\n * @return {BN}\n */\n\n\nexports.fromSigned = function (num) {\n  return new BN(num).fromTwos(256);\n};\n/**\n * Converts a `BN` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param {BN} num\n * @return {Buffer}\n */\n\n\nexports.toUnsigned = function (num) {\n  return Buffer.from(num.toTwos(256).toArray());\n};\n/**\n * Creates Keccak hash of the input\n * @param {Buffer|Array|String|Number} a the input data\n * @param {Number} [bits=256] the Keccak width\n * @return {Buffer}\n */\n\n\nexports.keccak = function (a, bits) {\n  a = exports.toBuffer(a);\n  if (!bits) bits = 256;\n\n  switch (bits) {\n    case 224:\n      {\n        return keccak224(a);\n      }\n\n    case 256:\n      {\n        return k256(a);\n      }\n\n    case 384:\n      {\n        return keccak384(a);\n      }\n\n    case 512:\n      {\n        return keccak512(a);\n      }\n\n    default:\n      {\n        throw new Error('Invald algorithm: keccak' + bits);\n      }\n  }\n};\n/**\n * Creates Keccak-256 hash of the input, alias for keccak(a, 256)\n * @param {Buffer|Array|String|Number} a the input data\n * @return {Buffer}\n */\n\n\nexports.keccak256 = function (a) {\n  return exports.keccak(a);\n};\n/**\n * Creates SHA-3 (Keccak) hash of the input [OBSOLETE]\n * @param {Buffer|Array|String|Number} a the input data\n * @param {Number} [bits=256] the SHA-3 width\n * @return {Buffer}\n */\n\n\nexports.sha3 = exports.keccak;\n/**\n * Creates SHA256 hash of the input\n * @param {Buffer|Array|String|Number} a the input data\n * @return {Buffer}\n */\n\nexports.sha256 = function (a) {\n  a = exports.toBuffer(a);\n  return createHash('sha256').update(a).digest();\n};\n/**\n * Creates RIPEMD160 hash of the input\n * @param {Buffer|Array|String|Number} a the input data\n * @param {Boolean} padded whether it should be padded to 256 bits or not\n * @return {Buffer}\n */\n\n\nexports.ripemd160 = function (a, padded) {\n  a = exports.toBuffer(a);\n  var hash = createHash('rmd160').update(a).digest();\n\n  if (padded === true) {\n    return exports.setLength(hash, 32);\n  } else {\n    return hash;\n  }\n};\n/**\n * Creates SHA-3 hash of the RLP encoded version of the input\n * @param {Buffer|Array|String|Number} a the input data\n * @return {Buffer}\n */\n\n\nexports.rlphash = function (a) {\n  return exports.keccak(rlp.encode(a));\n};\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n * @param {Buffer} privateKey\n * @return {Boolean}\n */\n\n\nexports.isValidPrivate = function (privateKey) {\n  return secp256k1.privateKeyVerify(privateKey);\n};\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param {Buffer} publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param {Boolean} [sanitize=false] Accept public keys in other formats\n * @return {Boolean}\n */\n\n\nexports.isValidPublic = function (publicKey, sanitize) {\n  if (publicKey.length === 64) {\n    // Convert to SEC1 for secp256k1\n    return secp256k1.publicKeyVerify(Buffer.concat([Buffer.from([4]), publicKey]));\n  }\n\n  if (!sanitize) {\n    return false;\n  }\n\n  return secp256k1.publicKeyVerify(publicKey);\n};\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param {Buffer} pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param {Boolean} [sanitize=false] Accept public keys in other formats\n * @return {Buffer}\n */\n\n\nexports.pubToAddress = exports.publicToAddress = function (pubKey, sanitize) {\n  pubKey = exports.toBuffer(pubKey);\n\n  if (sanitize && pubKey.length !== 64) {\n    pubKey = secp256k1.publicKeyConvert(pubKey, false).slice(1);\n  }\n\n  assert(pubKey.length === 64); // Only take the lower 160bits of the hash\n\n  return exports.keccak(pubKey).slice(-20);\n};\n/**\n * Returns the ethereum public key of a given private key\n * @param {Buffer} privateKey A private key must be 256 bits wide\n * @return {Buffer}\n */\n\n\nvar privateToPublic = exports.privateToPublic = function (privateKey) {\n  privateKey = exports.toBuffer(privateKey); // skip the type flag and use the X, Y points\n\n  return secp256k1.publicKeyCreate(privateKey, false).slice(1);\n};\n/**\n * Converts a public key to the Ethereum format.\n * @param {Buffer} publicKey\n * @return {Buffer}\n */\n\n\nexports.importPublic = function (publicKey) {\n  publicKey = exports.toBuffer(publicKey);\n\n  if (publicKey.length !== 64) {\n    publicKey = secp256k1.publicKeyConvert(publicKey, false).slice(1);\n  }\n\n  return publicKey;\n};\n/**\n * ECDSA sign\n * @param {Buffer} msgHash\n * @param {Buffer} privateKey\n * @return {Object}\n */\n\n\nexports.ecsign = function (msgHash, privateKey) {\n  var sig = secp256k1.sign(msgHash, privateKey);\n  var ret = {};\n  ret.r = sig.signature.slice(0, 32);\n  ret.s = sig.signature.slice(32, 64);\n  ret.v = sig.recovery + 27;\n  return ret;\n};\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n * @param message\n * @returns {Buffer} hash\n */\n\n\nexports.hashPersonalMessage = function (message) {\n  var prefix = exports.toBuffer('\\x19Ethereum Signed Message:\\n' + message.length.toString());\n  return exports.keccak(Buffer.concat([prefix, message]));\n};\n/**\n * ECDSA public key recovery from signature\n * @param {Buffer} msgHash\n * @param {Number} v\n * @param {Buffer} r\n * @param {Buffer} s\n * @return {Buffer} publicKey\n */\n\n\nexports.ecrecover = function (msgHash, v, r, s) {\n  var signature = Buffer.concat([exports.setLength(r, 32), exports.setLength(s, 32)], 64);\n  var recovery = v - 27;\n\n  if (recovery !== 0 && recovery !== 1) {\n    throw new Error('Invalid signature v value');\n  }\n\n  var senderPubKey = secp256k1.recover(msgHash, signature, recovery);\n  return secp256k1.publicKeyConvert(senderPubKey, false).slice(1);\n};\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method\n * @param {Number} v\n * @param {Buffer} r\n * @param {Buffer} s\n * @return {String} sig\n */\n\n\nexports.toRpcSig = function (v, r, s) {\n  // NOTE: with potential introduction of chainId this might need to be updated\n  if (v !== 27 && v !== 28) {\n    throw new Error('Invalid recovery id');\n  } // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n  // FIXME: this might change in the future - https://github.com/ethereum/go-ethereum/issues/2053\n\n\n  return exports.bufferToHex(Buffer.concat([exports.setLengthLeft(r, 32), exports.setLengthLeft(s, 32), exports.toBuffer(v - 27)]));\n};\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n * NOTE: all because of a bug in geth: https://github.com/ethereum/go-ethereum/issues/2053\n * @param {String} sig\n * @return {Object}\n */\n\n\nexports.fromRpcSig = function (sig) {\n  sig = exports.toBuffer(sig); // NOTE: with potential introduction of chainId this might need to be updated\n\n  if (sig.length !== 65) {\n    throw new Error('Invalid signature length');\n  }\n\n  var v = sig[64]; // support both versions of `eth_sign` responses\n\n  if (v < 27) {\n    v += 27;\n  }\n\n  return {\n    v: v,\n    r: sig.slice(0, 32),\n    s: sig.slice(32, 64)\n  };\n};\n/**\n * Returns the ethereum address of a given private key\n * @param {Buffer} privateKey A private key must be 256 bits wide\n * @return {Buffer}\n */\n\n\nexports.privateToAddress = function (privateKey) {\n  return exports.publicToAddress(privateToPublic(privateKey));\n};\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too\n * @param {String} address\n * @return {Boolean}\n */\n\n\nexports.isValidAddress = function (address) {\n  return /^0x[0-9a-fA-F]{40}$/.test(address);\n};\n/**\n  * Checks if a given address is a zero address\n  * @method isZeroAddress\n  * @param {String} address\n  * @return {Boolean}\n  */\n\n\nexports.isZeroAddress = function (address) {\n  var zeroAddress = exports.zeroAddress();\n  return zeroAddress === exports.addHexPrefix(address);\n};\n/**\n * Returns a checksummed address\n * @param {String} address\n * @return {String}\n */\n\n\nexports.toChecksumAddress = function (address) {\n  address = exports.stripHexPrefix(address).toLowerCase();\n  var hash = exports.keccak(address).toString('hex');\n  var ret = '0x';\n\n  for (var i = 0; i < address.length; i++) {\n    if (parseInt(hash[i], 16) >= 8) {\n      ret += address[i].toUpperCase();\n    } else {\n      ret += address[i];\n    }\n  }\n\n  return ret;\n};\n/**\n * Checks if the address is a valid checksummed address\n * @param {Buffer} address\n * @return {Boolean}\n */\n\n\nexports.isValidChecksumAddress = function (address) {\n  return exports.isValidAddress(address) && exports.toChecksumAddress(address) === address;\n};\n/**\n * Generates an address of a newly created contract\n * @param {Buffer} from the address which is creating this new address\n * @param {Buffer} nonce the nonce of the from account\n * @return {Buffer}\n */\n\n\nexports.generateAddress = function (from, nonce) {\n  from = exports.toBuffer(from);\n  nonce = new BN(nonce);\n\n  if (nonce.isZero()) {\n    // in RLP we want to encode null in the case of zero nonce\n    // read the RLP documentation for an answer if you dare\n    nonce = null;\n  } else {\n    nonce = Buffer.from(nonce.toArray());\n  } // Only take the lower 160bits of the hash\n\n\n  return exports.rlphash([from, nonce]).slice(-20);\n};\n/**\n * Returns true if the supplied address belongs to a precompiled account (Byzantium)\n * @param {Buffer|String} address\n * @return {Boolean}\n */\n\n\nexports.isPrecompiled = function (address) {\n  var a = exports.unpad(address);\n  return a.length === 1 && a[0] >= 1 && a[0] <= 8;\n};\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\"\n * @param {String} str\n * @return {String}\n */\n\n\nexports.addHexPrefix = function (str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  return exports.isHexPrefixed(str) ? str : '0x' + str;\n};\n/**\n * Validate ECDSA signature\n * @method isValidSignature\n * @param {Buffer} v\n * @param {Buffer} r\n * @param {Buffer} s\n * @param {Boolean} [homestead=true]\n * @return {Boolean}\n */\n\n\nexports.isValidSignature = function (v, r, s, homestead) {\n  var SECP256K1_N_DIV_2 = new BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);\n  var SECP256K1_N = new BN('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 16);\n\n  if (r.length !== 32 || s.length !== 32) {\n    return false;\n  }\n\n  if (v !== 27 && v !== 28) {\n    return false;\n  }\n\n  r = new BN(r);\n  s = new BN(s);\n\n  if (r.isZero() || r.gt(SECP256K1_N) || s.isZero() || s.gt(SECP256K1_N)) {\n    return false;\n  }\n\n  if (homestead === false && new BN(s).cmp(SECP256K1_N_DIV_2) === 1) {\n    return false;\n  }\n\n  return true;\n};\n/**\n * Converts a `Buffer` or `Array` to JSON\n * @param {Buffer|Array} ba\n * @return {Array|String|null}\n */\n\n\nexports.baToJSON = function (ba) {\n  if (Buffer.isBuffer(ba)) {\n    return '0x' + ba.toString('hex');\n  } else if (ba instanceof Array) {\n    var array = [];\n\n    for (var i = 0; i < ba.length; i++) {\n      array.push(exports.baToJSON(ba[i]));\n    }\n\n    return array;\n  }\n};\n/**\n * Defines properties on a `Object`. It make the assumption that underlying data is binary.\n * @param {Object} self the `Object` to define properties on\n * @param {Array} fields an array fields to define. Fields can contain:\n * * `name` - the name of the properties\n * * `length` - the number of bytes the field can have\n * * `allowLess` - if the field can be less than the length\n * * `allowEmpty`\n * @param {*} data data to be validated against the definitions\n */\n\n\nexports.defineProperties = function (self, fields, data) {\n  self.raw = [];\n  self._fields = []; // attach the `toJSON`\n\n  self.toJSON = function (label) {\n    if (label) {\n      var obj = {};\n\n      self._fields.forEach(function (field) {\n        obj[field] = '0x' + self[field].toString('hex');\n      });\n\n      return obj;\n    }\n\n    return exports.baToJSON(this.raw);\n  };\n\n  self.serialize = function serialize() {\n    return rlp.encode(self.raw);\n  };\n\n  fields.forEach(function (field, i) {\n    self._fields.push(field.name);\n\n    function getter() {\n      return self.raw[i];\n    }\n\n    function setter(v) {\n      v = exports.toBuffer(v);\n\n      if (v.toString('hex') === '00' && !field.allowZero) {\n        v = Buffer.allocUnsafe(0);\n      }\n\n      if (field.allowLess && field.length) {\n        v = exports.stripZeros(v);\n        assert(field.length >= v.length, 'The field ' + field.name + ' must not have more ' + field.length + ' bytes');\n      } else if (!(field.allowZero && v.length === 0) && field.length) {\n        assert(field.length === v.length, 'The field ' + field.name + ' must have byte length of ' + field.length);\n      }\n\n      self.raw[i] = v;\n    }\n\n    Object.defineProperty(self, field.name, {\n      enumerable: true,\n      configurable: true,\n      get: getter,\n      set: setter\n    });\n\n    if (field.default) {\n      self[field.name] = field.default;\n    } // attach alias\n\n\n    if (field.alias) {\n      Object.defineProperty(self, field.alias, {\n        enumerable: false,\n        configurable: true,\n        set: setter,\n        get: getter\n      });\n    }\n  }); // if the constuctor is passed data\n\n  if (data) {\n    if (typeof data === 'string') {\n      data = Buffer.from(exports.stripHexPrefix(data), 'hex');\n    }\n\n    if (Buffer.isBuffer(data)) {\n      data = rlp.decode(data);\n    }\n\n    if (Array.isArray(data)) {\n      if (data.length > self._fields.length) {\n        throw new Error('wrong number of fields in data');\n      } // make sure all the items are buffers\n\n\n      data.forEach(function (d, i) {\n        self[self._fields[i]] = exports.toBuffer(d);\n      });\n    } else if ((typeof data === 'undefined' ? 'undefined' : _typeof(data)) === 'object') {\n      var keys = Object.keys(data);\n      fields.forEach(function (field) {\n        if (keys.indexOf(field.name) !== -1) self[field.name] = data[field.name];\n        if (keys.indexOf(field.alias) !== -1) self[field.alias] = data[field.alias];\n      });\n    } else {\n      throw new Error('invalid data');\n    }\n  }\n};","'use strict';\n\nvar secp256k1 = require('ethereum-cryptography/secp256k1');\n\nvar secp256k1v3 = require('./secp256k1-lib/index');\n\nvar der = require('./secp256k1-lib/der');\n/**\n * Verify an ECDSA privateKey\n * @method privateKeyVerify\n * @param {Buffer} privateKey\n * @return {boolean}\n */\n\n\nvar privateKeyVerify = function privateKeyVerify(privateKey) {\n  // secp256k1 v4 version throws when privateKey length is not 32\n  if (privateKey.length !== 32) {\n    return false;\n  }\n\n  return secp256k1.privateKeyVerify(Uint8Array.from(privateKey));\n};\n/**\n * Export a privateKey in DER format\n * @method privateKeyExport\n * @param {Buffer} privateKey\n * @param {boolean} compressed\n * @return {boolean}\n */\n\n\nvar privateKeyExport = function privateKeyExport(privateKey, compressed) {\n  // privateKeyExport method is not part of secp256k1 v4 package\n  // this implementation is based on v3\n  if (privateKey.length !== 32) {\n    throw new RangeError('private key length is invalid');\n  }\n\n  var publicKey = secp256k1v3.privateKeyExport(privateKey, compressed);\n  return der.privateKeyExport(privateKey, publicKey, compressed);\n};\n/**\n * Import a privateKey in DER format\n * @method privateKeyImport\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\n\n\nvar privateKeyImport = function privateKeyImport(privateKey) {\n  // privateKeyImport method is not part of secp256k1 v4 package\n  // this implementation is based on v3\n  privateKey = der.privateKeyImport(privateKey);\n\n  if (privateKey !== null && privateKey.length === 32 && privateKeyVerify(privateKey)) {\n    return privateKey;\n  }\n\n  throw new Error(\"couldn't import from DER format\");\n};\n/**\n * Negate a privateKey by subtracting it from the order of the curve's base point\n * @method privateKeyNegate\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\n\n\nvar privateKeyNegate = function privateKeyNegate(privateKey) {\n  return Buffer.from(secp256k1.privateKeyNegate(Uint8Array.from(privateKey)));\n};\n/**\n * Compute the inverse of a privateKey (modulo the order of the curve's base point).\n * @method privateKeyModInverse\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\n\n\nvar privateKeyModInverse = function privateKeyModInverse(privateKey) {\n  if (privateKey.length !== 32) {\n    throw new Error('private key length is invalid');\n  }\n\n  return Buffer.from(secp256k1v3.privateKeyModInverse(Uint8Array.from(privateKey)));\n};\n/**\n * Tweak a privateKey by adding tweak to it.\n * @method privateKeyTweakAdd\n * @param {Buffer} privateKey\n * @param {Buffer} tweak\n * @return {Buffer}\n */\n\n\nvar privateKeyTweakAdd = function privateKeyTweakAdd(privateKey, tweak) {\n  return Buffer.from(secp256k1.privateKeyTweakAdd(Uint8Array.from(privateKey), tweak));\n};\n/**\n * Tweak a privateKey by multiplying it by a tweak.\n * @method privateKeyTweakMul\n * @param {Buffer} privateKey\n * @param {Buffer} tweak\n * @return {Buffer}\n */\n\n\nvar privateKeyTweakMul = function privateKeyTweakMul(privateKey, tweak) {\n  return Buffer.from(secp256k1.privateKeyTweakMul(Uint8Array.from(privateKey), Uint8Array.from(tweak)));\n};\n/**\n * Compute the public key for a privateKey.\n * @method publicKeyCreate\n * @param {Buffer} privateKey\n * @param {boolean} compressed\n * @return {Buffer}\n */\n\n\nvar publicKeyCreate = function publicKeyCreate(privateKey, compressed) {\n  return Buffer.from(secp256k1.publicKeyCreate(Uint8Array.from(privateKey), compressed));\n};\n/**\n * Convert a publicKey to compressed or uncompressed form.\n * @method publicKeyConvert\n * @param {Buffer} publicKey\n * @param {boolean} compressed\n * @return {Buffer}\n */\n\n\nvar publicKeyConvert = function publicKeyConvert(publicKey, compressed) {\n  return Buffer.from(secp256k1.publicKeyConvert(Uint8Array.from(publicKey), compressed));\n};\n/**\n * Verify an ECDSA publicKey.\n * @method publicKeyVerify\n * @param {Buffer} publicKey\n * @return {boolean}\n */\n\n\nvar publicKeyVerify = function publicKeyVerify(publicKey) {\n  // secp256k1 v4 version throws when publicKey length is not 33 or 65\n  if (publicKey.length !== 33 && publicKey.length !== 65) {\n    return false;\n  }\n\n  return secp256k1.publicKeyVerify(Uint8Array.from(publicKey));\n};\n/**\n * Tweak a publicKey by adding tweak times the generator to it.\n * @method publicKeyTweakAdd\n * @param {Buffer} publicKey\n * @param {Buffer} tweak\n * @param {boolean} compressed\n * @return {Buffer}\n */\n\n\nvar publicKeyTweakAdd = function publicKeyTweakAdd(publicKey, tweak, compressed) {\n  return Buffer.from(secp256k1.publicKeyTweakAdd(Uint8Array.from(publicKey), Uint8Array.from(tweak), compressed));\n};\n/**\n * Tweak a publicKey by multiplying it by a tweak value\n * @method publicKeyTweakMul\n * @param {Buffer} publicKey\n * @param {Buffer} tweak\n * @param {boolean} compressed\n * @return {Buffer}\n */\n\n\nvar publicKeyTweakMul = function publicKeyTweakMul(publicKey, tweak, compressed) {\n  return Buffer.from(secp256k1.publicKeyTweakMul(Uint8Array.from(publicKey), Uint8Array.from(tweak), compressed));\n};\n/**\n * Add a given publicKeys together.\n * @method publicKeyCombine\n * @param {Array<Buffer>} publicKeys\n * @param {boolean} compressed\n * @return {Buffer}\n */\n\n\nvar publicKeyCombine = function publicKeyCombine(publicKeys, compressed) {\n  var keys = [];\n  publicKeys.forEach(function (publicKey) {\n    keys.push(Uint8Array.from(publicKey));\n  });\n  return Buffer.from(secp256k1.publicKeyCombine(keys, compressed));\n};\n/**\n * Convert a signature to a normalized lower-S form.\n * @method signatureNormalize\n * @param {Buffer} signature\n * @return {Buffer}\n */\n\n\nvar signatureNormalize = function signatureNormalize(signature) {\n  return Buffer.from(secp256k1.signatureNormalize(Uint8Array.from(signature)));\n};\n/**\n * Serialize an ECDSA signature in DER format.\n * @method signatureExport\n * @param {Buffer} signature\n * @return {Buffer}\n */\n\n\nvar signatureExport = function signatureExport(signature) {\n  return Buffer.from(secp256k1.signatureExport(Uint8Array.from(signature)));\n};\n/**\n * Parse a DER ECDSA signature (follow by [BIP66](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki)).\n * @method signatureImport\n * @param {Buffer} signature\n * @return {Buffer}\n */\n\n\nvar signatureImport = function signatureImport(signature) {\n  return Buffer.from(secp256k1.signatureImport(Uint8Array.from(signature)));\n};\n/**\n * Parse a DER ECDSA signature (not follow by [BIP66](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki)).\n * @method signatureImportLax\n * @param {Buffer} signature\n * @return {Buffer}\n */\n\n\nvar signatureImportLax = function signatureImportLax(signature) {\n  // signatureImportLax method is not part of secp256k1 v4 package\n  // this implementation is based on v3\n  // ensure that signature is greater than 0\n  if (signature.length === 0) {\n    throw new RangeError('signature length is invalid');\n  }\n\n  var sigObj = der.signatureImportLax(signature);\n\n  if (sigObj === null) {\n    throw new Error(\"couldn't parse DER signature\");\n  }\n\n  return secp256k1v3.signatureImport(sigObj);\n};\n/**\n * Create an ECDSA signature. Always return low-S signature.\n * @method sign\n * @param {Buffer} message\n * @param {Buffer} privateKey\n * @param {Object} options\n * @return {Buffer}\n */\n\n\nvar sign = function sign(message, privateKey, options) {\n  if (options === null) {\n    throw new TypeError('options should be an Object');\n  }\n\n  var signOptions = void 0;\n\n  if (options) {\n    signOptions = {};\n\n    if (options.data === null) {\n      throw new TypeError('options.data should be a Buffer');\n    }\n\n    if (options.data) {\n      // validate option.data length\n      if (options.data.length !== 32) {\n        throw new RangeError('options.data length is invalid');\n      }\n\n      signOptions.data = new Uint8Array(options.data);\n    }\n\n    if (options.noncefn === null) {\n      throw new TypeError('options.noncefn should be a Function');\n    }\n\n    if (options.noncefn) {\n      //  convert option.noncefn function signature\n      signOptions.noncefn = function (message, privateKey, algo, data, attempt) {\n        var bufferAlgo = algo != null ? Buffer.from(algo) : null;\n        var bufferData = data != null ? Buffer.from(data) : null;\n        var buffer = Buffer.from('');\n\n        if (options.noncefn) {\n          buffer = options.noncefn(Buffer.from(message), Buffer.from(privateKey), bufferAlgo, bufferData, attempt);\n        }\n\n        return Uint8Array.from(buffer);\n      };\n    }\n  }\n\n  var sig = secp256k1.ecdsaSign(Uint8Array.from(message), Uint8Array.from(privateKey), signOptions);\n  return {\n    signature: Buffer.from(sig.signature),\n    recovery: sig.recid\n  };\n};\n/**\n * Verify an ECDSA signature.\n * @method verify\n * @param {Buffer} message\n * @param {Buffer} signature\n * @param {Buffer} publicKey\n * @return {boolean}\n */\n\n\nvar verify = function verify(message, signature, publicKey) {\n  // note: secp256k1 v4 verify method has a different argument order\n  return secp256k1.ecdsaVerify(Uint8Array.from(signature), Uint8Array.from(message), publicKey);\n};\n/**\n * Recover an ECDSA public key from a signature.\n * @method recover\n * @param {Buffer} message\n * @param {Buffer} signature\n * @param {Number} recid\n * @param {boolean} compressed\n * @return {Buffer}\n */\n\n\nvar recover = function recover(message, signature, recid, compressed) {\n  // note: secp256k1 v4 recover method has a different argument order\n  return Buffer.from(secp256k1.ecdsaRecover(Uint8Array.from(signature), recid, Uint8Array.from(message), compressed));\n};\n/**\n * Compute an EC Diffie-Hellman secret and applied sha256 to compressed public key.\n * @method ecdh\n * @param {Buffer} publicKey\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\n\n\nvar ecdh = function ecdh(publicKey, privateKey) {\n  // note: secp256k1 v3 doesn't allow optional parameter\n  return Buffer.from(secp256k1.ecdh(Uint8Array.from(publicKey), Uint8Array.from(privateKey), {}));\n};\n/**\n * Compute an EC Diffie-Hellman secret and return public key as result\n * @method ecdhUnsafe\n * @param {Buffer} publicKey\n * @param {Buffer} privateKey\n * @param {boolean} compressed\n * @return {Buffer}\n */\n\n\nvar ecdhUnsafe = function ecdhUnsafe(publicKey, privateKey, compressed) {\n  // ecdhUnsafe method is not part of secp256k1 v4 package\n  // this implementation is based on v3\n  // ensure valid publicKey length\n  if (publicKey.length !== 33 && publicKey.length !== 65) {\n    throw new RangeError('public key length is invalid');\n  } // ensure valid privateKey length\n\n\n  if (privateKey.length !== 32) {\n    throw new RangeError('private key length is invalid');\n  }\n\n  return Buffer.from(secp256k1v3.ecdhUnsafe(Uint8Array.from(publicKey), Uint8Array.from(privateKey), compressed));\n};\n\nmodule.exports = {\n  privateKeyVerify: privateKeyVerify,\n  privateKeyExport: privateKeyExport,\n  privateKeyImport: privateKeyImport,\n  privateKeyNegate: privateKeyNegate,\n  privateKeyModInverse: privateKeyModInverse,\n  privateKeyTweakAdd: privateKeyTweakAdd,\n  privateKeyTweakMul: privateKeyTweakMul,\n  publicKeyCreate: publicKeyCreate,\n  publicKeyConvert: publicKeyConvert,\n  publicKeyVerify: publicKeyVerify,\n  publicKeyTweakAdd: publicKeyTweakAdd,\n  publicKeyTweakMul: publicKeyTweakMul,\n  publicKeyCombine: publicKeyCombine,\n  signatureNormalize: signatureNormalize,\n  signatureExport: signatureExport,\n  signatureImport: signatureImport,\n  signatureImportLax: signatureImportLax,\n  sign: sign,\n  verify: verify,\n  recover: recover,\n  ecdh: ecdh,\n  ecdhUnsafe: ecdhUnsafe\n};","'use strict'; // This file is imported from secp256k1 v3\n// https://github.com/cryptocoinjs/secp256k1-node/blob/master/LICENSE\n\nvar BN = require('bn.js');\n\nvar EC = require('elliptic').ec;\n\nvar ec = new EC('secp256k1');\nvar ecparams = ec.curve;\n\nexports.privateKeyExport = function (privateKey, compressed) {\n  var d = new BN(privateKey);\n\n  if (d.ucmp(ecparams.n) >= 0) {\n    throw new Error('couldn\\'t export to DER format');\n  }\n\n  var point = ec.g.mul(d);\n  return toPublicKey(point.getX(), point.getY(), compressed);\n};\n\nexports.privateKeyModInverse = function (privateKey) {\n  var bn = new BN(privateKey);\n\n  if (bn.ucmp(ecparams.n) >= 0 || bn.isZero()) {\n    throw new Error('private key range is invalid');\n  }\n\n  return bn.invm(ecparams.n).toArrayLike(Buffer, 'be', 32);\n};\n\nexports.signatureImport = function (sigObj) {\n  var r = new BN(sigObj.r);\n\n  if (r.ucmp(ecparams.n) >= 0) {\n    r = new BN(0);\n  }\n\n  var s = new BN(sigObj.s);\n\n  if (s.ucmp(ecparams.n) >= 0) {\n    s = new BN(0);\n  }\n\n  return Buffer.concat([r.toArrayLike(Buffer, 'be', 32), s.toArrayLike(Buffer, 'be', 32)]);\n};\n\nexports.ecdhUnsafe = function (publicKey, privateKey, compressed) {\n  var point = ec.keyFromPublic(publicKey);\n  var scalar = new BN(privateKey);\n\n  if (scalar.ucmp(ecparams.n) >= 0 || scalar.isZero()) {\n    throw new Error('scalar was invalid (zero or overflow)');\n  }\n\n  var shared = point.pub.mul(scalar);\n  return toPublicKey(shared.getX(), shared.getY(), compressed);\n};\n\nvar toPublicKey = function toPublicKey(x, y, compressed) {\n  var publicKey = void 0;\n\n  if (compressed) {\n    publicKey = Buffer.alloc(33);\n    publicKey[0] = y.isOdd() ? 0x03 : 0x02;\n    x.toArrayLike(Buffer, 'be', 32).copy(publicKey, 1);\n  } else {\n    publicKey = Buffer.alloc(65);\n    publicKey[0] = 0x04;\n    x.toArrayLike(Buffer, 'be', 32).copy(publicKey, 1);\n    y.toArrayLike(Buffer, 'be', 32).copy(publicKey, 33);\n  }\n\n  return publicKey;\n};","\"use strict\"; // This file is imported from secp256k1 v3\n// https://github.com/cryptocoinjs/secp256k1-node/blob/master/LICENSE\n\nvar EC_PRIVKEY_EXPORT_DER_COMPRESSED = Buffer.from([// begin\n0x30, 0x81, 0xd3, 0x02, 0x01, 0x01, 0x04, 0x20, // private key\n0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // middle\n0xa0, 0x81, 0x85, 0x30, 0x81, 0x82, 0x02, 0x01, 0x01, 0x30, 0x2c, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x01, 0x01, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xfc, 0x2f, 0x30, 0x06, 0x04, 0x01, 0x00, 0x04, 0x01, 0x07, 0x04, 0x21, 0x02, 0x79, 0xbe, 0x66, 0x7e, 0xf9, 0xdc, 0xbb, 0xac, 0x55, 0xa0, 0x62, 0x95, 0xce, 0x87, 0x0b, 0x07, 0x02, 0x9b, 0xfc, 0xdb, 0x2d, 0xce, 0x28, 0xd9, 0x59, 0xf2, 0x81, 0x5b, 0x16, 0xf8, 0x17, 0x98, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xba, 0xae, 0xdc, 0xe6, 0xaf, 0x48, 0xa0, 0x3b, 0xbf, 0xd2, 0x5e, 0x8c, 0xd0, 0x36, 0x41, 0x41, 0x02, 0x01, 0x01, 0xa1, 0x24, 0x03, 0x22, 0x00, // public key\n0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]);\nvar EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED = Buffer.from([// begin\n0x30, 0x82, 0x01, 0x13, 0x02, 0x01, 0x01, 0x04, 0x20, // private key\n0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // middle\n0xa0, 0x81, 0xa5, 0x30, 0x81, 0xa2, 0x02, 0x01, 0x01, 0x30, 0x2c, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x01, 0x01, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xfc, 0x2f, 0x30, 0x06, 0x04, 0x01, 0x00, 0x04, 0x01, 0x07, 0x04, 0x41, 0x04, 0x79, 0xbe, 0x66, 0x7e, 0xf9, 0xdc, 0xbb, 0xac, 0x55, 0xa0, 0x62, 0x95, 0xce, 0x87, 0x0b, 0x07, 0x02, 0x9b, 0xfc, 0xdb, 0x2d, 0xce, 0x28, 0xd9, 0x59, 0xf2, 0x81, 0x5b, 0x16, 0xf8, 0x17, 0x98, 0x48, 0x3a, 0xda, 0x77, 0x26, 0xa3, 0xc4, 0x65, 0x5d, 0xa4, 0xfb, 0xfc, 0x0e, 0x11, 0x08, 0xa8, 0xfd, 0x17, 0xb4, 0x48, 0xa6, 0x85, 0x54, 0x19, 0x9c, 0x47, 0xd0, 0x8f, 0xfb, 0x10, 0xd4, 0xb8, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xba, 0xae, 0xdc, 0xe6, 0xaf, 0x48, 0xa0, 0x3b, 0xbf, 0xd2, 0x5e, 0x8c, 0xd0, 0x36, 0x41, 0x41, 0x02, 0x01, 0x01, 0xa1, 0x44, 0x03, 0x42, 0x00, // public key\n0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]);\n\nexports.privateKeyExport = function (privateKey, publicKey, compressed) {\n  var result = Buffer.from(compressed ? EC_PRIVKEY_EXPORT_DER_COMPRESSED : EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED);\n  privateKey.copy(result, compressed ? 8 : 9);\n  publicKey.copy(result, compressed ? 181 : 214);\n  return result;\n};\n\nexports.privateKeyImport = function (privateKey) {\n  var length = privateKey.length; // sequence header\n\n  var index = 0;\n  if (length < index + 1 || privateKey[index] !== 0x30) return null;\n  index += 1; // sequence length constructor\n\n  if (length < index + 1 || !(privateKey[index] & 0x80)) return null;\n  var lenb = privateKey[index] & 0x7f;\n  index += 1;\n  if (lenb < 1 || lenb > 2) return null;\n  if (length < index + lenb) return null; // sequence length\n\n  var len = privateKey[index + lenb - 1] | (lenb > 1 ? privateKey[index + lenb - 2] << 8 : 0);\n  index += lenb;\n  if (length < index + len) return null; // sequence element 0: version number (=1)\n\n  if (length < index + 3 || privateKey[index] !== 0x02 || privateKey[index + 1] !== 0x01 || privateKey[index + 2] !== 0x01) {\n    return null;\n  }\n\n  index += 3; // sequence element 1: octet string, up to 32 bytes\n\n  if (length < index + 2 || privateKey[index] !== 0x04 || privateKey[index + 1] > 0x20 || length < index + 2 + privateKey[index + 1]) {\n    return null;\n  }\n\n  return privateKey.slice(index + 2, index + 2 + privateKey[index + 1]);\n};\n\nexports.signatureImportLax = function (signature) {\n  var r = Buffer.alloc(32, 0);\n  var s = Buffer.alloc(32, 0);\n  var length = signature.length;\n  var index = 0; // sequence tag byte\n\n  if (signature[index++] !== 0x30) {\n    return null;\n  } // sequence length byte\n\n\n  var lenbyte = signature[index++];\n\n  if (lenbyte & 0x80) {\n    index += lenbyte - 0x80;\n\n    if (index > length) {\n      return null;\n    }\n  } // sequence tag byte for r\n\n\n  if (signature[index++] !== 0x02) {\n    return null;\n  } // length for r\n\n\n  var rlen = signature[index++];\n\n  if (rlen & 0x80) {\n    lenbyte = rlen - 0x80;\n\n    if (index + lenbyte > length) {\n      return null;\n    }\n\n    for (; lenbyte > 0 && signature[index] === 0x00; index += 1, lenbyte -= 1) {}\n\n    for (rlen = 0; lenbyte > 0; index += 1, lenbyte -= 1) {\n      rlen = (rlen << 8) + signature[index];\n    }\n  }\n\n  if (rlen > length - index) {\n    return null;\n  }\n\n  var rindex = index;\n  index += rlen; // sequence tag byte for s\n\n  if (signature[index++] !== 0x02) {\n    return null;\n  } // length for s\n\n\n  var slen = signature[index++];\n\n  if (slen & 0x80) {\n    lenbyte = slen - 0x80;\n\n    if (index + lenbyte > length) {\n      return null;\n    }\n\n    for (; lenbyte > 0 && signature[index] === 0x00; index += 1, lenbyte -= 1) {}\n\n    for (slen = 0; lenbyte > 0; index += 1, lenbyte -= 1) {\n      slen = (slen << 8) + signature[index];\n    }\n  }\n\n  if (slen > length - index) {\n    return null;\n  }\n\n  var sindex = index;\n  index += slen; // ignore leading zeros in r\n\n  for (; rlen > 0 && signature[rindex] === 0x00; rlen -= 1, rindex += 1) {} // copy r value\n\n\n  if (rlen > 32) {\n    return null;\n  }\n\n  var rvalue = signature.slice(rindex, rindex + rlen);\n  rvalue.copy(r, 32 - rvalue.length); // ignore leading zeros in s\n\n  for (; slen > 0 && signature[sindex] === 0x00; slen -= 1, sindex += 1) {} // copy s value\n\n\n  if (slen > 32) {\n    return null;\n  }\n\n  var svalue = signature.slice(sindex, sindex + slen);\n  svalue.copy(s, 32 - svalue.length);\n  return {\n    r: r,\n    s: s\n  };\n};","(function (nacl) {\n  'use strict'; // Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n  // Public domain.\n  //\n  // Implementation derived from TweetNaCl version 20140427.\n  // See for details: http://tweetnacl.cr.yp.to/\n\n  var gf = function gf(init) {\n    var i,\n        r = new Float64Array(16);\n    if (init) for (i = 0; i < init.length; i++) {\n      r[i] = init[i];\n    }\n    return r;\n  }; //  Pluggable, initialized in high-level API below.\n\n\n  var randombytes = function randombytes()\n  /* x, n */\n  {\n    throw new Error('no PRNG');\n  };\n\n  var _0 = new Uint8Array(16);\n\n  var _9 = new Uint8Array(32);\n\n  _9[0] = 9;\n\n  var gf0 = gf(),\n      gf1 = gf([1]),\n      _121665 = gf([0xdb41, 1]),\n      D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n      D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n      X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n      Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n      I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\n  function ts64(x, i, h, l) {\n    x[i] = h >> 24 & 0xff;\n    x[i + 1] = h >> 16 & 0xff;\n    x[i + 2] = h >> 8 & 0xff;\n    x[i + 3] = h & 0xff;\n    x[i + 4] = l >> 24 & 0xff;\n    x[i + 5] = l >> 16 & 0xff;\n    x[i + 6] = l >> 8 & 0xff;\n    x[i + 7] = l & 0xff;\n  }\n\n  function vn(x, xi, y, yi, n) {\n    var i,\n        d = 0;\n\n    for (i = 0; i < n; i++) {\n      d |= x[xi + i] ^ y[yi + i];\n    }\n\n    return (1 & d - 1 >>> 8) - 1;\n  }\n\n  function crypto_verify_16(x, xi, y, yi) {\n    return vn(x, xi, y, yi, 16);\n  }\n\n  function crypto_verify_32(x, xi, y, yi) {\n    return vn(x, xi, y, yi, 32);\n  }\n\n  function core_salsa20(o, p, k, c) {\n    var j0 = c[0] & 0xff | (c[1] & 0xff) << 8 | (c[2] & 0xff) << 16 | (c[3] & 0xff) << 24,\n        j1 = k[0] & 0xff | (k[1] & 0xff) << 8 | (k[2] & 0xff) << 16 | (k[3] & 0xff) << 24,\n        j2 = k[4] & 0xff | (k[5] & 0xff) << 8 | (k[6] & 0xff) << 16 | (k[7] & 0xff) << 24,\n        j3 = k[8] & 0xff | (k[9] & 0xff) << 8 | (k[10] & 0xff) << 16 | (k[11] & 0xff) << 24,\n        j4 = k[12] & 0xff | (k[13] & 0xff) << 8 | (k[14] & 0xff) << 16 | (k[15] & 0xff) << 24,\n        j5 = c[4] & 0xff | (c[5] & 0xff) << 8 | (c[6] & 0xff) << 16 | (c[7] & 0xff) << 24,\n        j6 = p[0] & 0xff | (p[1] & 0xff) << 8 | (p[2] & 0xff) << 16 | (p[3] & 0xff) << 24,\n        j7 = p[4] & 0xff | (p[5] & 0xff) << 8 | (p[6] & 0xff) << 16 | (p[7] & 0xff) << 24,\n        j8 = p[8] & 0xff | (p[9] & 0xff) << 8 | (p[10] & 0xff) << 16 | (p[11] & 0xff) << 24,\n        j9 = p[12] & 0xff | (p[13] & 0xff) << 8 | (p[14] & 0xff) << 16 | (p[15] & 0xff) << 24,\n        j10 = c[8] & 0xff | (c[9] & 0xff) << 8 | (c[10] & 0xff) << 16 | (c[11] & 0xff) << 24,\n        j11 = k[16] & 0xff | (k[17] & 0xff) << 8 | (k[18] & 0xff) << 16 | (k[19] & 0xff) << 24,\n        j12 = k[20] & 0xff | (k[21] & 0xff) << 8 | (k[22] & 0xff) << 16 | (k[23] & 0xff) << 24,\n        j13 = k[24] & 0xff | (k[25] & 0xff) << 8 | (k[26] & 0xff) << 16 | (k[27] & 0xff) << 24,\n        j14 = k[28] & 0xff | (k[29] & 0xff) << 8 | (k[30] & 0xff) << 16 | (k[31] & 0xff) << 24,\n        j15 = c[12] & 0xff | (c[13] & 0xff) << 8 | (c[14] & 0xff) << 16 | (c[15] & 0xff) << 24;\n    var x0 = j0,\n        x1 = j1,\n        x2 = j2,\n        x3 = j3,\n        x4 = j4,\n        x5 = j5,\n        x6 = j6,\n        x7 = j7,\n        x8 = j8,\n        x9 = j9,\n        x10 = j10,\n        x11 = j11,\n        x12 = j12,\n        x13 = j13,\n        x14 = j14,\n        x15 = j15,\n        u;\n\n    for (var i = 0; i < 20; i += 2) {\n      u = x0 + x12 | 0;\n      x4 ^= u << 7 | u >>> 32 - 7;\n      u = x4 + x0 | 0;\n      x8 ^= u << 9 | u >>> 32 - 9;\n      u = x8 + x4 | 0;\n      x12 ^= u << 13 | u >>> 32 - 13;\n      u = x12 + x8 | 0;\n      x0 ^= u << 18 | u >>> 32 - 18;\n      u = x5 + x1 | 0;\n      x9 ^= u << 7 | u >>> 32 - 7;\n      u = x9 + x5 | 0;\n      x13 ^= u << 9 | u >>> 32 - 9;\n      u = x13 + x9 | 0;\n      x1 ^= u << 13 | u >>> 32 - 13;\n      u = x1 + x13 | 0;\n      x5 ^= u << 18 | u >>> 32 - 18;\n      u = x10 + x6 | 0;\n      x14 ^= u << 7 | u >>> 32 - 7;\n      u = x14 + x10 | 0;\n      x2 ^= u << 9 | u >>> 32 - 9;\n      u = x2 + x14 | 0;\n      x6 ^= u << 13 | u >>> 32 - 13;\n      u = x6 + x2 | 0;\n      x10 ^= u << 18 | u >>> 32 - 18;\n      u = x15 + x11 | 0;\n      x3 ^= u << 7 | u >>> 32 - 7;\n      u = x3 + x15 | 0;\n      x7 ^= u << 9 | u >>> 32 - 9;\n      u = x7 + x3 | 0;\n      x11 ^= u << 13 | u >>> 32 - 13;\n      u = x11 + x7 | 0;\n      x15 ^= u << 18 | u >>> 32 - 18;\n      u = x0 + x3 | 0;\n      x1 ^= u << 7 | u >>> 32 - 7;\n      u = x1 + x0 | 0;\n      x2 ^= u << 9 | u >>> 32 - 9;\n      u = x2 + x1 | 0;\n      x3 ^= u << 13 | u >>> 32 - 13;\n      u = x3 + x2 | 0;\n      x0 ^= u << 18 | u >>> 32 - 18;\n      u = x5 + x4 | 0;\n      x6 ^= u << 7 | u >>> 32 - 7;\n      u = x6 + x5 | 0;\n      x7 ^= u << 9 | u >>> 32 - 9;\n      u = x7 + x6 | 0;\n      x4 ^= u << 13 | u >>> 32 - 13;\n      u = x4 + x7 | 0;\n      x5 ^= u << 18 | u >>> 32 - 18;\n      u = x10 + x9 | 0;\n      x11 ^= u << 7 | u >>> 32 - 7;\n      u = x11 + x10 | 0;\n      x8 ^= u << 9 | u >>> 32 - 9;\n      u = x8 + x11 | 0;\n      x9 ^= u << 13 | u >>> 32 - 13;\n      u = x9 + x8 | 0;\n      x10 ^= u << 18 | u >>> 32 - 18;\n      u = x15 + x14 | 0;\n      x12 ^= u << 7 | u >>> 32 - 7;\n      u = x12 + x15 | 0;\n      x13 ^= u << 9 | u >>> 32 - 9;\n      u = x13 + x12 | 0;\n      x14 ^= u << 13 | u >>> 32 - 13;\n      u = x14 + x13 | 0;\n      x15 ^= u << 18 | u >>> 32 - 18;\n    }\n\n    x0 = x0 + j0 | 0;\n    x1 = x1 + j1 | 0;\n    x2 = x2 + j2 | 0;\n    x3 = x3 + j3 | 0;\n    x4 = x4 + j4 | 0;\n    x5 = x5 + j5 | 0;\n    x6 = x6 + j6 | 0;\n    x7 = x7 + j7 | 0;\n    x8 = x8 + j8 | 0;\n    x9 = x9 + j9 | 0;\n    x10 = x10 + j10 | 0;\n    x11 = x11 + j11 | 0;\n    x12 = x12 + j12 | 0;\n    x13 = x13 + j13 | 0;\n    x14 = x14 + j14 | 0;\n    x15 = x15 + j15 | 0;\n    o[0] = x0 >>> 0 & 0xff;\n    o[1] = x0 >>> 8 & 0xff;\n    o[2] = x0 >>> 16 & 0xff;\n    o[3] = x0 >>> 24 & 0xff;\n    o[4] = x1 >>> 0 & 0xff;\n    o[5] = x1 >>> 8 & 0xff;\n    o[6] = x1 >>> 16 & 0xff;\n    o[7] = x1 >>> 24 & 0xff;\n    o[8] = x2 >>> 0 & 0xff;\n    o[9] = x2 >>> 8 & 0xff;\n    o[10] = x2 >>> 16 & 0xff;\n    o[11] = x2 >>> 24 & 0xff;\n    o[12] = x3 >>> 0 & 0xff;\n    o[13] = x3 >>> 8 & 0xff;\n    o[14] = x3 >>> 16 & 0xff;\n    o[15] = x3 >>> 24 & 0xff;\n    o[16] = x4 >>> 0 & 0xff;\n    o[17] = x4 >>> 8 & 0xff;\n    o[18] = x4 >>> 16 & 0xff;\n    o[19] = x4 >>> 24 & 0xff;\n    o[20] = x5 >>> 0 & 0xff;\n    o[21] = x5 >>> 8 & 0xff;\n    o[22] = x5 >>> 16 & 0xff;\n    o[23] = x5 >>> 24 & 0xff;\n    o[24] = x6 >>> 0 & 0xff;\n    o[25] = x6 >>> 8 & 0xff;\n    o[26] = x6 >>> 16 & 0xff;\n    o[27] = x6 >>> 24 & 0xff;\n    o[28] = x7 >>> 0 & 0xff;\n    o[29] = x7 >>> 8 & 0xff;\n    o[30] = x7 >>> 16 & 0xff;\n    o[31] = x7 >>> 24 & 0xff;\n    o[32] = x8 >>> 0 & 0xff;\n    o[33] = x8 >>> 8 & 0xff;\n    o[34] = x8 >>> 16 & 0xff;\n    o[35] = x8 >>> 24 & 0xff;\n    o[36] = x9 >>> 0 & 0xff;\n    o[37] = x9 >>> 8 & 0xff;\n    o[38] = x9 >>> 16 & 0xff;\n    o[39] = x9 >>> 24 & 0xff;\n    o[40] = x10 >>> 0 & 0xff;\n    o[41] = x10 >>> 8 & 0xff;\n    o[42] = x10 >>> 16 & 0xff;\n    o[43] = x10 >>> 24 & 0xff;\n    o[44] = x11 >>> 0 & 0xff;\n    o[45] = x11 >>> 8 & 0xff;\n    o[46] = x11 >>> 16 & 0xff;\n    o[47] = x11 >>> 24 & 0xff;\n    o[48] = x12 >>> 0 & 0xff;\n    o[49] = x12 >>> 8 & 0xff;\n    o[50] = x12 >>> 16 & 0xff;\n    o[51] = x12 >>> 24 & 0xff;\n    o[52] = x13 >>> 0 & 0xff;\n    o[53] = x13 >>> 8 & 0xff;\n    o[54] = x13 >>> 16 & 0xff;\n    o[55] = x13 >>> 24 & 0xff;\n    o[56] = x14 >>> 0 & 0xff;\n    o[57] = x14 >>> 8 & 0xff;\n    o[58] = x14 >>> 16 & 0xff;\n    o[59] = x14 >>> 24 & 0xff;\n    o[60] = x15 >>> 0 & 0xff;\n    o[61] = x15 >>> 8 & 0xff;\n    o[62] = x15 >>> 16 & 0xff;\n    o[63] = x15 >>> 24 & 0xff;\n  }\n\n  function core_hsalsa20(o, p, k, c) {\n    var j0 = c[0] & 0xff | (c[1] & 0xff) << 8 | (c[2] & 0xff) << 16 | (c[3] & 0xff) << 24,\n        j1 = k[0] & 0xff | (k[1] & 0xff) << 8 | (k[2] & 0xff) << 16 | (k[3] & 0xff) << 24,\n        j2 = k[4] & 0xff | (k[5] & 0xff) << 8 | (k[6] & 0xff) << 16 | (k[7] & 0xff) << 24,\n        j3 = k[8] & 0xff | (k[9] & 0xff) << 8 | (k[10] & 0xff) << 16 | (k[11] & 0xff) << 24,\n        j4 = k[12] & 0xff | (k[13] & 0xff) << 8 | (k[14] & 0xff) << 16 | (k[15] & 0xff) << 24,\n        j5 = c[4] & 0xff | (c[5] & 0xff) << 8 | (c[6] & 0xff) << 16 | (c[7] & 0xff) << 24,\n        j6 = p[0] & 0xff | (p[1] & 0xff) << 8 | (p[2] & 0xff) << 16 | (p[3] & 0xff) << 24,\n        j7 = p[4] & 0xff | (p[5] & 0xff) << 8 | (p[6] & 0xff) << 16 | (p[7] & 0xff) << 24,\n        j8 = p[8] & 0xff | (p[9] & 0xff) << 8 | (p[10] & 0xff) << 16 | (p[11] & 0xff) << 24,\n        j9 = p[12] & 0xff | (p[13] & 0xff) << 8 | (p[14] & 0xff) << 16 | (p[15] & 0xff) << 24,\n        j10 = c[8] & 0xff | (c[9] & 0xff) << 8 | (c[10] & 0xff) << 16 | (c[11] & 0xff) << 24,\n        j11 = k[16] & 0xff | (k[17] & 0xff) << 8 | (k[18] & 0xff) << 16 | (k[19] & 0xff) << 24,\n        j12 = k[20] & 0xff | (k[21] & 0xff) << 8 | (k[22] & 0xff) << 16 | (k[23] & 0xff) << 24,\n        j13 = k[24] & 0xff | (k[25] & 0xff) << 8 | (k[26] & 0xff) << 16 | (k[27] & 0xff) << 24,\n        j14 = k[28] & 0xff | (k[29] & 0xff) << 8 | (k[30] & 0xff) << 16 | (k[31] & 0xff) << 24,\n        j15 = c[12] & 0xff | (c[13] & 0xff) << 8 | (c[14] & 0xff) << 16 | (c[15] & 0xff) << 24;\n    var x0 = j0,\n        x1 = j1,\n        x2 = j2,\n        x3 = j3,\n        x4 = j4,\n        x5 = j5,\n        x6 = j6,\n        x7 = j7,\n        x8 = j8,\n        x9 = j9,\n        x10 = j10,\n        x11 = j11,\n        x12 = j12,\n        x13 = j13,\n        x14 = j14,\n        x15 = j15,\n        u;\n\n    for (var i = 0; i < 20; i += 2) {\n      u = x0 + x12 | 0;\n      x4 ^= u << 7 | u >>> 32 - 7;\n      u = x4 + x0 | 0;\n      x8 ^= u << 9 | u >>> 32 - 9;\n      u = x8 + x4 | 0;\n      x12 ^= u << 13 | u >>> 32 - 13;\n      u = x12 + x8 | 0;\n      x0 ^= u << 18 | u >>> 32 - 18;\n      u = x5 + x1 | 0;\n      x9 ^= u << 7 | u >>> 32 - 7;\n      u = x9 + x5 | 0;\n      x13 ^= u << 9 | u >>> 32 - 9;\n      u = x13 + x9 | 0;\n      x1 ^= u << 13 | u >>> 32 - 13;\n      u = x1 + x13 | 0;\n      x5 ^= u << 18 | u >>> 32 - 18;\n      u = x10 + x6 | 0;\n      x14 ^= u << 7 | u >>> 32 - 7;\n      u = x14 + x10 | 0;\n      x2 ^= u << 9 | u >>> 32 - 9;\n      u = x2 + x14 | 0;\n      x6 ^= u << 13 | u >>> 32 - 13;\n      u = x6 + x2 | 0;\n      x10 ^= u << 18 | u >>> 32 - 18;\n      u = x15 + x11 | 0;\n      x3 ^= u << 7 | u >>> 32 - 7;\n      u = x3 + x15 | 0;\n      x7 ^= u << 9 | u >>> 32 - 9;\n      u = x7 + x3 | 0;\n      x11 ^= u << 13 | u >>> 32 - 13;\n      u = x11 + x7 | 0;\n      x15 ^= u << 18 | u >>> 32 - 18;\n      u = x0 + x3 | 0;\n      x1 ^= u << 7 | u >>> 32 - 7;\n      u = x1 + x0 | 0;\n      x2 ^= u << 9 | u >>> 32 - 9;\n      u = x2 + x1 | 0;\n      x3 ^= u << 13 | u >>> 32 - 13;\n      u = x3 + x2 | 0;\n      x0 ^= u << 18 | u >>> 32 - 18;\n      u = x5 + x4 | 0;\n      x6 ^= u << 7 | u >>> 32 - 7;\n      u = x6 + x5 | 0;\n      x7 ^= u << 9 | u >>> 32 - 9;\n      u = x7 + x6 | 0;\n      x4 ^= u << 13 | u >>> 32 - 13;\n      u = x4 + x7 | 0;\n      x5 ^= u << 18 | u >>> 32 - 18;\n      u = x10 + x9 | 0;\n      x11 ^= u << 7 | u >>> 32 - 7;\n      u = x11 + x10 | 0;\n      x8 ^= u << 9 | u >>> 32 - 9;\n      u = x8 + x11 | 0;\n      x9 ^= u << 13 | u >>> 32 - 13;\n      u = x9 + x8 | 0;\n      x10 ^= u << 18 | u >>> 32 - 18;\n      u = x15 + x14 | 0;\n      x12 ^= u << 7 | u >>> 32 - 7;\n      u = x12 + x15 | 0;\n      x13 ^= u << 9 | u >>> 32 - 9;\n      u = x13 + x12 | 0;\n      x14 ^= u << 13 | u >>> 32 - 13;\n      u = x14 + x13 | 0;\n      x15 ^= u << 18 | u >>> 32 - 18;\n    }\n\n    o[0] = x0 >>> 0 & 0xff;\n    o[1] = x0 >>> 8 & 0xff;\n    o[2] = x0 >>> 16 & 0xff;\n    o[3] = x0 >>> 24 & 0xff;\n    o[4] = x5 >>> 0 & 0xff;\n    o[5] = x5 >>> 8 & 0xff;\n    o[6] = x5 >>> 16 & 0xff;\n    o[7] = x5 >>> 24 & 0xff;\n    o[8] = x10 >>> 0 & 0xff;\n    o[9] = x10 >>> 8 & 0xff;\n    o[10] = x10 >>> 16 & 0xff;\n    o[11] = x10 >>> 24 & 0xff;\n    o[12] = x15 >>> 0 & 0xff;\n    o[13] = x15 >>> 8 & 0xff;\n    o[14] = x15 >>> 16 & 0xff;\n    o[15] = x15 >>> 24 & 0xff;\n    o[16] = x6 >>> 0 & 0xff;\n    o[17] = x6 >>> 8 & 0xff;\n    o[18] = x6 >>> 16 & 0xff;\n    o[19] = x6 >>> 24 & 0xff;\n    o[20] = x7 >>> 0 & 0xff;\n    o[21] = x7 >>> 8 & 0xff;\n    o[22] = x7 >>> 16 & 0xff;\n    o[23] = x7 >>> 24 & 0xff;\n    o[24] = x8 >>> 0 & 0xff;\n    o[25] = x8 >>> 8 & 0xff;\n    o[26] = x8 >>> 16 & 0xff;\n    o[27] = x8 >>> 24 & 0xff;\n    o[28] = x9 >>> 0 & 0xff;\n    o[29] = x9 >>> 8 & 0xff;\n    o[30] = x9 >>> 16 & 0xff;\n    o[31] = x9 >>> 24 & 0xff;\n  }\n\n  function crypto_core_salsa20(out, inp, k, c) {\n    core_salsa20(out, inp, k, c);\n  }\n\n  function crypto_core_hsalsa20(out, inp, k, c) {\n    core_hsalsa20(out, inp, k, c);\n  }\n\n  var sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]); // \"expand 32-byte k\"\n\n  function crypto_stream_salsa20_xor(c, cpos, m, mpos, b, n, k) {\n    var z = new Uint8Array(16),\n        x = new Uint8Array(64);\n    var u, i;\n\n    for (i = 0; i < 16; i++) {\n      z[i] = 0;\n    }\n\n    for (i = 0; i < 8; i++) {\n      z[i] = n[i];\n    }\n\n    while (b >= 64) {\n      crypto_core_salsa20(x, z, k, sigma);\n\n      for (i = 0; i < 64; i++) {\n        c[cpos + i] = m[mpos + i] ^ x[i];\n      }\n\n      u = 1;\n\n      for (i = 8; i < 16; i++) {\n        u = u + (z[i] & 0xff) | 0;\n        z[i] = u & 0xff;\n        u >>>= 8;\n      }\n\n      b -= 64;\n      cpos += 64;\n      mpos += 64;\n    }\n\n    if (b > 0) {\n      crypto_core_salsa20(x, z, k, sigma);\n\n      for (i = 0; i < b; i++) {\n        c[cpos + i] = m[mpos + i] ^ x[i];\n      }\n    }\n\n    return 0;\n  }\n\n  function crypto_stream_salsa20(c, cpos, b, n, k) {\n    var z = new Uint8Array(16),\n        x = new Uint8Array(64);\n    var u, i;\n\n    for (i = 0; i < 16; i++) {\n      z[i] = 0;\n    }\n\n    for (i = 0; i < 8; i++) {\n      z[i] = n[i];\n    }\n\n    while (b >= 64) {\n      crypto_core_salsa20(x, z, k, sigma);\n\n      for (i = 0; i < 64; i++) {\n        c[cpos + i] = x[i];\n      }\n\n      u = 1;\n\n      for (i = 8; i < 16; i++) {\n        u = u + (z[i] & 0xff) | 0;\n        z[i] = u & 0xff;\n        u >>>= 8;\n      }\n\n      b -= 64;\n      cpos += 64;\n    }\n\n    if (b > 0) {\n      crypto_core_salsa20(x, z, k, sigma);\n\n      for (i = 0; i < b; i++) {\n        c[cpos + i] = x[i];\n      }\n    }\n\n    return 0;\n  }\n\n  function crypto_stream(c, cpos, d, n, k) {\n    var s = new Uint8Array(32);\n    crypto_core_hsalsa20(s, n, k, sigma);\n    var sn = new Uint8Array(8);\n\n    for (var i = 0; i < 8; i++) {\n      sn[i] = n[i + 16];\n    }\n\n    return crypto_stream_salsa20(c, cpos, d, sn, s);\n  }\n\n  function crypto_stream_xor(c, cpos, m, mpos, d, n, k) {\n    var s = new Uint8Array(32);\n    crypto_core_hsalsa20(s, n, k, sigma);\n    var sn = new Uint8Array(8);\n\n    for (var i = 0; i < 8; i++) {\n      sn[i] = n[i + 16];\n    }\n\n    return crypto_stream_salsa20_xor(c, cpos, m, mpos, d, sn, s);\n  }\n  /*\n  * Port of Andrew Moon's Poly1305-donna-16. Public domain.\n  * https://github.com/floodyberry/poly1305-donna\n  */\n\n\n  var poly1305 = function poly1305(key) {\n    this.buffer = new Uint8Array(16);\n    this.r = new Uint16Array(10);\n    this.h = new Uint16Array(10);\n    this.pad = new Uint16Array(8);\n    this.leftover = 0;\n    this.fin = 0;\n    var t0, t1, t2, t3, t4, t5, t6, t7;\n    t0 = key[0] & 0xff | (key[1] & 0xff) << 8;\n    this.r[0] = t0 & 0x1fff;\n    t1 = key[2] & 0xff | (key[3] & 0xff) << 8;\n    this.r[1] = (t0 >>> 13 | t1 << 3) & 0x1fff;\n    t2 = key[4] & 0xff | (key[5] & 0xff) << 8;\n    this.r[2] = (t1 >>> 10 | t2 << 6) & 0x1f03;\n    t3 = key[6] & 0xff | (key[7] & 0xff) << 8;\n    this.r[3] = (t2 >>> 7 | t3 << 9) & 0x1fff;\n    t4 = key[8] & 0xff | (key[9] & 0xff) << 8;\n    this.r[4] = (t3 >>> 4 | t4 << 12) & 0x00ff;\n    this.r[5] = t4 >>> 1 & 0x1ffe;\n    t5 = key[10] & 0xff | (key[11] & 0xff) << 8;\n    this.r[6] = (t4 >>> 14 | t5 << 2) & 0x1fff;\n    t6 = key[12] & 0xff | (key[13] & 0xff) << 8;\n    this.r[7] = (t5 >>> 11 | t6 << 5) & 0x1f81;\n    t7 = key[14] & 0xff | (key[15] & 0xff) << 8;\n    this.r[8] = (t6 >>> 8 | t7 << 8) & 0x1fff;\n    this.r[9] = t7 >>> 5 & 0x007f;\n    this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n    this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n    this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n    this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n    this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n    this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n    this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n    this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n  };\n\n  poly1305.prototype.blocks = function (m, mpos, bytes) {\n    var hibit = this.fin ? 0 : 1 << 11;\n    var t0, t1, t2, t3, t4, t5, t6, t7, c;\n    var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n    var h0 = this.h[0],\n        h1 = this.h[1],\n        h2 = this.h[2],\n        h3 = this.h[3],\n        h4 = this.h[4],\n        h5 = this.h[5],\n        h6 = this.h[6],\n        h7 = this.h[7],\n        h8 = this.h[8],\n        h9 = this.h[9];\n    var r0 = this.r[0],\n        r1 = this.r[1],\n        r2 = this.r[2],\n        r3 = this.r[3],\n        r4 = this.r[4],\n        r5 = this.r[5],\n        r6 = this.r[6],\n        r7 = this.r[7],\n        r8 = this.r[8],\n        r9 = this.r[9];\n\n    while (bytes >= 16) {\n      t0 = m[mpos + 0] & 0xff | (m[mpos + 1] & 0xff) << 8;\n      h0 += t0 & 0x1fff;\n      t1 = m[mpos + 2] & 0xff | (m[mpos + 3] & 0xff) << 8;\n      h1 += (t0 >>> 13 | t1 << 3) & 0x1fff;\n      t2 = m[mpos + 4] & 0xff | (m[mpos + 5] & 0xff) << 8;\n      h2 += (t1 >>> 10 | t2 << 6) & 0x1fff;\n      t3 = m[mpos + 6] & 0xff | (m[mpos + 7] & 0xff) << 8;\n      h3 += (t2 >>> 7 | t3 << 9) & 0x1fff;\n      t4 = m[mpos + 8] & 0xff | (m[mpos + 9] & 0xff) << 8;\n      h4 += (t3 >>> 4 | t4 << 12) & 0x1fff;\n      h5 += t4 >>> 1 & 0x1fff;\n      t5 = m[mpos + 10] & 0xff | (m[mpos + 11] & 0xff) << 8;\n      h6 += (t4 >>> 14 | t5 << 2) & 0x1fff;\n      t6 = m[mpos + 12] & 0xff | (m[mpos + 13] & 0xff) << 8;\n      h7 += (t5 >>> 11 | t6 << 5) & 0x1fff;\n      t7 = m[mpos + 14] & 0xff | (m[mpos + 15] & 0xff) << 8;\n      h8 += (t6 >>> 8 | t7 << 8) & 0x1fff;\n      h9 += t7 >>> 5 | hibit;\n      c = 0;\n      d0 = c;\n      d0 += h0 * r0;\n      d0 += h1 * (5 * r9);\n      d0 += h2 * (5 * r8);\n      d0 += h3 * (5 * r7);\n      d0 += h4 * (5 * r6);\n      c = d0 >>> 13;\n      d0 &= 0x1fff;\n      d0 += h5 * (5 * r5);\n      d0 += h6 * (5 * r4);\n      d0 += h7 * (5 * r3);\n      d0 += h8 * (5 * r2);\n      d0 += h9 * (5 * r1);\n      c += d0 >>> 13;\n      d0 &= 0x1fff;\n      d1 = c;\n      d1 += h0 * r1;\n      d1 += h1 * r0;\n      d1 += h2 * (5 * r9);\n      d1 += h3 * (5 * r8);\n      d1 += h4 * (5 * r7);\n      c = d1 >>> 13;\n      d1 &= 0x1fff;\n      d1 += h5 * (5 * r6);\n      d1 += h6 * (5 * r5);\n      d1 += h7 * (5 * r4);\n      d1 += h8 * (5 * r3);\n      d1 += h9 * (5 * r2);\n      c += d1 >>> 13;\n      d1 &= 0x1fff;\n      d2 = c;\n      d2 += h0 * r2;\n      d2 += h1 * r1;\n      d2 += h2 * r0;\n      d2 += h3 * (5 * r9);\n      d2 += h4 * (5 * r8);\n      c = d2 >>> 13;\n      d2 &= 0x1fff;\n      d2 += h5 * (5 * r7);\n      d2 += h6 * (5 * r6);\n      d2 += h7 * (5 * r5);\n      d2 += h8 * (5 * r4);\n      d2 += h9 * (5 * r3);\n      c += d2 >>> 13;\n      d2 &= 0x1fff;\n      d3 = c;\n      d3 += h0 * r3;\n      d3 += h1 * r2;\n      d3 += h2 * r1;\n      d3 += h3 * r0;\n      d3 += h4 * (5 * r9);\n      c = d3 >>> 13;\n      d3 &= 0x1fff;\n      d3 += h5 * (5 * r8);\n      d3 += h6 * (5 * r7);\n      d3 += h7 * (5 * r6);\n      d3 += h8 * (5 * r5);\n      d3 += h9 * (5 * r4);\n      c += d3 >>> 13;\n      d3 &= 0x1fff;\n      d4 = c;\n      d4 += h0 * r4;\n      d4 += h1 * r3;\n      d4 += h2 * r2;\n      d4 += h3 * r1;\n      d4 += h4 * r0;\n      c = d4 >>> 13;\n      d4 &= 0x1fff;\n      d4 += h5 * (5 * r9);\n      d4 += h6 * (5 * r8);\n      d4 += h7 * (5 * r7);\n      d4 += h8 * (5 * r6);\n      d4 += h9 * (5 * r5);\n      c += d4 >>> 13;\n      d4 &= 0x1fff;\n      d5 = c;\n      d5 += h0 * r5;\n      d5 += h1 * r4;\n      d5 += h2 * r3;\n      d5 += h3 * r2;\n      d5 += h4 * r1;\n      c = d5 >>> 13;\n      d5 &= 0x1fff;\n      d5 += h5 * r0;\n      d5 += h6 * (5 * r9);\n      d5 += h7 * (5 * r8);\n      d5 += h8 * (5 * r7);\n      d5 += h9 * (5 * r6);\n      c += d5 >>> 13;\n      d5 &= 0x1fff;\n      d6 = c;\n      d6 += h0 * r6;\n      d6 += h1 * r5;\n      d6 += h2 * r4;\n      d6 += h3 * r3;\n      d6 += h4 * r2;\n      c = d6 >>> 13;\n      d6 &= 0x1fff;\n      d6 += h5 * r1;\n      d6 += h6 * r0;\n      d6 += h7 * (5 * r9);\n      d6 += h8 * (5 * r8);\n      d6 += h9 * (5 * r7);\n      c += d6 >>> 13;\n      d6 &= 0x1fff;\n      d7 = c;\n      d7 += h0 * r7;\n      d7 += h1 * r6;\n      d7 += h2 * r5;\n      d7 += h3 * r4;\n      d7 += h4 * r3;\n      c = d7 >>> 13;\n      d7 &= 0x1fff;\n      d7 += h5 * r2;\n      d7 += h6 * r1;\n      d7 += h7 * r0;\n      d7 += h8 * (5 * r9);\n      d7 += h9 * (5 * r8);\n      c += d7 >>> 13;\n      d7 &= 0x1fff;\n      d8 = c;\n      d8 += h0 * r8;\n      d8 += h1 * r7;\n      d8 += h2 * r6;\n      d8 += h3 * r5;\n      d8 += h4 * r4;\n      c = d8 >>> 13;\n      d8 &= 0x1fff;\n      d8 += h5 * r3;\n      d8 += h6 * r2;\n      d8 += h7 * r1;\n      d8 += h8 * r0;\n      d8 += h9 * (5 * r9);\n      c += d8 >>> 13;\n      d8 &= 0x1fff;\n      d9 = c;\n      d9 += h0 * r9;\n      d9 += h1 * r8;\n      d9 += h2 * r7;\n      d9 += h3 * r6;\n      d9 += h4 * r5;\n      c = d9 >>> 13;\n      d9 &= 0x1fff;\n      d9 += h5 * r4;\n      d9 += h6 * r3;\n      d9 += h7 * r2;\n      d9 += h8 * r1;\n      d9 += h9 * r0;\n      c += d9 >>> 13;\n      d9 &= 0x1fff;\n      c = (c << 2) + c | 0;\n      c = c + d0 | 0;\n      d0 = c & 0x1fff;\n      c = c >>> 13;\n      d1 += c;\n      h0 = d0;\n      h1 = d1;\n      h2 = d2;\n      h3 = d3;\n      h4 = d4;\n      h5 = d5;\n      h6 = d6;\n      h7 = d7;\n      h8 = d8;\n      h9 = d9;\n      mpos += 16;\n      bytes -= 16;\n    }\n\n    this.h[0] = h0;\n    this.h[1] = h1;\n    this.h[2] = h2;\n    this.h[3] = h3;\n    this.h[4] = h4;\n    this.h[5] = h5;\n    this.h[6] = h6;\n    this.h[7] = h7;\n    this.h[8] = h8;\n    this.h[9] = h9;\n  };\n\n  poly1305.prototype.finish = function (mac, macpos) {\n    var g = new Uint16Array(10);\n    var c, mask, f, i;\n\n    if (this.leftover) {\n      i = this.leftover;\n      this.buffer[i++] = 1;\n\n      for (; i < 16; i++) {\n        this.buffer[i] = 0;\n      }\n\n      this.fin = 1;\n      this.blocks(this.buffer, 0, 16);\n    }\n\n    c = this.h[1] >>> 13;\n    this.h[1] &= 0x1fff;\n\n    for (i = 2; i < 10; i++) {\n      this.h[i] += c;\n      c = this.h[i] >>> 13;\n      this.h[i] &= 0x1fff;\n    }\n\n    this.h[0] += c * 5;\n    c = this.h[0] >>> 13;\n    this.h[0] &= 0x1fff;\n    this.h[1] += c;\n    c = this.h[1] >>> 13;\n    this.h[1] &= 0x1fff;\n    this.h[2] += c;\n    g[0] = this.h[0] + 5;\n    c = g[0] >>> 13;\n    g[0] &= 0x1fff;\n\n    for (i = 1; i < 10; i++) {\n      g[i] = this.h[i] + c;\n      c = g[i] >>> 13;\n      g[i] &= 0x1fff;\n    }\n\n    g[9] -= 1 << 13;\n    mask = (c ^ 1) - 1;\n\n    for (i = 0; i < 10; i++) {\n      g[i] &= mask;\n    }\n\n    mask = ~mask;\n\n    for (i = 0; i < 10; i++) {\n      this.h[i] = this.h[i] & mask | g[i];\n    }\n\n    this.h[0] = (this.h[0] | this.h[1] << 13) & 0xffff;\n    this.h[1] = (this.h[1] >>> 3 | this.h[2] << 10) & 0xffff;\n    this.h[2] = (this.h[2] >>> 6 | this.h[3] << 7) & 0xffff;\n    this.h[3] = (this.h[3] >>> 9 | this.h[4] << 4) & 0xffff;\n    this.h[4] = (this.h[4] >>> 12 | this.h[5] << 1 | this.h[6] << 14) & 0xffff;\n    this.h[5] = (this.h[6] >>> 2 | this.h[7] << 11) & 0xffff;\n    this.h[6] = (this.h[7] >>> 5 | this.h[8] << 8) & 0xffff;\n    this.h[7] = (this.h[8] >>> 8 | this.h[9] << 5) & 0xffff;\n    f = this.h[0] + this.pad[0];\n    this.h[0] = f & 0xffff;\n\n    for (i = 1; i < 8; i++) {\n      f = (this.h[i] + this.pad[i] | 0) + (f >>> 16) | 0;\n      this.h[i] = f & 0xffff;\n    }\n\n    mac[macpos + 0] = this.h[0] >>> 0 & 0xff;\n    mac[macpos + 1] = this.h[0] >>> 8 & 0xff;\n    mac[macpos + 2] = this.h[1] >>> 0 & 0xff;\n    mac[macpos + 3] = this.h[1] >>> 8 & 0xff;\n    mac[macpos + 4] = this.h[2] >>> 0 & 0xff;\n    mac[macpos + 5] = this.h[2] >>> 8 & 0xff;\n    mac[macpos + 6] = this.h[3] >>> 0 & 0xff;\n    mac[macpos + 7] = this.h[3] >>> 8 & 0xff;\n    mac[macpos + 8] = this.h[4] >>> 0 & 0xff;\n    mac[macpos + 9] = this.h[4] >>> 8 & 0xff;\n    mac[macpos + 10] = this.h[5] >>> 0 & 0xff;\n    mac[macpos + 11] = this.h[5] >>> 8 & 0xff;\n    mac[macpos + 12] = this.h[6] >>> 0 & 0xff;\n    mac[macpos + 13] = this.h[6] >>> 8 & 0xff;\n    mac[macpos + 14] = this.h[7] >>> 0 & 0xff;\n    mac[macpos + 15] = this.h[7] >>> 8 & 0xff;\n  };\n\n  poly1305.prototype.update = function (m, mpos, bytes) {\n    var i, want;\n\n    if (this.leftover) {\n      want = 16 - this.leftover;\n      if (want > bytes) want = bytes;\n\n      for (i = 0; i < want; i++) {\n        this.buffer[this.leftover + i] = m[mpos + i];\n      }\n\n      bytes -= want;\n      mpos += want;\n      this.leftover += want;\n      if (this.leftover < 16) return;\n      this.blocks(this.buffer, 0, 16);\n      this.leftover = 0;\n    }\n\n    if (bytes >= 16) {\n      want = bytes - bytes % 16;\n      this.blocks(m, mpos, want);\n      mpos += want;\n      bytes -= want;\n    }\n\n    if (bytes) {\n      for (i = 0; i < bytes; i++) {\n        this.buffer[this.leftover + i] = m[mpos + i];\n      }\n\n      this.leftover += bytes;\n    }\n  };\n\n  function crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n    var s = new poly1305(k);\n    s.update(m, mpos, n);\n    s.finish(out, outpos);\n    return 0;\n  }\n\n  function crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n    var x = new Uint8Array(16);\n    crypto_onetimeauth(x, 0, m, mpos, n, k);\n    return crypto_verify_16(h, hpos, x, 0);\n  }\n\n  function crypto_secretbox(c, m, d, n, k) {\n    var i;\n    if (d < 32) return -1;\n    crypto_stream_xor(c, 0, m, 0, d, n, k);\n    crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n\n    for (i = 0; i < 16; i++) {\n      c[i] = 0;\n    }\n\n    return 0;\n  }\n\n  function crypto_secretbox_open(m, c, d, n, k) {\n    var i;\n    var x = new Uint8Array(32);\n    if (d < 32) return -1;\n    crypto_stream(x, 0, 32, n, k);\n    if (crypto_onetimeauth_verify(c, 16, c, 32, d - 32, x) !== 0) return -1;\n    crypto_stream_xor(m, 0, c, 0, d, n, k);\n\n    for (i = 0; i < 32; i++) {\n      m[i] = 0;\n    }\n\n    return 0;\n  }\n\n  function set25519(r, a) {\n    var i;\n\n    for (i = 0; i < 16; i++) {\n      r[i] = a[i] | 0;\n    }\n  }\n\n  function car25519(o) {\n    var i,\n        v,\n        c = 1;\n\n    for (i = 0; i < 16; i++) {\n      v = o[i] + c + 65535;\n      c = Math.floor(v / 65536);\n      o[i] = v - c * 65536;\n    }\n\n    o[0] += c - 1 + 37 * (c - 1);\n  }\n\n  function sel25519(p, q, b) {\n    var t,\n        c = ~(b - 1);\n\n    for (var i = 0; i < 16; i++) {\n      t = c & (p[i] ^ q[i]);\n      p[i] ^= t;\n      q[i] ^= t;\n    }\n  }\n\n  function pack25519(o, n) {\n    var i, j, b;\n    var m = gf(),\n        t = gf();\n\n    for (i = 0; i < 16; i++) {\n      t[i] = n[i];\n    }\n\n    car25519(t);\n    car25519(t);\n    car25519(t);\n\n    for (j = 0; j < 2; j++) {\n      m[0] = t[0] - 0xffed;\n\n      for (i = 1; i < 15; i++) {\n        m[i] = t[i] - 0xffff - (m[i - 1] >> 16 & 1);\n        m[i - 1] &= 0xffff;\n      }\n\n      m[15] = t[15] - 0x7fff - (m[14] >> 16 & 1);\n      b = m[15] >> 16 & 1;\n      m[14] &= 0xffff;\n      sel25519(t, m, 1 - b);\n    }\n\n    for (i = 0; i < 16; i++) {\n      o[2 * i] = t[i] & 0xff;\n      o[2 * i + 1] = t[i] >> 8;\n    }\n  }\n\n  function neq25519(a, b) {\n    var c = new Uint8Array(32),\n        d = new Uint8Array(32);\n    pack25519(c, a);\n    pack25519(d, b);\n    return crypto_verify_32(c, 0, d, 0);\n  }\n\n  function par25519(a) {\n    var d = new Uint8Array(32);\n    pack25519(d, a);\n    return d[0] & 1;\n  }\n\n  function unpack25519(o, n) {\n    var i;\n\n    for (i = 0; i < 16; i++) {\n      o[i] = n[2 * i] + (n[2 * i + 1] << 8);\n    }\n\n    o[15] &= 0x7fff;\n  }\n\n  function A(o, a, b) {\n    for (var i = 0; i < 16; i++) {\n      o[i] = a[i] + b[i];\n    }\n  }\n\n  function Z(o, a, b) {\n    for (var i = 0; i < 16; i++) {\n      o[i] = a[i] - b[i];\n    }\n  }\n\n  function M(o, a, b) {\n    var v,\n        c,\n        t0 = 0,\n        t1 = 0,\n        t2 = 0,\n        t3 = 0,\n        t4 = 0,\n        t5 = 0,\n        t6 = 0,\n        t7 = 0,\n        t8 = 0,\n        t9 = 0,\n        t10 = 0,\n        t11 = 0,\n        t12 = 0,\n        t13 = 0,\n        t14 = 0,\n        t15 = 0,\n        t16 = 0,\n        t17 = 0,\n        t18 = 0,\n        t19 = 0,\n        t20 = 0,\n        t21 = 0,\n        t22 = 0,\n        t23 = 0,\n        t24 = 0,\n        t25 = 0,\n        t26 = 0,\n        t27 = 0,\n        t28 = 0,\n        t29 = 0,\n        t30 = 0,\n        b0 = b[0],\n        b1 = b[1],\n        b2 = b[2],\n        b3 = b[3],\n        b4 = b[4],\n        b5 = b[5],\n        b6 = b[6],\n        b7 = b[7],\n        b8 = b[8],\n        b9 = b[9],\n        b10 = b[10],\n        b11 = b[11],\n        b12 = b[12],\n        b13 = b[13],\n        b14 = b[14],\n        b15 = b[15];\n    v = a[0];\n    t0 += v * b0;\n    t1 += v * b1;\n    t2 += v * b2;\n    t3 += v * b3;\n    t4 += v * b4;\n    t5 += v * b5;\n    t6 += v * b6;\n    t7 += v * b7;\n    t8 += v * b8;\n    t9 += v * b9;\n    t10 += v * b10;\n    t11 += v * b11;\n    t12 += v * b12;\n    t13 += v * b13;\n    t14 += v * b14;\n    t15 += v * b15;\n    v = a[1];\n    t1 += v * b0;\n    t2 += v * b1;\n    t3 += v * b2;\n    t4 += v * b3;\n    t5 += v * b4;\n    t6 += v * b5;\n    t7 += v * b6;\n    t8 += v * b7;\n    t9 += v * b8;\n    t10 += v * b9;\n    t11 += v * b10;\n    t12 += v * b11;\n    t13 += v * b12;\n    t14 += v * b13;\n    t15 += v * b14;\n    t16 += v * b15;\n    v = a[2];\n    t2 += v * b0;\n    t3 += v * b1;\n    t4 += v * b2;\n    t5 += v * b3;\n    t6 += v * b4;\n    t7 += v * b5;\n    t8 += v * b6;\n    t9 += v * b7;\n    t10 += v * b8;\n    t11 += v * b9;\n    t12 += v * b10;\n    t13 += v * b11;\n    t14 += v * b12;\n    t15 += v * b13;\n    t16 += v * b14;\n    t17 += v * b15;\n    v = a[3];\n    t3 += v * b0;\n    t4 += v * b1;\n    t5 += v * b2;\n    t6 += v * b3;\n    t7 += v * b4;\n    t8 += v * b5;\n    t9 += v * b6;\n    t10 += v * b7;\n    t11 += v * b8;\n    t12 += v * b9;\n    t13 += v * b10;\n    t14 += v * b11;\n    t15 += v * b12;\n    t16 += v * b13;\n    t17 += v * b14;\n    t18 += v * b15;\n    v = a[4];\n    t4 += v * b0;\n    t5 += v * b1;\n    t6 += v * b2;\n    t7 += v * b3;\n    t8 += v * b4;\n    t9 += v * b5;\n    t10 += v * b6;\n    t11 += v * b7;\n    t12 += v * b8;\n    t13 += v * b9;\n    t14 += v * b10;\n    t15 += v * b11;\n    t16 += v * b12;\n    t17 += v * b13;\n    t18 += v * b14;\n    t19 += v * b15;\n    v = a[5];\n    t5 += v * b0;\n    t6 += v * b1;\n    t7 += v * b2;\n    t8 += v * b3;\n    t9 += v * b4;\n    t10 += v * b5;\n    t11 += v * b6;\n    t12 += v * b7;\n    t13 += v * b8;\n    t14 += v * b9;\n    t15 += v * b10;\n    t16 += v * b11;\n    t17 += v * b12;\n    t18 += v * b13;\n    t19 += v * b14;\n    t20 += v * b15;\n    v = a[6];\n    t6 += v * b0;\n    t7 += v * b1;\n    t8 += v * b2;\n    t9 += v * b3;\n    t10 += v * b4;\n    t11 += v * b5;\n    t12 += v * b6;\n    t13 += v * b7;\n    t14 += v * b8;\n    t15 += v * b9;\n    t16 += v * b10;\n    t17 += v * b11;\n    t18 += v * b12;\n    t19 += v * b13;\n    t20 += v * b14;\n    t21 += v * b15;\n    v = a[7];\n    t7 += v * b0;\n    t8 += v * b1;\n    t9 += v * b2;\n    t10 += v * b3;\n    t11 += v * b4;\n    t12 += v * b5;\n    t13 += v * b6;\n    t14 += v * b7;\n    t15 += v * b8;\n    t16 += v * b9;\n    t17 += v * b10;\n    t18 += v * b11;\n    t19 += v * b12;\n    t20 += v * b13;\n    t21 += v * b14;\n    t22 += v * b15;\n    v = a[8];\n    t8 += v * b0;\n    t9 += v * b1;\n    t10 += v * b2;\n    t11 += v * b3;\n    t12 += v * b4;\n    t13 += v * b5;\n    t14 += v * b6;\n    t15 += v * b7;\n    t16 += v * b8;\n    t17 += v * b9;\n    t18 += v * b10;\n    t19 += v * b11;\n    t20 += v * b12;\n    t21 += v * b13;\n    t22 += v * b14;\n    t23 += v * b15;\n    v = a[9];\n    t9 += v * b0;\n    t10 += v * b1;\n    t11 += v * b2;\n    t12 += v * b3;\n    t13 += v * b4;\n    t14 += v * b5;\n    t15 += v * b6;\n    t16 += v * b7;\n    t17 += v * b8;\n    t18 += v * b9;\n    t19 += v * b10;\n    t20 += v * b11;\n    t21 += v * b12;\n    t22 += v * b13;\n    t23 += v * b14;\n    t24 += v * b15;\n    v = a[10];\n    t10 += v * b0;\n    t11 += v * b1;\n    t12 += v * b2;\n    t13 += v * b3;\n    t14 += v * b4;\n    t15 += v * b5;\n    t16 += v * b6;\n    t17 += v * b7;\n    t18 += v * b8;\n    t19 += v * b9;\n    t20 += v * b10;\n    t21 += v * b11;\n    t22 += v * b12;\n    t23 += v * b13;\n    t24 += v * b14;\n    t25 += v * b15;\n    v = a[11];\n    t11 += v * b0;\n    t12 += v * b1;\n    t13 += v * b2;\n    t14 += v * b3;\n    t15 += v * b4;\n    t16 += v * b5;\n    t17 += v * b6;\n    t18 += v * b7;\n    t19 += v * b8;\n    t20 += v * b9;\n    t21 += v * b10;\n    t22 += v * b11;\n    t23 += v * b12;\n    t24 += v * b13;\n    t25 += v * b14;\n    t26 += v * b15;\n    v = a[12];\n    t12 += v * b0;\n    t13 += v * b1;\n    t14 += v * b2;\n    t15 += v * b3;\n    t16 += v * b4;\n    t17 += v * b5;\n    t18 += v * b6;\n    t19 += v * b7;\n    t20 += v * b8;\n    t21 += v * b9;\n    t22 += v * b10;\n    t23 += v * b11;\n    t24 += v * b12;\n    t25 += v * b13;\n    t26 += v * b14;\n    t27 += v * b15;\n    v = a[13];\n    t13 += v * b0;\n    t14 += v * b1;\n    t15 += v * b2;\n    t16 += v * b3;\n    t17 += v * b4;\n    t18 += v * b5;\n    t19 += v * b6;\n    t20 += v * b7;\n    t21 += v * b8;\n    t22 += v * b9;\n    t23 += v * b10;\n    t24 += v * b11;\n    t25 += v * b12;\n    t26 += v * b13;\n    t27 += v * b14;\n    t28 += v * b15;\n    v = a[14];\n    t14 += v * b0;\n    t15 += v * b1;\n    t16 += v * b2;\n    t17 += v * b3;\n    t18 += v * b4;\n    t19 += v * b5;\n    t20 += v * b6;\n    t21 += v * b7;\n    t22 += v * b8;\n    t23 += v * b9;\n    t24 += v * b10;\n    t25 += v * b11;\n    t26 += v * b12;\n    t27 += v * b13;\n    t28 += v * b14;\n    t29 += v * b15;\n    v = a[15];\n    t15 += v * b0;\n    t16 += v * b1;\n    t17 += v * b2;\n    t18 += v * b3;\n    t19 += v * b4;\n    t20 += v * b5;\n    t21 += v * b6;\n    t22 += v * b7;\n    t23 += v * b8;\n    t24 += v * b9;\n    t25 += v * b10;\n    t26 += v * b11;\n    t27 += v * b12;\n    t28 += v * b13;\n    t29 += v * b14;\n    t30 += v * b15;\n    t0 += 38 * t16;\n    t1 += 38 * t17;\n    t2 += 38 * t18;\n    t3 += 38 * t19;\n    t4 += 38 * t20;\n    t5 += 38 * t21;\n    t6 += 38 * t22;\n    t7 += 38 * t23;\n    t8 += 38 * t24;\n    t9 += 38 * t25;\n    t10 += 38 * t26;\n    t11 += 38 * t27;\n    t12 += 38 * t28;\n    t13 += 38 * t29;\n    t14 += 38 * t30; // t15 left as is\n    // first car\n\n    c = 1;\n    v = t0 + c + 65535;\n    c = Math.floor(v / 65536);\n    t0 = v - c * 65536;\n    v = t1 + c + 65535;\n    c = Math.floor(v / 65536);\n    t1 = v - c * 65536;\n    v = t2 + c + 65535;\n    c = Math.floor(v / 65536);\n    t2 = v - c * 65536;\n    v = t3 + c + 65535;\n    c = Math.floor(v / 65536);\n    t3 = v - c * 65536;\n    v = t4 + c + 65535;\n    c = Math.floor(v / 65536);\n    t4 = v - c * 65536;\n    v = t5 + c + 65535;\n    c = Math.floor(v / 65536);\n    t5 = v - c * 65536;\n    v = t6 + c + 65535;\n    c = Math.floor(v / 65536);\n    t6 = v - c * 65536;\n    v = t7 + c + 65535;\n    c = Math.floor(v / 65536);\n    t7 = v - c * 65536;\n    v = t8 + c + 65535;\n    c = Math.floor(v / 65536);\n    t8 = v - c * 65536;\n    v = t9 + c + 65535;\n    c = Math.floor(v / 65536);\n    t9 = v - c * 65536;\n    v = t10 + c + 65535;\n    c = Math.floor(v / 65536);\n    t10 = v - c * 65536;\n    v = t11 + c + 65535;\n    c = Math.floor(v / 65536);\n    t11 = v - c * 65536;\n    v = t12 + c + 65535;\n    c = Math.floor(v / 65536);\n    t12 = v - c * 65536;\n    v = t13 + c + 65535;\n    c = Math.floor(v / 65536);\n    t13 = v - c * 65536;\n    v = t14 + c + 65535;\n    c = Math.floor(v / 65536);\n    t14 = v - c * 65536;\n    v = t15 + c + 65535;\n    c = Math.floor(v / 65536);\n    t15 = v - c * 65536;\n    t0 += c - 1 + 37 * (c - 1); // second car\n\n    c = 1;\n    v = t0 + c + 65535;\n    c = Math.floor(v / 65536);\n    t0 = v - c * 65536;\n    v = t1 + c + 65535;\n    c = Math.floor(v / 65536);\n    t1 = v - c * 65536;\n    v = t2 + c + 65535;\n    c = Math.floor(v / 65536);\n    t2 = v - c * 65536;\n    v = t3 + c + 65535;\n    c = Math.floor(v / 65536);\n    t3 = v - c * 65536;\n    v = t4 + c + 65535;\n    c = Math.floor(v / 65536);\n    t4 = v - c * 65536;\n    v = t5 + c + 65535;\n    c = Math.floor(v / 65536);\n    t5 = v - c * 65536;\n    v = t6 + c + 65535;\n    c = Math.floor(v / 65536);\n    t6 = v - c * 65536;\n    v = t7 + c + 65535;\n    c = Math.floor(v / 65536);\n    t7 = v - c * 65536;\n    v = t8 + c + 65535;\n    c = Math.floor(v / 65536);\n    t8 = v - c * 65536;\n    v = t9 + c + 65535;\n    c = Math.floor(v / 65536);\n    t9 = v - c * 65536;\n    v = t10 + c + 65535;\n    c = Math.floor(v / 65536);\n    t10 = v - c * 65536;\n    v = t11 + c + 65535;\n    c = Math.floor(v / 65536);\n    t11 = v - c * 65536;\n    v = t12 + c + 65535;\n    c = Math.floor(v / 65536);\n    t12 = v - c * 65536;\n    v = t13 + c + 65535;\n    c = Math.floor(v / 65536);\n    t13 = v - c * 65536;\n    v = t14 + c + 65535;\n    c = Math.floor(v / 65536);\n    t14 = v - c * 65536;\n    v = t15 + c + 65535;\n    c = Math.floor(v / 65536);\n    t15 = v - c * 65536;\n    t0 += c - 1 + 37 * (c - 1);\n    o[0] = t0;\n    o[1] = t1;\n    o[2] = t2;\n    o[3] = t3;\n    o[4] = t4;\n    o[5] = t5;\n    o[6] = t6;\n    o[7] = t7;\n    o[8] = t8;\n    o[9] = t9;\n    o[10] = t10;\n    o[11] = t11;\n    o[12] = t12;\n    o[13] = t13;\n    o[14] = t14;\n    o[15] = t15;\n  }\n\n  function S(o, a) {\n    M(o, a, a);\n  }\n\n  function inv25519(o, i) {\n    var c = gf();\n    var a;\n\n    for (a = 0; a < 16; a++) {\n      c[a] = i[a];\n    }\n\n    for (a = 253; a >= 0; a--) {\n      S(c, c);\n      if (a !== 2 && a !== 4) M(c, c, i);\n    }\n\n    for (a = 0; a < 16; a++) {\n      o[a] = c[a];\n    }\n  }\n\n  function pow2523(o, i) {\n    var c = gf();\n    var a;\n\n    for (a = 0; a < 16; a++) {\n      c[a] = i[a];\n    }\n\n    for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if (a !== 1) M(c, c, i);\n    }\n\n    for (a = 0; a < 16; a++) {\n      o[a] = c[a];\n    }\n  }\n\n  function crypto_scalarmult(q, n, p) {\n    var z = new Uint8Array(32);\n    var x = new Float64Array(80),\n        r,\n        i;\n    var a = gf(),\n        b = gf(),\n        c = gf(),\n        d = gf(),\n        e = gf(),\n        f = gf();\n\n    for (i = 0; i < 31; i++) {\n      z[i] = n[i];\n    }\n\n    z[31] = n[31] & 127 | 64;\n    z[0] &= 248;\n    unpack25519(x, p);\n\n    for (i = 0; i < 16; i++) {\n      b[i] = x[i];\n      d[i] = a[i] = c[i] = 0;\n    }\n\n    a[0] = d[0] = 1;\n\n    for (i = 254; i >= 0; --i) {\n      r = z[i >>> 3] >>> (i & 7) & 1;\n      sel25519(a, b, r);\n      sel25519(c, d, r);\n      A(e, a, c);\n      Z(a, a, c);\n      A(c, b, d);\n      Z(b, b, d);\n      S(d, e);\n      S(f, a);\n      M(a, c, a);\n      M(c, b, e);\n      A(e, a, c);\n      Z(a, a, c);\n      S(b, a);\n      Z(c, d, f);\n      M(a, c, _121665);\n      A(a, a, d);\n      M(c, c, a);\n      M(a, d, f);\n      M(d, b, x);\n      S(b, e);\n      sel25519(a, b, r);\n      sel25519(c, d, r);\n    }\n\n    for (i = 0; i < 16; i++) {\n      x[i + 16] = a[i];\n      x[i + 32] = c[i];\n      x[i + 48] = b[i];\n      x[i + 64] = d[i];\n    }\n\n    var x32 = x.subarray(32);\n    var x16 = x.subarray(16);\n    inv25519(x32, x32);\n    M(x16, x16, x32);\n    pack25519(q, x16);\n    return 0;\n  }\n\n  function crypto_scalarmult_base(q, n) {\n    return crypto_scalarmult(q, n, _9);\n  }\n\n  function crypto_box_keypair(y, x) {\n    randombytes(x, 32);\n    return crypto_scalarmult_base(y, x);\n  }\n\n  function crypto_box_beforenm(k, y, x) {\n    var s = new Uint8Array(32);\n    crypto_scalarmult(s, x, y);\n    return crypto_core_hsalsa20(k, _0, s, sigma);\n  }\n\n  var crypto_box_afternm = crypto_secretbox;\n  var crypto_box_open_afternm = crypto_secretbox_open;\n\n  function crypto_box(c, m, d, n, y, x) {\n    var k = new Uint8Array(32);\n    crypto_box_beforenm(k, y, x);\n    return crypto_box_afternm(c, m, d, n, k);\n  }\n\n  function crypto_box_open(m, c, d, n, y, x) {\n    var k = new Uint8Array(32);\n    crypto_box_beforenm(k, y, x);\n    return crypto_box_open_afternm(m, c, d, n, k);\n  }\n\n  var K = [0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd, 0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc, 0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019, 0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118, 0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe, 0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2, 0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1, 0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694, 0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3, 0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65, 0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483, 0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5, 0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210, 0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4, 0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725, 0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70, 0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926, 0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df, 0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8, 0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b, 0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001, 0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30, 0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910, 0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8, 0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53, 0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8, 0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb, 0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3, 0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60, 0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec, 0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9, 0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b, 0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207, 0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178, 0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6, 0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b, 0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493, 0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c, 0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a, 0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817];\n\n  function crypto_hashblocks_hl(hh, hl, m, n) {\n    var wh = new Int32Array(16),\n        wl = new Int32Array(16),\n        bh0,\n        bh1,\n        bh2,\n        bh3,\n        bh4,\n        bh5,\n        bh6,\n        bh7,\n        bl0,\n        bl1,\n        bl2,\n        bl3,\n        bl4,\n        bl5,\n        bl6,\n        bl7,\n        th,\n        tl,\n        i,\n        j,\n        h,\n        l,\n        a,\n        b,\n        c,\n        d;\n    var ah0 = hh[0],\n        ah1 = hh[1],\n        ah2 = hh[2],\n        ah3 = hh[3],\n        ah4 = hh[4],\n        ah5 = hh[5],\n        ah6 = hh[6],\n        ah7 = hh[7],\n        al0 = hl[0],\n        al1 = hl[1],\n        al2 = hl[2],\n        al3 = hl[3],\n        al4 = hl[4],\n        al5 = hl[5],\n        al6 = hl[6],\n        al7 = hl[7];\n    var pos = 0;\n\n    while (n >= 128) {\n      for (i = 0; i < 16; i++) {\n        j = 8 * i + pos;\n        wh[i] = m[j + 0] << 24 | m[j + 1] << 16 | m[j + 2] << 8 | m[j + 3];\n        wl[i] = m[j + 4] << 24 | m[j + 5] << 16 | m[j + 6] << 8 | m[j + 7];\n      }\n\n      for (i = 0; i < 80; i++) {\n        bh0 = ah0;\n        bh1 = ah1;\n        bh2 = ah2;\n        bh3 = ah3;\n        bh4 = ah4;\n        bh5 = ah5;\n        bh6 = ah6;\n        bh7 = ah7;\n        bl0 = al0;\n        bl1 = al1;\n        bl2 = al2;\n        bl3 = al3;\n        bl4 = al4;\n        bl5 = al5;\n        bl6 = al6;\n        bl7 = al7; // add\n\n        h = ah7;\n        l = al7;\n        a = l & 0xffff;\n        b = l >>> 16;\n        c = h & 0xffff;\n        d = h >>> 16; // Sigma1\n\n        h = (ah4 >>> 14 | al4 << 32 - 14) ^ (ah4 >>> 18 | al4 << 32 - 18) ^ (al4 >>> 41 - 32 | ah4 << 32 - (41 - 32));\n        l = (al4 >>> 14 | ah4 << 32 - 14) ^ (al4 >>> 18 | ah4 << 32 - 18) ^ (ah4 >>> 41 - 32 | al4 << 32 - (41 - 32));\n        a += l & 0xffff;\n        b += l >>> 16;\n        c += h & 0xffff;\n        d += h >>> 16; // Ch\n\n        h = ah4 & ah5 ^ ~ah4 & ah6;\n        l = al4 & al5 ^ ~al4 & al6;\n        a += l & 0xffff;\n        b += l >>> 16;\n        c += h & 0xffff;\n        d += h >>> 16; // K\n\n        h = K[i * 2];\n        l = K[i * 2 + 1];\n        a += l & 0xffff;\n        b += l >>> 16;\n        c += h & 0xffff;\n        d += h >>> 16; // w\n\n        h = wh[i % 16];\n        l = wl[i % 16];\n        a += l & 0xffff;\n        b += l >>> 16;\n        c += h & 0xffff;\n        d += h >>> 16;\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n        th = c & 0xffff | d << 16;\n        tl = a & 0xffff | b << 16; // add\n\n        h = th;\n        l = tl;\n        a = l & 0xffff;\n        b = l >>> 16;\n        c = h & 0xffff;\n        d = h >>> 16; // Sigma0\n\n        h = (ah0 >>> 28 | al0 << 32 - 28) ^ (al0 >>> 34 - 32 | ah0 << 32 - (34 - 32)) ^ (al0 >>> 39 - 32 | ah0 << 32 - (39 - 32));\n        l = (al0 >>> 28 | ah0 << 32 - 28) ^ (ah0 >>> 34 - 32 | al0 << 32 - (34 - 32)) ^ (ah0 >>> 39 - 32 | al0 << 32 - (39 - 32));\n        a += l & 0xffff;\n        b += l >>> 16;\n        c += h & 0xffff;\n        d += h >>> 16; // Maj\n\n        h = ah0 & ah1 ^ ah0 & ah2 ^ ah1 & ah2;\n        l = al0 & al1 ^ al0 & al2 ^ al1 & al2;\n        a += l & 0xffff;\n        b += l >>> 16;\n        c += h & 0xffff;\n        d += h >>> 16;\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n        bh7 = c & 0xffff | d << 16;\n        bl7 = a & 0xffff | b << 16; // add\n\n        h = bh3;\n        l = bl3;\n        a = l & 0xffff;\n        b = l >>> 16;\n        c = h & 0xffff;\n        d = h >>> 16;\n        h = th;\n        l = tl;\n        a += l & 0xffff;\n        b += l >>> 16;\n        c += h & 0xffff;\n        d += h >>> 16;\n        b += a >>> 16;\n        c += b >>> 16;\n        d += c >>> 16;\n        bh3 = c & 0xffff | d << 16;\n        bl3 = a & 0xffff | b << 16;\n        ah1 = bh0;\n        ah2 = bh1;\n        ah3 = bh2;\n        ah4 = bh3;\n        ah5 = bh4;\n        ah6 = bh5;\n        ah7 = bh6;\n        ah0 = bh7;\n        al1 = bl0;\n        al2 = bl1;\n        al3 = bl2;\n        al4 = bl3;\n        al5 = bl4;\n        al6 = bl5;\n        al7 = bl6;\n        al0 = bl7;\n\n        if (i % 16 === 15) {\n          for (j = 0; j < 16; j++) {\n            // add\n            h = wh[j];\n            l = wl[j];\n            a = l & 0xffff;\n            b = l >>> 16;\n            c = h & 0xffff;\n            d = h >>> 16;\n            h = wh[(j + 9) % 16];\n            l = wl[(j + 9) % 16];\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16; // sigma0\n\n            th = wh[(j + 1) % 16];\n            tl = wl[(j + 1) % 16];\n            h = (th >>> 1 | tl << 32 - 1) ^ (th >>> 8 | tl << 32 - 8) ^ th >>> 7;\n            l = (tl >>> 1 | th << 32 - 1) ^ (tl >>> 8 | th << 32 - 8) ^ (tl >>> 7 | th << 32 - 7);\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16; // sigma1\n\n            th = wh[(j + 14) % 16];\n            tl = wl[(j + 14) % 16];\n            h = (th >>> 19 | tl << 32 - 19) ^ (tl >>> 61 - 32 | th << 32 - (61 - 32)) ^ th >>> 6;\n            l = (tl >>> 19 | th << 32 - 19) ^ (th >>> 61 - 32 | tl << 32 - (61 - 32)) ^ (tl >>> 6 | th << 32 - 6);\n            a += l & 0xffff;\n            b += l >>> 16;\n            c += h & 0xffff;\n            d += h >>> 16;\n            b += a >>> 16;\n            c += b >>> 16;\n            d += c >>> 16;\n            wh[j] = c & 0xffff | d << 16;\n            wl[j] = a & 0xffff | b << 16;\n          }\n        }\n      } // add\n\n\n      h = ah0;\n      l = al0;\n      a = l & 0xffff;\n      b = l >>> 16;\n      c = h & 0xffff;\n      d = h >>> 16;\n      h = hh[0];\n      l = hl[0];\n      a += l & 0xffff;\n      b += l >>> 16;\n      c += h & 0xffff;\n      d += h >>> 16;\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n      hh[0] = ah0 = c & 0xffff | d << 16;\n      hl[0] = al0 = a & 0xffff | b << 16;\n      h = ah1;\n      l = al1;\n      a = l & 0xffff;\n      b = l >>> 16;\n      c = h & 0xffff;\n      d = h >>> 16;\n      h = hh[1];\n      l = hl[1];\n      a += l & 0xffff;\n      b += l >>> 16;\n      c += h & 0xffff;\n      d += h >>> 16;\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n      hh[1] = ah1 = c & 0xffff | d << 16;\n      hl[1] = al1 = a & 0xffff | b << 16;\n      h = ah2;\n      l = al2;\n      a = l & 0xffff;\n      b = l >>> 16;\n      c = h & 0xffff;\n      d = h >>> 16;\n      h = hh[2];\n      l = hl[2];\n      a += l & 0xffff;\n      b += l >>> 16;\n      c += h & 0xffff;\n      d += h >>> 16;\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n      hh[2] = ah2 = c & 0xffff | d << 16;\n      hl[2] = al2 = a & 0xffff | b << 16;\n      h = ah3;\n      l = al3;\n      a = l & 0xffff;\n      b = l >>> 16;\n      c = h & 0xffff;\n      d = h >>> 16;\n      h = hh[3];\n      l = hl[3];\n      a += l & 0xffff;\n      b += l >>> 16;\n      c += h & 0xffff;\n      d += h >>> 16;\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n      hh[3] = ah3 = c & 0xffff | d << 16;\n      hl[3] = al3 = a & 0xffff | b << 16;\n      h = ah4;\n      l = al4;\n      a = l & 0xffff;\n      b = l >>> 16;\n      c = h & 0xffff;\n      d = h >>> 16;\n      h = hh[4];\n      l = hl[4];\n      a += l & 0xffff;\n      b += l >>> 16;\n      c += h & 0xffff;\n      d += h >>> 16;\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n      hh[4] = ah4 = c & 0xffff | d << 16;\n      hl[4] = al4 = a & 0xffff | b << 16;\n      h = ah5;\n      l = al5;\n      a = l & 0xffff;\n      b = l >>> 16;\n      c = h & 0xffff;\n      d = h >>> 16;\n      h = hh[5];\n      l = hl[5];\n      a += l & 0xffff;\n      b += l >>> 16;\n      c += h & 0xffff;\n      d += h >>> 16;\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n      hh[5] = ah5 = c & 0xffff | d << 16;\n      hl[5] = al5 = a & 0xffff | b << 16;\n      h = ah6;\n      l = al6;\n      a = l & 0xffff;\n      b = l >>> 16;\n      c = h & 0xffff;\n      d = h >>> 16;\n      h = hh[6];\n      l = hl[6];\n      a += l & 0xffff;\n      b += l >>> 16;\n      c += h & 0xffff;\n      d += h >>> 16;\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n      hh[6] = ah6 = c & 0xffff | d << 16;\n      hl[6] = al6 = a & 0xffff | b << 16;\n      h = ah7;\n      l = al7;\n      a = l & 0xffff;\n      b = l >>> 16;\n      c = h & 0xffff;\n      d = h >>> 16;\n      h = hh[7];\n      l = hl[7];\n      a += l & 0xffff;\n      b += l >>> 16;\n      c += h & 0xffff;\n      d += h >>> 16;\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n      hh[7] = ah7 = c & 0xffff | d << 16;\n      hl[7] = al7 = a & 0xffff | b << 16;\n      pos += 128;\n      n -= 128;\n    }\n\n    return n;\n  }\n\n  function crypto_hash(out, m, n) {\n    var hh = new Int32Array(8),\n        hl = new Int32Array(8),\n        x = new Uint8Array(256),\n        i,\n        b = n;\n    hh[0] = 0x6a09e667;\n    hh[1] = 0xbb67ae85;\n    hh[2] = 0x3c6ef372;\n    hh[3] = 0xa54ff53a;\n    hh[4] = 0x510e527f;\n    hh[5] = 0x9b05688c;\n    hh[6] = 0x1f83d9ab;\n    hh[7] = 0x5be0cd19;\n    hl[0] = 0xf3bcc908;\n    hl[1] = 0x84caa73b;\n    hl[2] = 0xfe94f82b;\n    hl[3] = 0x5f1d36f1;\n    hl[4] = 0xade682d1;\n    hl[5] = 0x2b3e6c1f;\n    hl[6] = 0xfb41bd6b;\n    hl[7] = 0x137e2179;\n    crypto_hashblocks_hl(hh, hl, m, n);\n    n %= 128;\n\n    for (i = 0; i < n; i++) {\n      x[i] = m[b - n + i];\n    }\n\n    x[n] = 128;\n    n = 256 - 128 * (n < 112 ? 1 : 0);\n    x[n - 9] = 0;\n    ts64(x, n - 8, b / 0x20000000 | 0, b << 3);\n    crypto_hashblocks_hl(hh, hl, x, n);\n\n    for (i = 0; i < 8; i++) {\n      ts64(out, 8 * i, hh[i], hl[i]);\n    }\n\n    return 0;\n  }\n\n  function add(p, q) {\n    var a = gf(),\n        b = gf(),\n        c = gf(),\n        d = gf(),\n        e = gf(),\n        f = gf(),\n        g = gf(),\n        h = gf(),\n        t = gf();\n    Z(a, p[1], p[0]);\n    Z(t, q[1], q[0]);\n    M(a, a, t);\n    A(b, p[0], p[1]);\n    A(t, q[0], q[1]);\n    M(b, b, t);\n    M(c, p[3], q[3]);\n    M(c, c, D2);\n    M(d, p[2], q[2]);\n    A(d, d, d);\n    Z(e, b, a);\n    Z(f, d, c);\n    A(g, d, c);\n    A(h, b, a);\n    M(p[0], e, f);\n    M(p[1], h, g);\n    M(p[2], g, f);\n    M(p[3], e, h);\n  }\n\n  function cswap(p, q, b) {\n    var i;\n\n    for (i = 0; i < 4; i++) {\n      sel25519(p[i], q[i], b);\n    }\n  }\n\n  function pack(r, p) {\n    var tx = gf(),\n        ty = gf(),\n        zi = gf();\n    inv25519(zi, p[2]);\n    M(tx, p[0], zi);\n    M(ty, p[1], zi);\n    pack25519(r, ty);\n    r[31] ^= par25519(tx) << 7;\n  }\n\n  function scalarmult(p, q, s) {\n    var b, i;\n    set25519(p[0], gf0);\n    set25519(p[1], gf1);\n    set25519(p[2], gf1);\n    set25519(p[3], gf0);\n\n    for (i = 255; i >= 0; --i) {\n      b = s[i / 8 | 0] >> (i & 7) & 1;\n      cswap(p, q, b);\n      add(q, p);\n      add(p, p);\n      cswap(p, q, b);\n    }\n  }\n\n  function scalarbase(p, s) {\n    var q = [gf(), gf(), gf(), gf()];\n    set25519(q[0], X);\n    set25519(q[1], Y);\n    set25519(q[2], gf1);\n    M(q[3], X, Y);\n    scalarmult(p, q, s);\n  }\n\n  function crypto_sign_keypair(pk, sk, seeded) {\n    var d = new Uint8Array(64);\n    var p = [gf(), gf(), gf(), gf()];\n    var i;\n    if (!seeded) randombytes(sk, 32);\n    crypto_hash(d, sk, 32);\n    d[0] &= 248;\n    d[31] &= 127;\n    d[31] |= 64;\n    scalarbase(p, d);\n    pack(pk, p);\n\n    for (i = 0; i < 32; i++) {\n      sk[i + 32] = pk[i];\n    }\n\n    return 0;\n  }\n\n  var L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\n  function modL(r, x) {\n    var carry, i, j, k;\n\n    for (i = 63; i >= 32; --i) {\n      carry = 0;\n\n      for (j = i - 32, k = i - 12; j < k; ++j) {\n        x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n        carry = Math.floor((x[j] + 128) / 256);\n        x[j] -= carry * 256;\n      }\n\n      x[j] += carry;\n      x[i] = 0;\n    }\n\n    carry = 0;\n\n    for (j = 0; j < 32; j++) {\n      x[j] += carry - (x[31] >> 4) * L[j];\n      carry = x[j] >> 8;\n      x[j] &= 255;\n    }\n\n    for (j = 0; j < 32; j++) {\n      x[j] -= carry * L[j];\n    }\n\n    for (i = 0; i < 32; i++) {\n      x[i + 1] += x[i] >> 8;\n      r[i] = x[i] & 255;\n    }\n  }\n\n  function reduce(r) {\n    var x = new Float64Array(64),\n        i;\n\n    for (i = 0; i < 64; i++) {\n      x[i] = r[i];\n    }\n\n    for (i = 0; i < 64; i++) {\n      r[i] = 0;\n    }\n\n    modL(r, x);\n  } // Note: difference from C - smlen returned, not passed as argument.\n\n\n  function crypto_sign(sm, m, n, sk) {\n    var d = new Uint8Array(64),\n        h = new Uint8Array(64),\n        r = new Uint8Array(64);\n    var i,\n        j,\n        x = new Float64Array(64);\n    var p = [gf(), gf(), gf(), gf()];\n    crypto_hash(d, sk, 32);\n    d[0] &= 248;\n    d[31] &= 127;\n    d[31] |= 64;\n    var smlen = n + 64;\n\n    for (i = 0; i < n; i++) {\n      sm[64 + i] = m[i];\n    }\n\n    for (i = 0; i < 32; i++) {\n      sm[32 + i] = d[32 + i];\n    }\n\n    crypto_hash(r, sm.subarray(32), n + 32);\n    reduce(r);\n    scalarbase(p, r);\n    pack(sm, p);\n\n    for (i = 32; i < 64; i++) {\n      sm[i] = sk[i];\n    }\n\n    crypto_hash(h, sm, n + 64);\n    reduce(h);\n\n    for (i = 0; i < 64; i++) {\n      x[i] = 0;\n    }\n\n    for (i = 0; i < 32; i++) {\n      x[i] = r[i];\n    }\n\n    for (i = 0; i < 32; i++) {\n      for (j = 0; j < 32; j++) {\n        x[i + j] += h[i] * d[j];\n      }\n    }\n\n    modL(sm.subarray(32), x);\n    return smlen;\n  }\n\n  function unpackneg(r, p) {\n    var t = gf(),\n        chk = gf(),\n        num = gf(),\n        den = gf(),\n        den2 = gf(),\n        den4 = gf(),\n        den6 = gf();\n    set25519(r[2], gf1);\n    unpack25519(r[1], p);\n    S(num, r[1]);\n    M(den, num, D);\n    Z(num, num, r[2]);\n    A(den, r[2], den);\n    S(den2, den);\n    S(den4, den2);\n    M(den6, den4, den2);\n    M(t, den6, num);\n    M(t, t, den);\n    pow2523(t, t);\n    M(t, t, num);\n    M(t, t, den);\n    M(t, t, den);\n    M(r[0], t, den);\n    S(chk, r[0]);\n    M(chk, chk, den);\n    if (neq25519(chk, num)) M(r[0], r[0], I);\n    S(chk, r[0]);\n    M(chk, chk, den);\n    if (neq25519(chk, num)) return -1;\n    if (par25519(r[0]) === p[31] >> 7) Z(r[0], gf0, r[0]);\n    M(r[3], r[0], r[1]);\n    return 0;\n  }\n\n  function crypto_sign_open(m, sm, n, pk) {\n    var i;\n    var t = new Uint8Array(32),\n        h = new Uint8Array(64);\n    var p = [gf(), gf(), gf(), gf()],\n        q = [gf(), gf(), gf(), gf()];\n    if (n < 64) return -1;\n    if (unpackneg(q, pk)) return -1;\n\n    for (i = 0; i < n; i++) {\n      m[i] = sm[i];\n    }\n\n    for (i = 0; i < 32; i++) {\n      m[i + 32] = pk[i];\n    }\n\n    crypto_hash(h, m, n);\n    reduce(h);\n    scalarmult(p, q, h);\n    scalarbase(q, sm.subarray(32));\n    add(p, q);\n    pack(t, p);\n    n -= 64;\n\n    if (crypto_verify_32(sm, 0, t, 0)) {\n      for (i = 0; i < n; i++) {\n        m[i] = 0;\n      }\n\n      return -1;\n    }\n\n    for (i = 0; i < n; i++) {\n      m[i] = sm[i + 64];\n    }\n\n    return n;\n  }\n\n  var crypto_secretbox_KEYBYTES = 32,\n      crypto_secretbox_NONCEBYTES = 24,\n      crypto_secretbox_ZEROBYTES = 32,\n      crypto_secretbox_BOXZEROBYTES = 16,\n      crypto_scalarmult_BYTES = 32,\n      crypto_scalarmult_SCALARBYTES = 32,\n      crypto_box_PUBLICKEYBYTES = 32,\n      crypto_box_SECRETKEYBYTES = 32,\n      crypto_box_BEFORENMBYTES = 32,\n      crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n      crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n      crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n      crypto_sign_BYTES = 64,\n      crypto_sign_PUBLICKEYBYTES = 32,\n      crypto_sign_SECRETKEYBYTES = 64,\n      crypto_sign_SEEDBYTES = 32,\n      crypto_hash_BYTES = 64;\n  nacl.lowlevel = {\n    crypto_core_hsalsa20: crypto_core_hsalsa20,\n    crypto_stream_xor: crypto_stream_xor,\n    crypto_stream: crypto_stream,\n    crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n    crypto_stream_salsa20: crypto_stream_salsa20,\n    crypto_onetimeauth: crypto_onetimeauth,\n    crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n    crypto_verify_16: crypto_verify_16,\n    crypto_verify_32: crypto_verify_32,\n    crypto_secretbox: crypto_secretbox,\n    crypto_secretbox_open: crypto_secretbox_open,\n    crypto_scalarmult: crypto_scalarmult,\n    crypto_scalarmult_base: crypto_scalarmult_base,\n    crypto_box_beforenm: crypto_box_beforenm,\n    crypto_box_afternm: crypto_box_afternm,\n    crypto_box: crypto_box,\n    crypto_box_open: crypto_box_open,\n    crypto_box_keypair: crypto_box_keypair,\n    crypto_hash: crypto_hash,\n    crypto_sign: crypto_sign,\n    crypto_sign_keypair: crypto_sign_keypair,\n    crypto_sign_open: crypto_sign_open,\n    crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n    crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n    crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n    crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n    crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n    crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n    crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n    crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n    crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n    crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n    crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n    crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n    crypto_sign_BYTES: crypto_sign_BYTES,\n    crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n    crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n    crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n    crypto_hash_BYTES: crypto_hash_BYTES,\n    gf: gf,\n    D: D,\n    L: L,\n    pack25519: pack25519,\n    unpack25519: unpack25519,\n    M: M,\n    A: A,\n    S: S,\n    Z: Z,\n    pow2523: pow2523,\n    add: add,\n    set25519: set25519,\n    modL: modL,\n    scalarmult: scalarmult,\n    scalarbase: scalarbase\n  };\n  /* High-level API */\n\n  function checkLengths(k, n) {\n    if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n    if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n  }\n\n  function checkBoxLengths(pk, sk) {\n    if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n    if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n  }\n\n  function checkArrayTypes() {\n    for (var i = 0; i < arguments.length; i++) {\n      if (!(arguments[i] instanceof Uint8Array)) throw new TypeError('unexpected type, use Uint8Array');\n    }\n  }\n\n  function cleanup(arr) {\n    for (var i = 0; i < arr.length; i++) {\n      arr[i] = 0;\n    }\n  }\n\n  nacl.randomBytes = function (n) {\n    var b = new Uint8Array(n);\n    randombytes(b, n);\n    return b;\n  };\n\n  nacl.secretbox = function (msg, nonce, key) {\n    checkArrayTypes(msg, nonce, key);\n    checkLengths(key, nonce);\n    var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n    var c = new Uint8Array(m.length);\n\n    for (var i = 0; i < msg.length; i++) {\n      m[i + crypto_secretbox_ZEROBYTES] = msg[i];\n    }\n\n    crypto_secretbox(c, m, m.length, nonce, key);\n    return c.subarray(crypto_secretbox_BOXZEROBYTES);\n  };\n\n  nacl.secretbox.open = function (box, nonce, key) {\n    checkArrayTypes(box, nonce, key);\n    checkLengths(key, nonce);\n    var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n    var m = new Uint8Array(c.length);\n\n    for (var i = 0; i < box.length; i++) {\n      c[i + crypto_secretbox_BOXZEROBYTES] = box[i];\n    }\n\n    if (c.length < 32) return null;\n    if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n    return m.subarray(crypto_secretbox_ZEROBYTES);\n  };\n\n  nacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\n  nacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\n  nacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\n  nacl.scalarMult = function (n, p) {\n    checkArrayTypes(n, p);\n    if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n    if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n    var q = new Uint8Array(crypto_scalarmult_BYTES);\n    crypto_scalarmult(q, n, p);\n    return q;\n  };\n\n  nacl.scalarMult.base = function (n) {\n    checkArrayTypes(n);\n    if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n    var q = new Uint8Array(crypto_scalarmult_BYTES);\n    crypto_scalarmult_base(q, n);\n    return q;\n  };\n\n  nacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\n  nacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\n  nacl.box = function (msg, nonce, publicKey, secretKey) {\n    var k = nacl.box.before(publicKey, secretKey);\n    return nacl.secretbox(msg, nonce, k);\n  };\n\n  nacl.box.before = function (publicKey, secretKey) {\n    checkArrayTypes(publicKey, secretKey);\n    checkBoxLengths(publicKey, secretKey);\n    var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n    crypto_box_beforenm(k, publicKey, secretKey);\n    return k;\n  };\n\n  nacl.box.after = nacl.secretbox;\n\n  nacl.box.open = function (msg, nonce, publicKey, secretKey) {\n    var k = nacl.box.before(publicKey, secretKey);\n    return nacl.secretbox.open(msg, nonce, k);\n  };\n\n  nacl.box.open.after = nacl.secretbox.open;\n\n  nacl.box.keyPair = function () {\n    var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n    var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n    crypto_box_keypair(pk, sk);\n    return {\n      publicKey: pk,\n      secretKey: sk\n    };\n  };\n\n  nacl.box.keyPair.fromSecretKey = function (secretKey) {\n    checkArrayTypes(secretKey);\n    if (secretKey.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n    var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n    crypto_scalarmult_base(pk, secretKey);\n    return {\n      publicKey: pk,\n      secretKey: new Uint8Array(secretKey)\n    };\n  };\n\n  nacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\n  nacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\n  nacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\n  nacl.box.nonceLength = crypto_box_NONCEBYTES;\n  nacl.box.overheadLength = nacl.secretbox.overheadLength;\n\n  nacl.sign = function (msg, secretKey) {\n    checkArrayTypes(msg, secretKey);\n    if (secretKey.length !== crypto_sign_SECRETKEYBYTES) throw new Error('bad secret key size');\n    var signedMsg = new Uint8Array(crypto_sign_BYTES + msg.length);\n    crypto_sign(signedMsg, msg, msg.length, secretKey);\n    return signedMsg;\n  };\n\n  nacl.sign.open = function (signedMsg, publicKey) {\n    checkArrayTypes(signedMsg, publicKey);\n    if (publicKey.length !== crypto_sign_PUBLICKEYBYTES) throw new Error('bad public key size');\n    var tmp = new Uint8Array(signedMsg.length);\n    var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n    if (mlen < 0) return null;\n    var m = new Uint8Array(mlen);\n\n    for (var i = 0; i < m.length; i++) {\n      m[i] = tmp[i];\n    }\n\n    return m;\n  };\n\n  nacl.sign.detached = function (msg, secretKey) {\n    var signedMsg = nacl.sign(msg, secretKey);\n    var sig = new Uint8Array(crypto_sign_BYTES);\n\n    for (var i = 0; i < sig.length; i++) {\n      sig[i] = signedMsg[i];\n    }\n\n    return sig;\n  };\n\n  nacl.sign.detached.verify = function (msg, sig, publicKey) {\n    checkArrayTypes(msg, sig, publicKey);\n    if (sig.length !== crypto_sign_BYTES) throw new Error('bad signature size');\n    if (publicKey.length !== crypto_sign_PUBLICKEYBYTES) throw new Error('bad public key size');\n    var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n    var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n    var i;\n\n    for (i = 0; i < crypto_sign_BYTES; i++) {\n      sm[i] = sig[i];\n    }\n\n    for (i = 0; i < msg.length; i++) {\n      sm[i + crypto_sign_BYTES] = msg[i];\n    }\n\n    return crypto_sign_open(m, sm, sm.length, publicKey) >= 0;\n  };\n\n  nacl.sign.keyPair = function () {\n    var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n    var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n    crypto_sign_keypair(pk, sk);\n    return {\n      publicKey: pk,\n      secretKey: sk\n    };\n  };\n\n  nacl.sign.keyPair.fromSecretKey = function (secretKey) {\n    checkArrayTypes(secretKey);\n    if (secretKey.length !== crypto_sign_SECRETKEYBYTES) throw new Error('bad secret key size');\n    var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n\n    for (var i = 0; i < pk.length; i++) {\n      pk[i] = secretKey[32 + i];\n    }\n\n    return {\n      publicKey: pk,\n      secretKey: new Uint8Array(secretKey)\n    };\n  };\n\n  nacl.sign.keyPair.fromSeed = function (seed) {\n    checkArrayTypes(seed);\n    if (seed.length !== crypto_sign_SEEDBYTES) throw new Error('bad seed size');\n    var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n    var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n\n    for (var i = 0; i < 32; i++) {\n      sk[i] = seed[i];\n    }\n\n    crypto_sign_keypair(pk, sk, true);\n    return {\n      publicKey: pk,\n      secretKey: sk\n    };\n  };\n\n  nacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\n  nacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\n  nacl.sign.seedLength = crypto_sign_SEEDBYTES;\n  nacl.sign.signatureLength = crypto_sign_BYTES;\n\n  nacl.hash = function (msg) {\n    checkArrayTypes(msg);\n    var h = new Uint8Array(crypto_hash_BYTES);\n    crypto_hash(h, msg, msg.length);\n    return h;\n  };\n\n  nacl.hash.hashLength = crypto_hash_BYTES;\n\n  nacl.verify = function (x, y) {\n    checkArrayTypes(x, y); // Zero length arguments are considered not equal.\n\n    if (x.length === 0 || y.length === 0) return false;\n    if (x.length !== y.length) return false;\n    return vn(x, 0, y, 0, x.length) === 0 ? true : false;\n  };\n\n  nacl.setPRNG = function (fn) {\n    randombytes = fn;\n  };\n\n  (function () {\n    // Initialize PRNG if environment provides CSPRNG.\n    // If not, methods calling randombytes will throw.\n    var crypto = typeof self !== 'undefined' ? self.crypto || self.msCrypto : null;\n\n    if (crypto && crypto.getRandomValues) {\n      // Browsers.\n      var QUOTA = 65536;\n      nacl.setPRNG(function (x, n) {\n        var i,\n            v = new Uint8Array(n);\n\n        for (i = 0; i < n; i += QUOTA) {\n          crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n        }\n\n        for (i = 0; i < n; i++) {\n          x[i] = v[i];\n        }\n\n        cleanup(v);\n      });\n    } else if (typeof require !== 'undefined') {\n      // Node.js.\n      crypto = require('crypto');\n\n      if (crypto && crypto.randomBytes) {\n        nacl.setPRNG(function (x, n) {\n          var i,\n              v = crypto.randomBytes(n);\n\n          for (i = 0; i < n; i++) {\n            x[i] = v[i];\n          }\n\n          cleanup(v);\n        });\n      }\n    }\n  })();\n})(typeof module !== 'undefined' && module.exports ? module.exports : self.nacl = self.nacl || {});","// Written in 2014-2016 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n(function (root, f) {\n  'use strict';\n\n  if (typeof module !== 'undefined' && module.exports) module.exports = f();else if (root.nacl) root.nacl.util = f();else {\n    root.nacl = {};\n    root.nacl.util = f();\n  }\n})(this, function () {\n  'use strict';\n\n  var util = {};\n\n  function validateBase64(s) {\n    if (!/^(?:[A-Za-z0-9+\\/]{2}[A-Za-z0-9+\\/]{2})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$/.test(s)) {\n      throw new TypeError('invalid encoding');\n    }\n  }\n\n  util.decodeUTF8 = function (s) {\n    if (typeof s !== 'string') throw new TypeError('expected string');\n    var i,\n        d = unescape(encodeURIComponent(s)),\n        b = new Uint8Array(d.length);\n\n    for (i = 0; i < d.length; i++) {\n      b[i] = d.charCodeAt(i);\n    }\n\n    return b;\n  };\n\n  util.encodeUTF8 = function (arr) {\n    var i,\n        s = [];\n\n    for (i = 0; i < arr.length; i++) {\n      s.push(String.fromCharCode(arr[i]));\n    }\n\n    return decodeURIComponent(escape(s.join('')));\n  };\n\n  if (typeof atob === 'undefined') {\n    // Node.js\n    if (typeof Buffer.from !== 'undefined') {\n      // Node v6 and later\n      util.encodeBase64 = function (arr) {\n        // v6 and later\n        return Buffer.from(arr).toString('base64');\n      };\n\n      util.decodeBase64 = function (s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(Buffer.from(s, 'base64'), 0));\n      };\n    } else {\n      // Node earlier than v6\n      util.encodeBase64 = function (arr) {\n        // v6 and later\n        return new Buffer(arr).toString('base64');\n      };\n\n      util.decodeBase64 = function (s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(new Buffer(s, 'base64'), 0));\n      };\n    }\n  } else {\n    // Browsers\n    util.encodeBase64 = function (arr) {\n      var i,\n          s = [],\n          len = arr.length;\n\n      for (i = 0; i < len; i++) {\n        s.push(String.fromCharCode(arr[i]));\n      }\n\n      return btoa(s.join(''));\n    };\n\n    util.decodeBase64 = function (s) {\n      validateBase64(s);\n      var i,\n          d = atob(s),\n          b = new Uint8Array(d.length);\n\n      for (i = 0; i < d.length; i++) {\n        b[i] = d.charCodeAt(i);\n      }\n\n      return b;\n    };\n  }\n\n  return util;\n});","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.baToJSON = exports.addHexPrefix = exports.toUnsigned = exports.fromSigned = exports.bufferToHex = exports.bufferToInt = exports.toBuffer = exports.stripZeros = exports.unpad = exports.setLengthRight = exports.setLength = exports.setLengthLeft = exports.zeros = void 0;\n\nvar ethjsUtil = require('ethjs-util');\n\nvar BN = require(\"bn.js\");\n/**\n * Returns a buffer filled with 0s.\n * @param bytes the number of bytes the buffer should be\n */\n\n\nexports.zeros = function (bytes) {\n  return Buffer.allocUnsafe(bytes).fill(0);\n};\n/**\n * Left Pads an `Array` or `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer|Array)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Buffer|Array)\n */\n\n\nexports.setLengthLeft = function (msg, length, right) {\n  if (right === void 0) {\n    right = false;\n  }\n\n  var buf = exports.zeros(length);\n  msg = exports.toBuffer(msg);\n\n  if (right) {\n    if (msg.length < length) {\n      msg.copy(buf);\n      return buf;\n    }\n\n    return msg.slice(0, length);\n  } else {\n    if (msg.length < length) {\n      msg.copy(buf, length - msg.length);\n      return buf;\n    }\n\n    return msg.slice(-length);\n  }\n};\n\nexports.setLength = exports.setLengthLeft;\n/**\n * Right Pads an `Array` or `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer|Array)\n * @param length the number of bytes the output should be\n * @return (Buffer|Array)\n */\n\nexports.setLengthRight = function (msg, length) {\n  return exports.setLength(msg, length, true);\n};\n/**\n * Trims leading zeros from a `Buffer` or an `Array`.\n * @param a (Buffer|Array|String)\n * @return (Buffer|Array|String)\n */\n\n\nexports.unpad = function (a) {\n  a = ethjsUtil.stripHexPrefix(a);\n  var first = a[0];\n\n  while (a.length > 0 && first.toString() === '0') {\n    a = a.slice(1);\n    first = a[0];\n  }\n\n  return a;\n};\n\nexports.stripZeros = exports.unpad;\n/**\n * Attempts to turn a value into a `Buffer`. As input it supports `Buffer`, `String`, `Number`, null/undefined, `BN` and other objects with a `toArray()` method.\n * @param v the value\n */\n\nexports.toBuffer = function (v) {\n  if (!Buffer.isBuffer(v)) {\n    if (Array.isArray(v)) {\n      v = Buffer.from(v);\n    } else if (typeof v === 'string') {\n      if (ethjsUtil.isHexString(v)) {\n        v = Buffer.from(ethjsUtil.padToEven(ethjsUtil.stripHexPrefix(v)), 'hex');\n      } else {\n        throw new Error(\"Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: \" + v);\n      }\n    } else if (typeof v === 'number') {\n      v = ethjsUtil.intToBuffer(v);\n    } else if (v === null || v === undefined) {\n      v = Buffer.allocUnsafe(0);\n    } else if (BN.isBN(v)) {\n      v = v.toArrayLike(Buffer);\n    } else if (v.toArray) {\n      // converts a BN to a Buffer\n      v = Buffer.from(v.toArray());\n    } else {\n      throw new Error('invalid type');\n    }\n  }\n\n  return v;\n};\n/**\n * Converts a `Buffer` to a `Number`.\n * @param buf `Buffer` object to convert\n * @throws If the input number exceeds 53 bits.\n */\n\n\nexports.bufferToInt = function (buf) {\n  return new BN(exports.toBuffer(buf)).toNumber();\n};\n/**\n * Converts a `Buffer` into a `0x`-prefixed hex `String`.\n * @param buf `Buffer` object to convert\n */\n\n\nexports.bufferToHex = function (buf) {\n  buf = exports.toBuffer(buf);\n  return '0x' + buf.toString('hex');\n};\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BN`. Assumes 256-bit numbers.\n * @param num Signed integer value\n */\n\n\nexports.fromSigned = function (num) {\n  return new BN(num).fromTwos(256);\n};\n/**\n * Converts a `BN` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param num\n */\n\n\nexports.toUnsigned = function (num) {\n  return Buffer.from(num.toTwos(256).toArray());\n};\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\".\n */\n\n\nexports.addHexPrefix = function (str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  return ethjsUtil.isHexPrefixed(str) ? str : '0x' + str;\n};\n/**\n * Converts a `Buffer` or `Array` to JSON.\n * @param ba (Buffer|Array)\n * @return (Array|String|null)\n */\n\n\nexports.baToJSON = function (ba) {\n  if (Buffer.isBuffer(ba)) {\n    return \"0x\" + ba.toString('hex');\n  } else if (ba instanceof Array) {\n    var array = [];\n\n    for (var i = 0; i < ba.length; i++) {\n      array.push(exports.baToJSON(ba[i]));\n    }\n\n    return array;\n  }\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ecdhUnsafe = exports.ecdh = exports.recover = exports.verify = exports.sign = exports.signatureImportLax = exports.signatureImport = exports.signatureExport = exports.signatureNormalize = exports.publicKeyCombine = exports.publicKeyTweakMul = exports.publicKeyTweakAdd = exports.publicKeyVerify = exports.publicKeyConvert = exports.publicKeyCreate = exports.privateKeyTweakMul = exports.privateKeyTweakAdd = exports.privateKeyModInverse = exports.privateKeyNegate = exports.privateKeyImport = exports.privateKeyExport = exports.privateKeyVerify = void 0;\n\nvar secp256k1 = require('ethereum-cryptography/secp256k1');\n\nvar secp256k1v3 = require('./secp256k1v3-lib/index');\n\nvar der = require('./secp256k1v3-lib/der');\n/**\n * Verify an ECDSA privateKey\n * @method privateKeyVerify\n * @param {Buffer} privateKey\n * @return {boolean}\n */\n\n\nexports.privateKeyVerify = function (privateKey) {\n  // secp256k1 v4 version throws when privateKey length is not 32\n  if (privateKey.length !== 32) {\n    return false;\n  }\n\n  return secp256k1.privateKeyVerify(Uint8Array.from(privateKey));\n};\n/**\n * Export a privateKey in DER format\n * @method privateKeyExport\n * @param {Buffer} privateKey\n * @param {boolean} compressed\n * @return {boolean}\n */\n\n\nexports.privateKeyExport = function (privateKey, compressed) {\n  // secp256k1 v4 version throws when privateKey length is not 32\n  if (privateKey.length !== 32) {\n    throw new RangeError('private key length is invalid');\n  }\n\n  var publicKey = secp256k1v3.privateKeyExport(privateKey, compressed);\n  return der.privateKeyExport(privateKey, publicKey, compressed);\n};\n/**\n * Import a privateKey in DER format\n * @method privateKeyImport\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\n\n\nexports.privateKeyImport = function (privateKey) {\n  // privateKeyImport method is not part of secp256k1 v4 package\n  // this implementation is based on v3\n  privateKey = der.privateKeyImport(privateKey);\n\n  if (privateKey !== null && privateKey.length === 32 && exports.privateKeyVerify(privateKey)) {\n    return privateKey;\n  }\n\n  throw new Error(\"couldn't import from DER format\");\n};\n/**\n * Negate a privateKey by subtracting it from the order of the curve's base point\n * @method privateKeyNegate\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\n\n\nexports.privateKeyNegate = function (privateKey) {\n  return Buffer.from(secp256k1.privateKeyNegate(Uint8Array.from(privateKey)));\n};\n/**\n * Compute the inverse of a privateKey (modulo the order of the curve's base point).\n * @method privateKeyModInverse\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\n\n\nexports.privateKeyModInverse = function (privateKey) {\n  if (privateKey.length !== 32) {\n    throw new Error('private key length is invalid');\n  }\n\n  return Buffer.from(secp256k1v3.privateKeyModInverse(Uint8Array.from(privateKey)));\n};\n/**\n * Tweak a privateKey by adding tweak to it.\n * @method privateKeyTweakAdd\n * @param {Buffer} privateKey\n * @param {Buffer} tweak\n * @return {Buffer}\n */\n\n\nexports.privateKeyTweakAdd = function (privateKey, tweak) {\n  return Buffer.from(secp256k1.privateKeyTweakAdd(Uint8Array.from(privateKey), tweak));\n};\n/**\n * Tweak a privateKey by multiplying it by a tweak.\n * @method privateKeyTweakMul\n * @param {Buffer} privateKey\n * @param {Buffer} tweak\n * @return {Buffer}\n */\n\n\nexports.privateKeyTweakMul = function (privateKey, tweak) {\n  return Buffer.from(secp256k1.privateKeyTweakMul(Uint8Array.from(privateKey), Uint8Array.from(tweak)));\n};\n/**\n * Compute the public key for a privateKey.\n * @method publicKeyCreate\n * @param {Buffer} privateKey\n * @param {boolean} compressed\n * @return {Buffer}\n */\n\n\nexports.publicKeyCreate = function (privateKey, compressed) {\n  return Buffer.from(secp256k1.publicKeyCreate(Uint8Array.from(privateKey), compressed));\n};\n/**\n * Convert a publicKey to compressed or uncompressed form.\n * @method publicKeyConvert\n * @param {Buffer} publicKey\n * @param {boolean} compressed\n * @return {Buffer}\n */\n\n\nexports.publicKeyConvert = function (publicKey, compressed) {\n  return Buffer.from(secp256k1.publicKeyConvert(Uint8Array.from(publicKey), compressed));\n};\n/**\n * Verify an ECDSA publicKey.\n * @method publicKeyVerify\n * @param {Buffer} publicKey\n * @return {boolean}\n */\n\n\nexports.publicKeyVerify = function (publicKey) {\n  // secp256k1 v4 version throws when publicKey length is not 33 or 65\n  if (publicKey.length !== 33 && publicKey.length !== 65) {\n    return false;\n  }\n\n  return secp256k1.publicKeyVerify(Uint8Array.from(publicKey));\n};\n/**\n * Tweak a publicKey by adding tweak times the generator to it.\n * @method publicKeyTweakAdd\n * @param {Buffer} publicKey\n * @param {Buffer} tweak\n * @param {boolean} compressed\n * @return {Buffer}\n */\n\n\nexports.publicKeyTweakAdd = function (publicKey, tweak, compressed) {\n  return Buffer.from(secp256k1.publicKeyTweakAdd(Uint8Array.from(publicKey), Uint8Array.from(tweak), compressed));\n};\n/**\n * Tweak a publicKey by multiplying it by a tweak value\n * @method publicKeyTweakMul\n * @param {Buffer} publicKey\n * @param {Buffer} tweak\n * @param {boolean} compressed\n * @return {Buffer}\n */\n\n\nexports.publicKeyTweakMul = function (publicKey, tweak, compressed) {\n  return Buffer.from(secp256k1.publicKeyTweakMul(Uint8Array.from(publicKey), Uint8Array.from(tweak), compressed));\n};\n/**\n * Add a given publicKeys together.\n * @method publicKeyCombine\n * @param {Array<Buffer>} publicKeys\n * @param {boolean} compressed\n * @return {Buffer}\n */\n\n\nexports.publicKeyCombine = function (publicKeys, compressed) {\n  var keys = [];\n  publicKeys.forEach(function (publicKey) {\n    keys.push(Uint8Array.from(publicKey));\n  });\n  return Buffer.from(secp256k1.publicKeyCombine(keys, compressed));\n};\n/**\n * Convert a signature to a normalized lower-S form.\n * @method signatureNormalize\n * @param {Buffer} signature\n * @return {Buffer}\n */\n\n\nexports.signatureNormalize = function (signature) {\n  return Buffer.from(secp256k1.signatureNormalize(Uint8Array.from(signature)));\n};\n/**\n * Serialize an ECDSA signature in DER format.\n * @method signatureExport\n * @param {Buffer} signature\n * @return {Buffer}\n */\n\n\nexports.signatureExport = function (signature) {\n  return Buffer.from(secp256k1.signatureExport(Uint8Array.from(signature)));\n};\n/**\n * Parse a DER ECDSA signature (follow by [BIP66](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki)).\n * @method signatureImport\n * @param {Buffer} signature\n * @return {Buffer}\n */\n\n\nexports.signatureImport = function (signature) {\n  return Buffer.from(secp256k1.signatureImport(Uint8Array.from(signature)));\n};\n/**\n * Parse a DER ECDSA signature (not follow by [BIP66](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki)).\n * @method signatureImportLax\n * @param {Buffer} signature\n * @return {Buffer}\n */\n\n\nexports.signatureImportLax = function (signature) {\n  // signatureImportLax method is not part of secp256k1 v4 package\n  // this implementation is based on v3\n  // ensure that signature is greater than 0\n  if (signature.length === 0) {\n    throw new RangeError('signature length is invalid');\n  }\n\n  var sigObj = der.signatureImportLax(signature);\n\n  if (sigObj === null) {\n    throw new Error(\"couldn't parse DER signature\");\n  }\n\n  return secp256k1v3.signatureImport(sigObj);\n};\n/**\n * Create an ECDSA signature. Always return low-S signature.\n * @method sign\n * @param {Buffer} message\n * @param {Buffer} privateKey\n * @param {Object} options\n * @return {Buffer}\n */\n\n\nexports.sign = function (message, privateKey, options) {\n  if (options === null) {\n    throw new TypeError('options should be an Object');\n  }\n\n  var signOptions = undefined;\n\n  if (options) {\n    signOptions = {};\n\n    if (options.data === null) {\n      // validate option.data length\n      throw new TypeError('options.data should be a Buffer');\n    }\n\n    if (options.data) {\n      if (options.data.length != 32) {\n        throw new RangeError('options.data length is invalid');\n      }\n\n      signOptions.data = new Uint8Array(options.data);\n    }\n\n    if (options.noncefn === null) {\n      throw new TypeError('options.noncefn should be a Function');\n    }\n\n    if (options.noncefn) {\n      // convert option.noncefn function signature\n      signOptions.noncefn = function (message, privateKey, algo, data, attempt) {\n        var bufferAlgo = algo != null ? Buffer.from(algo) : null;\n        var bufferData = data != null ? Buffer.from(data) : null;\n        var buffer = Buffer.from('');\n\n        if (options.noncefn) {\n          buffer = options.noncefn(Buffer.from(message), Buffer.from(privateKey), bufferAlgo, bufferData, attempt);\n        }\n\n        return new Uint8Array(buffer);\n      };\n    }\n  }\n\n  var sig = secp256k1.ecdsaSign(Uint8Array.from(message), Uint8Array.from(privateKey), signOptions);\n  return {\n    signature: Buffer.from(sig.signature),\n    recovery: sig.recid\n  };\n};\n/**\n * Verify an ECDSA signature.\n * @method verify\n * @param {Buffer} message\n * @param {Buffer} signature\n * @param {Buffer} publicKey\n * @return {boolean}\n */\n\n\nexports.verify = function (message, signature, publicKey) {\n  return secp256k1.ecdsaVerify(Uint8Array.from(signature), Uint8Array.from(message), publicKey);\n};\n/**\n * Recover an ECDSA public key from a signature.\n * @method recover\n * @param {Buffer} message\n * @param {Buffer} signature\n * @param {Number} recid\n * @param {boolean} compressed\n * @return {Buffer}\n */\n\n\nexports.recover = function (message, signature, recid, compressed) {\n  return Buffer.from(secp256k1.ecdsaRecover(Uint8Array.from(signature), recid, Uint8Array.from(message), compressed));\n};\n/**\n * Compute an EC Diffie-Hellman secret and applied sha256 to compressed public key.\n * @method ecdh\n * @param {Buffer} publicKey\n * @param {Buffer} privateKey\n * @return {Buffer}\n */\n\n\nexports.ecdh = function (publicKey, privateKey) {\n  // note: secp256k1 v3 doesn't allow optional parameter\n  return Buffer.from(secp256k1.ecdh(Uint8Array.from(publicKey), Uint8Array.from(privateKey), {}));\n};\n\nexports.ecdhUnsafe = function (publicKey, privateKey, compressed) {\n  // ecdhUnsafe method is not part of secp256k1 v4 package\n  // this implementation is based on v3\n  // ensure valid publicKey length\n  if (publicKey.length !== 33 && publicKey.length !== 65) {\n    throw new RangeError('public key length is invalid');\n  } // ensure valid privateKey length\n\n\n  if (privateKey.length !== 32) {\n    throw new RangeError('private key length is invalid');\n  }\n\n  return Buffer.from(secp256k1v3.ecdhUnsafe(Uint8Array.from(publicKey), Uint8Array.from(privateKey), compressed));\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.rlphash = exports.ripemd160 = exports.sha256 = exports.keccak256 = exports.keccak = void 0;\n\nvar _a = require('ethereum-cryptography/keccak'),\n    keccak224 = _a.keccak224,\n    keccak384 = _a.keccak384,\n    k256 = _a.keccak256,\n    keccak512 = _a.keccak512;\n\nvar createHash = require('create-hash');\n\nvar ethjsUtil = require('ethjs-util');\n\nvar rlp = require(\"rlp\");\n\nvar bytes_1 = require(\"./bytes\");\n/**\n * Creates Keccak hash of the input\n * @param a The input data (Buffer|Array|String|Number) If the string is a 0x-prefixed hex value\n * it's interpreted as hexadecimal, otherwise as utf8.\n * @param bits The Keccak width\n */\n\n\nexports.keccak = function (a, bits) {\n  if (bits === void 0) {\n    bits = 256;\n  }\n\n  if (typeof a === 'string' && !ethjsUtil.isHexString(a)) {\n    a = Buffer.from(a, 'utf8');\n  } else {\n    a = bytes_1.toBuffer(a);\n  }\n\n  if (!bits) bits = 256;\n\n  switch (bits) {\n    case 224:\n      {\n        return keccak224(a);\n      }\n\n    case 256:\n      {\n        return k256(a);\n      }\n\n    case 384:\n      {\n        return keccak384(a);\n      }\n\n    case 512:\n      {\n        return keccak512(a);\n      }\n\n    default:\n      {\n        throw new Error(\"Invald algorithm: keccak\" + bits);\n      }\n  }\n};\n/**\n * Creates Keccak-256 hash of the input, alias for keccak(a, 256).\n * @param a The input data (Buffer|Array|String|Number)\n */\n\n\nexports.keccak256 = function (a) {\n  return exports.keccak(a);\n};\n/**\n * Creates SHA256 hash of the input.\n * @param a The input data (Buffer|Array|String|Number)\n */\n\n\nexports.sha256 = function (a) {\n  a = bytes_1.toBuffer(a);\n  return createHash('sha256').update(a).digest();\n};\n/**\n * Creates RIPEMD160 hash of the input.\n * @param a The input data (Buffer|Array|String|Number)\n * @param padded Whether it should be padded to 256 bits or not\n */\n\n\nexports.ripemd160 = function (a, padded) {\n  a = bytes_1.toBuffer(a);\n  var hash = createHash('rmd160').update(a).digest();\n\n  if (padded === true) {\n    return bytes_1.setLength(hash, 32);\n  } else {\n    return hash;\n  }\n};\n/**\n * Creates SHA-3 hash of the RLP encoded version of the input.\n * @param a The input data\n */\n\n\nexports.rlphash = function (a) {\n  return exports.keccak(rlp.encode(a));\n};","module.exports = require('./lib/index.js');","/* eslint-disable no-useless-escape */\nvar utils = require('ethereumjs-util');\n\nvar BN = require('bn.js');\n\nvar ABI = function ABI() {}; // Convert from short to canonical names\n// FIXME: optimise or make this nicer?\n\n\nfunction elementaryName(name) {\n  if (name.startsWith('int[')) {\n    return 'int256' + name.slice(3);\n  } else if (name === 'int') {\n    return 'int256';\n  } else if (name.startsWith('uint[')) {\n    return 'uint256' + name.slice(4);\n  } else if (name === 'uint') {\n    return 'uint256';\n  } else if (name.startsWith('fixed[')) {\n    return 'fixed128x128' + name.slice(5);\n  } else if (name === 'fixed') {\n    return 'fixed128x128';\n  } else if (name.startsWith('ufixed[')) {\n    return 'ufixed128x128' + name.slice(6);\n  } else if (name === 'ufixed') {\n    return 'ufixed128x128';\n  }\n\n  return name;\n}\n\nABI.eventID = function (name, types) {\n  // FIXME: use node.js util.format?\n  var sig = name + '(' + types.map(elementaryName).join(',') + ')';\n  return utils.keccak256(Buffer.from(sig));\n};\n\nABI.methodID = function (name, types) {\n  return ABI.eventID(name, types).slice(0, 4);\n}; // Parse N from type<N>\n\n\nfunction parseTypeN(type) {\n  return parseInt(/^\\D+(\\d+)$/.exec(type)[1], 10);\n} // Parse N,M from type<N>x<M>\n\n\nfunction parseTypeNxM(type) {\n  var tmp = /^\\D+(\\d+)x(\\d+)$/.exec(type);\n  return [parseInt(tmp[1], 10), parseInt(tmp[2], 10)];\n} // Parse N in type[<N>] where \"type\" can itself be an array type.\n\n\nfunction parseTypeArray(type) {\n  var tmp = type.match(/(.*)\\[(.*?)\\]$/);\n\n  if (tmp) {\n    return tmp[2] === '' ? 'dynamic' : parseInt(tmp[2], 10);\n  }\n\n  return null;\n}\n\nfunction parseNumber(arg) {\n  var type = typeof arg;\n\n  if (type === 'string') {\n    if (utils.isHexPrefixed(arg)) {\n      return new BN(utils.stripHexPrefix(arg), 16);\n    } else {\n      return new BN(arg, 10);\n    }\n  } else if (type === 'number') {\n    return new BN(arg);\n  } else if (arg.toArray) {\n    // assume this is a BN for the moment, replace with BN.isBN soon\n    return arg;\n  } else {\n    throw new Error('Argument is not a number');\n  }\n} // someMethod(bytes,uint)\n// someMethod(bytes,uint):(boolean)\n\n\nfunction parseSignature(sig) {\n  var tmp = /^(\\w+)\\((.*)\\)$/.exec(sig);\n\n  if (tmp.length !== 3) {\n    throw new Error('Invalid method signature');\n  }\n\n  var args = /^(.+)\\):\\((.+)$/.exec(tmp[2]);\n\n  if (args !== null && args.length === 3) {\n    return {\n      method: tmp[1],\n      args: args[1].split(','),\n      retargs: args[2].split(',')\n    };\n  } else {\n    var params = tmp[2].split(',');\n\n    if (params.length === 1 && params[0] === '') {\n      // Special-case (possibly naive) fixup for functions that take no arguments.\n      // TODO: special cases are always bad, but this makes the function return\n      // match what the calling functions expect\n      params = [];\n    }\n\n    return {\n      method: tmp[1],\n      args: params\n    };\n  }\n} // Encodes a single item (can be dynamic array)\n// @returns: Buffer\n\n\nfunction encodeSingle(type, arg) {\n  var size, num, ret, i;\n\n  if (type === 'address') {\n    return encodeSingle('uint160', parseNumber(arg));\n  } else if (type === 'bool') {\n    return encodeSingle('uint8', arg ? 1 : 0);\n  } else if (type === 'string') {\n    return encodeSingle('bytes', Buffer.from(arg, 'utf8'));\n  } else if (isArray(type)) {\n    // this part handles fixed-length ([2]) and variable length ([]) arrays\n    // NOTE: we catch here all calls to arrays, that simplifies the rest\n    if (typeof arg.length === 'undefined') {\n      throw new Error('Not an array?');\n    }\n\n    size = parseTypeArray(type);\n\n    if (size !== 'dynamic' && size !== 0 && arg.length > size) {\n      throw new Error('Elements exceed array size: ' + size);\n    }\n\n    ret = [];\n    type = type.slice(0, type.lastIndexOf('['));\n\n    if (typeof arg === 'string') {\n      arg = JSON.parse(arg);\n    }\n\n    for (i in arg) {\n      ret.push(encodeSingle(type, arg[i]));\n    }\n\n    if (size === 'dynamic') {\n      var length = encodeSingle('uint256', arg.length);\n      ret.unshift(length);\n    }\n\n    return Buffer.concat(ret);\n  } else if (type === 'bytes') {\n    arg = Buffer.from(arg);\n    ret = Buffer.concat([encodeSingle('uint256', arg.length), arg]);\n\n    if (arg.length % 32 !== 0) {\n      ret = Buffer.concat([ret, utils.zeros(32 - arg.length % 32)]);\n    }\n\n    return ret;\n  } else if (type.startsWith('bytes')) {\n    size = parseTypeN(type);\n\n    if (size < 1 || size > 32) {\n      throw new Error('Invalid bytes<N> width: ' + size);\n    }\n\n    return utils.setLengthRight(arg, 32);\n  } else if (type.startsWith('uint')) {\n    size = parseTypeN(type);\n\n    if (size % 8 || size < 8 || size > 256) {\n      throw new Error('Invalid uint<N> width: ' + size);\n    }\n\n    num = parseNumber(arg);\n\n    if (num.bitLength() > size) {\n      throw new Error('Supplied uint exceeds width: ' + size + ' vs ' + num.bitLength());\n    }\n\n    if (num < 0) {\n      throw new Error('Supplied uint is negative');\n    }\n\n    return num.toArrayLike(Buffer, 'be', 32);\n  } else if (type.startsWith('int')) {\n    size = parseTypeN(type);\n\n    if (size % 8 || size < 8 || size > 256) {\n      throw new Error('Invalid int<N> width: ' + size);\n    }\n\n    num = parseNumber(arg);\n\n    if (num.bitLength() > size) {\n      throw new Error('Supplied int exceeds width: ' + size + ' vs ' + num.bitLength());\n    }\n\n    return num.toTwos(256).toArrayLike(Buffer, 'be', 32);\n  } else if (type.startsWith('ufixed')) {\n    size = parseTypeNxM(type);\n    num = parseNumber(arg);\n\n    if (num < 0) {\n      throw new Error('Supplied ufixed is negative');\n    }\n\n    return encodeSingle('uint256', num.mul(new BN(2).pow(new BN(size[1]))));\n  } else if (type.startsWith('fixed')) {\n    size = parseTypeNxM(type);\n    return encodeSingle('int256', parseNumber(arg).mul(new BN(2).pow(new BN(size[1]))));\n  }\n\n  throw new Error('Unsupported or invalid type: ' + type);\n} // Decodes a single item (can be dynamic array)\n// @returns: array\n// FIXME: this method will need a lot of attention at checking limits and validation\n\n\nfunction decodeSingle(parsedType, data, offset) {\n  if (typeof parsedType === 'string') {\n    parsedType = parseType(parsedType);\n  }\n\n  var size, num, ret, i;\n\n  if (parsedType.name === 'address') {\n    return decodeSingle(parsedType.rawType, data, offset).toArrayLike(Buffer, 'be', 20).toString('hex');\n  } else if (parsedType.name === 'bool') {\n    return decodeSingle(parsedType.rawType, data, offset).toString() === new BN(1).toString();\n  } else if (parsedType.name === 'string') {\n    var bytes = decodeSingle(parsedType.rawType, data, offset);\n    return Buffer.from(bytes, 'utf8').toString();\n  } else if (parsedType.isArray) {\n    // this part handles fixed-length arrays ([2]) and variable length ([]) arrays\n    // NOTE: we catch here all calls to arrays, that simplifies the rest\n    ret = [];\n    size = parsedType.size;\n\n    if (parsedType.size === 'dynamic') {\n      offset = decodeSingle('uint256', data, offset).toNumber();\n      size = decodeSingle('uint256', data, offset).toNumber();\n      offset = offset + 32;\n    }\n\n    for (i = 0; i < size; i++) {\n      var decoded = decodeSingle(parsedType.subArray, data, offset);\n      ret.push(decoded);\n      offset += parsedType.subArray.memoryUsage;\n    }\n\n    return ret;\n  } else if (parsedType.name === 'bytes') {\n    offset = decodeSingle('uint256', data, offset).toNumber();\n    size = decodeSingle('uint256', data, offset).toNumber();\n    return data.slice(offset + 32, offset + 32 + size);\n  } else if (parsedType.name.startsWith('bytes')) {\n    return data.slice(offset, offset + parsedType.size);\n  } else if (parsedType.name.startsWith('uint')) {\n    num = new BN(data.slice(offset, offset + 32), 16, 'be');\n\n    if (num.bitLength() > parsedType.size) {\n      throw new Error('Decoded int exceeds width: ' + parsedType.size + ' vs ' + num.bitLength());\n    }\n\n    return num;\n  } else if (parsedType.name.startsWith('int')) {\n    num = new BN(data.slice(offset, offset + 32), 16, 'be').fromTwos(256);\n\n    if (num.bitLength() > parsedType.size) {\n      throw new Error('Decoded uint exceeds width: ' + parsedType.size + ' vs ' + num.bitLength());\n    }\n\n    return num;\n  } else if (parsedType.name.startsWith('ufixed')) {\n    size = new BN(2).pow(new BN(parsedType.size[1]));\n    num = decodeSingle('uint256', data, offset);\n\n    if (!num.mod(size).isZero()) {\n      throw new Error('Decimals not supported yet');\n    }\n\n    return num.div(size);\n  } else if (parsedType.name.startsWith('fixed')) {\n    size = new BN(2).pow(new BN(parsedType.size[1]));\n    num = decodeSingle('int256', data, offset);\n\n    if (!num.mod(size).isZero()) {\n      throw new Error('Decimals not supported yet');\n    }\n\n    return num.div(size);\n  }\n\n  throw new Error('Unsupported or invalid type: ' + parsedType.name);\n} // Parse the given type\n// @returns: {} containing the type itself, memory usage and (including size and subArray if applicable)\n\n\nfunction parseType(type) {\n  var size;\n  var ret;\n\n  if (isArray(type)) {\n    size = parseTypeArray(type);\n    var subArray = type.slice(0, type.lastIndexOf('['));\n    subArray = parseType(subArray);\n    ret = {\n      isArray: true,\n      name: type,\n      size: size,\n      memoryUsage: size === 'dynamic' ? 32 : subArray.memoryUsage * size,\n      subArray: subArray\n    };\n    return ret;\n  } else {\n    var rawType;\n\n    switch (type) {\n      case 'address':\n        rawType = 'uint160';\n        break;\n\n      case 'bool':\n        rawType = 'uint8';\n        break;\n\n      case 'string':\n        rawType = 'bytes';\n        break;\n    }\n\n    ret = {\n      rawType: rawType,\n      name: type,\n      memoryUsage: 32\n    };\n\n    if (type.startsWith('bytes') && type !== 'bytes' || type.startsWith('uint') || type.startsWith('int')) {\n      ret.size = parseTypeN(type);\n    } else if (type.startsWith('ufixed') || type.startsWith('fixed')) {\n      ret.size = parseTypeNxM(type);\n    }\n\n    if (type.startsWith('bytes') && type !== 'bytes' && (ret.size < 1 || ret.size > 32)) {\n      throw new Error('Invalid bytes<N> width: ' + ret.size);\n    }\n\n    if ((type.startsWith('uint') || type.startsWith('int')) && (ret.size % 8 || ret.size < 8 || ret.size > 256)) {\n      throw new Error('Invalid int/uint<N> width: ' + ret.size);\n    }\n\n    return ret;\n  }\n} // Is a type dynamic?\n\n\nfunction isDynamic(type) {\n  // FIXME: handle all types? I don't think anything is missing now\n  return type === 'string' || type === 'bytes' || parseTypeArray(type) === 'dynamic';\n} // Is a type an array?\n\n\nfunction isArray(type) {\n  return type.lastIndexOf(']') === type.length - 1;\n} // Encode a method/event with arguments\n// @types an array of string type names\n// @args  an array of the appropriate values\n\n\nABI.rawEncode = function (types, values) {\n  var output = [];\n  var data = [];\n  var headLength = 0;\n  types.forEach(function (type) {\n    if (isArray(type)) {\n      var size = parseTypeArray(type);\n\n      if (size !== 'dynamic') {\n        headLength += 32 * size;\n      } else {\n        headLength += 32;\n      }\n    } else {\n      headLength += 32;\n    }\n  });\n\n  for (var i = 0; i < types.length; i++) {\n    var type = elementaryName(types[i]);\n    var value = values[i];\n    var cur = encodeSingle(type, value); // Use the head/tail method for storing dynamic data\n\n    if (isDynamic(type)) {\n      output.push(encodeSingle('uint256', headLength));\n      data.push(cur);\n      headLength += cur.length;\n    } else {\n      output.push(cur);\n    }\n  }\n\n  return Buffer.concat(output.concat(data));\n};\n\nABI.rawDecode = function (types, data) {\n  var ret = [];\n  data = Buffer.from(data);\n  var offset = 0;\n\n  for (var i = 0; i < types.length; i++) {\n    var type = elementaryName(types[i]);\n    var parsed = parseType(type, data, offset);\n    var decoded = decodeSingle(parsed, data, offset);\n    offset += parsed.memoryUsage;\n    ret.push(decoded);\n  }\n\n  return ret;\n};\n\nABI.simpleEncode = function (method) {\n  var args = Array.prototype.slice.call(arguments).slice(1);\n  var sig = parseSignature(method); // FIXME: validate/convert arguments\n\n  if (args.length !== sig.args.length) {\n    throw new Error('Argument count mismatch');\n  }\n\n  return Buffer.concat([ABI.methodID(sig.method, sig.args), ABI.rawEncode(sig.args, args)]);\n};\n\nABI.simpleDecode = function (method, data) {\n  var sig = parseSignature(method); // FIXME: validate/convert arguments\n\n  if (!sig.retargs) {\n    throw new Error('No return values in method');\n  }\n\n  return ABI.rawDecode(sig.retargs, data);\n};\n\nfunction stringify(type, value) {\n  if (type.startsWith('address') || type.startsWith('bytes')) {\n    return '0x' + value.toString('hex');\n  } else {\n    return value.toString();\n  }\n}\n\nABI.stringify = function (types, values) {\n  var ret = [];\n\n  for (var i in types) {\n    var type = types[i];\n    var value = values[i]; // if it is an array type, concat the items\n\n    if (/^[^\\[]+\\[.*\\]$/.test(type)) {\n      value = value.map(function (item) {\n        return stringify(type, item);\n      }).join(', ');\n    } else {\n      value = stringify(type, value);\n    }\n\n    ret.push(value);\n  }\n\n  return ret;\n};\n\nABI.solidityHexValue = function (type, value, bitsize) {\n  // pass in bitsize = null if use default bitsize\n  var size, num;\n\n  if (isArray(type)) {\n    var subType = type.replace(/\\[.*?\\]/, '');\n\n    if (!isArray(subType)) {\n      var arraySize = parseTypeArray(type);\n\n      if (arraySize !== 'dynamic' && arraySize !== 0 && value.length > arraySize) {\n        throw new Error('Elements exceed array size: ' + arraySize);\n      }\n    }\n\n    var arrayValues = value.map(function (v) {\n      return ABI.solidityHexValue(subType, v, 256);\n    });\n    return Buffer.concat(arrayValues);\n  } else if (type === 'bytes') {\n    return value;\n  } else if (type === 'string') {\n    return Buffer.from(value, 'utf8');\n  } else if (type === 'bool') {\n    bitsize = bitsize || 8;\n    var padding = Array(bitsize / 4).join('0');\n    return Buffer.from(value ? padding + '1' : padding + '0', 'hex');\n  } else if (type === 'address') {\n    var bytesize = 20;\n\n    if (bitsize) {\n      bytesize = bitsize / 8;\n    }\n\n    return utils.setLengthLeft(value, bytesize);\n  } else if (type.startsWith('bytes')) {\n    size = parseTypeN(type);\n\n    if (size < 1 || size > 32) {\n      throw new Error('Invalid bytes<N> width: ' + size);\n    }\n\n    return utils.setLengthRight(value, size);\n  } else if (type.startsWith('uint')) {\n    size = parseTypeN(type);\n\n    if (size % 8 || size < 8 || size > 256) {\n      throw new Error('Invalid uint<N> width: ' + size);\n    }\n\n    num = parseNumber(value);\n\n    if (num.bitLength() > size) {\n      throw new Error('Supplied uint exceeds width: ' + size + ' vs ' + num.bitLength());\n    }\n\n    bitsize = bitsize || size;\n    return num.toArrayLike(Buffer, 'be', bitsize / 8);\n  } else if (type.startsWith('int')) {\n    size = parseTypeN(type);\n\n    if (size % 8 || size < 8 || size > 256) {\n      throw new Error('Invalid int<N> width: ' + size);\n    }\n\n    num = parseNumber(value);\n\n    if (num.bitLength() > size) {\n      throw new Error('Supplied int exceeds width: ' + size + ' vs ' + num.bitLength());\n    }\n\n    bitsize = bitsize || size;\n    return num.toTwos(size).toArrayLike(Buffer, 'be', bitsize / 8);\n  } else {\n    // FIXME: support all other types\n    throw new Error('Unsupported or invalid type: ' + type);\n  }\n};\n\nABI.solidityPack = function (types, values) {\n  if (types.length !== values.length) {\n    throw new Error('Number of types are not matching the values');\n  }\n\n  var ret = [];\n\n  for (var i = 0; i < types.length; i++) {\n    var type = elementaryName(types[i]);\n    var value = values[i];\n    ret.push(ABI.solidityHexValue(type, value, null));\n  }\n\n  return Buffer.concat(ret);\n};\n\nABI.soliditySHA3 = function (types, values) {\n  return utils.keccak256(ABI.solidityPack(types, values));\n};\n\nABI.soliditySHA256 = function (types, values) {\n  return utils.sha256(ABI.solidityPack(types, values));\n};\n\nABI.solidityRIPEMD160 = function (types, values) {\n  return utils.ripemd160(ABI.solidityPack(types, values), true);\n}; // Serpent's users are familiar with this encoding\n// - s: string\n// - b: bytes\n// - b<N>: bytes<N>\n// - i: int256\n// - a: int256[]\n\n\nfunction isNumeric(c) {\n  // FIXME: is this correct? Seems to work\n  return c >= '0' && c <= '9';\n} // For a \"documentation\" refer to https://github.com/ethereum/serpent/blob/develop/preprocess.cpp\n\n\nABI.fromSerpent = function (sig) {\n  var ret = [];\n\n  for (var i = 0; i < sig.length; i++) {\n    var type = sig[i];\n\n    if (type === 's') {\n      ret.push('bytes');\n    } else if (type === 'b') {\n      var tmp = 'bytes';\n      var j = i + 1;\n\n      while (j < sig.length && isNumeric(sig[j])) {\n        tmp += sig[j] - '0';\n        j++;\n      }\n\n      i = j - 1;\n      ret.push(tmp);\n    } else if (type === 'i') {\n      ret.push('int256');\n    } else if (type === 'a') {\n      ret.push('int256[]');\n    } else {\n      throw new Error('Unsupported or invalid type: ' + type);\n    }\n  }\n\n  return ret;\n};\n\nABI.toSerpent = function (types) {\n  var ret = [];\n\n  for (var i = 0; i < types.length; i++) {\n    var type = types[i];\n\n    if (type === 'bytes') {\n      ret.push('s');\n    } else if (type.startsWith('bytes')) {\n      ret.push('b' + parseTypeN(type));\n    } else if (type === 'int256') {\n      ret.push('i');\n    } else if (type === 'int256[]') {\n      ret.push('a');\n    } else {\n      throw new Error('Unsupported or invalid type: ' + type);\n    }\n  }\n\n  return ret.join('');\n};\n\nmodule.exports = ABI;","\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) {\n    if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n  }\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.secp256k1 = exports.rlp = exports.BN = void 0;\n\nvar secp256k1 = require('./secp256k1v3-adapter');\n\nexports.secp256k1 = secp256k1;\n\nvar ethjsUtil = require('ethjs-util');\n\nvar BN = require(\"bn.js\");\n\nexports.BN = BN;\n\nvar rlp = require(\"rlp\");\n\nexports.rlp = rlp;\nObject.assign(exports, ethjsUtil);\n/**\n * Constants\n */\n\n__exportStar(require(\"./constants\"), exports);\n/**\n * Public-key cryptography (secp256k1) and addresses\n */\n\n\n__exportStar(require(\"./account\"), exports);\n/**\n * Hash functions\n */\n\n\n__exportStar(require(\"./hash\"), exports);\n/**\n * ECDSA signature\n */\n\n\n__exportStar(require(\"./signature\"), exports);\n/**\n * Utilities for manipulating Buffers, byte arrays, etc.\n */\n\n\n__exportStar(require(\"./bytes\"), exports);\n/**\n * Function for definining properties on an object\n */\n\n\n__exportStar(require(\"./object\"), exports);","\"use strict\"; // This file is imported from secp256k1 v3\n// https://github.com/cryptocoinjs/secp256k1-node/blob/master/LICENSE\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar BN = require(\"bn.js\");\n\nvar EC = require('elliptic').ec;\n\nvar ec = new EC('secp256k1');\nvar ecparams = ec.curve;\n\nexports.privateKeyExport = function (privateKey, compressed) {\n  if (compressed === void 0) {\n    compressed = true;\n  }\n\n  var d = new BN(privateKey);\n\n  if (d.ucmp(ecparams.n) >= 0) {\n    throw new Error(\"couldn't export to DER format\");\n  }\n\n  var point = ec.g.mul(d);\n  return toPublicKey(point.getX(), point.getY(), compressed);\n};\n\nexports.privateKeyModInverse = function (privateKey) {\n  var bn = new BN(privateKey);\n\n  if (bn.ucmp(ecparams.n) >= 0 || bn.isZero()) {\n    throw new Error('private key range is invalid');\n  }\n\n  return bn.invm(ecparams.n).toArrayLike(Buffer, 'be', 32);\n};\n\nexports.signatureImport = function (sigObj) {\n  var r = new BN(sigObj.r);\n\n  if (r.ucmp(ecparams.n) >= 0) {\n    r = new BN(0);\n  }\n\n  var s = new BN(sigObj.s);\n\n  if (s.ucmp(ecparams.n) >= 0) {\n    s = new BN(0);\n  }\n\n  return Buffer.concat([r.toArrayLike(Buffer, 'be', 32), s.toArrayLike(Buffer, 'be', 32)]);\n};\n\nexports.ecdhUnsafe = function (publicKey, privateKey, compressed) {\n  if (compressed === void 0) {\n    compressed = true;\n  }\n\n  var point = ec.keyFromPublic(publicKey);\n  var scalar = new BN(privateKey);\n\n  if (scalar.ucmp(ecparams.n) >= 0 || scalar.isZero()) {\n    throw new Error('scalar was invalid (zero or overflow)');\n  }\n\n  var shared = point.pub.mul(scalar);\n  return toPublicKey(shared.getX(), shared.getY(), compressed);\n};\n\nvar toPublicKey = function toPublicKey(x, y, compressed) {\n  var publicKey;\n\n  if (compressed) {\n    publicKey = Buffer.alloc(33);\n    publicKey[0] = y.isOdd() ? 0x03 : 0x02;\n    x.toArrayLike(Buffer, 'be', 32).copy(publicKey, 1);\n  } else {\n    publicKey = Buffer.alloc(65);\n    publicKey[0] = 0x04;\n    x.toArrayLike(Buffer, 'be', 32).copy(publicKey, 1);\n    y.toArrayLike(Buffer, 'be', 32).copy(publicKey, 33);\n  }\n\n  return publicKey;\n};","\"use strict\"; // This file is imported from secp256k1 v3\n// https://github.com/cryptocoinjs/secp256k1-node/blob/master/LICENSE\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar EC_PRIVKEY_EXPORT_DER_COMPRESSED = Buffer.from([// begin\n0x30, 0x81, 0xd3, 0x02, 0x01, 0x01, 0x04, 0x20, // private key\n0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // middle\n0xa0, 0x81, 0x85, 0x30, 0x81, 0x82, 0x02, 0x01, 0x01, 0x30, 0x2c, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x01, 0x01, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xfc, 0x2f, 0x30, 0x06, 0x04, 0x01, 0x00, 0x04, 0x01, 0x07, 0x04, 0x21, 0x02, 0x79, 0xbe, 0x66, 0x7e, 0xf9, 0xdc, 0xbb, 0xac, 0x55, 0xa0, 0x62, 0x95, 0xce, 0x87, 0x0b, 0x07, 0x02, 0x9b, 0xfc, 0xdb, 0x2d, 0xce, 0x28, 0xd9, 0x59, 0xf2, 0x81, 0x5b, 0x16, 0xf8, 0x17, 0x98, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xba, 0xae, 0xdc, 0xe6, 0xaf, 0x48, 0xa0, 0x3b, 0xbf, 0xd2, 0x5e, 0x8c, 0xd0, 0x36, 0x41, 0x41, 0x02, 0x01, 0x01, 0xa1, 0x24, 0x03, 0x22, 0x00, // public key\n0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]);\nvar EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED = Buffer.from([// begin\n0x30, 0x82, 0x01, 0x13, 0x02, 0x01, 0x01, 0x04, 0x20, // private key\n0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // middle\n0xa0, 0x81, 0xa5, 0x30, 0x81, 0xa2, 0x02, 0x01, 0x01, 0x30, 0x2c, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x01, 0x01, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xfc, 0x2f, 0x30, 0x06, 0x04, 0x01, 0x00, 0x04, 0x01, 0x07, 0x04, 0x41, 0x04, 0x79, 0xbe, 0x66, 0x7e, 0xf9, 0xdc, 0xbb, 0xac, 0x55, 0xa0, 0x62, 0x95, 0xce, 0x87, 0x0b, 0x07, 0x02, 0x9b, 0xfc, 0xdb, 0x2d, 0xce, 0x28, 0xd9, 0x59, 0xf2, 0x81, 0x5b, 0x16, 0xf8, 0x17, 0x98, 0x48, 0x3a, 0xda, 0x77, 0x26, 0xa3, 0xc4, 0x65, 0x5d, 0xa4, 0xfb, 0xfc, 0x0e, 0x11, 0x08, 0xa8, 0xfd, 0x17, 0xb4, 0x48, 0xa6, 0x85, 0x54, 0x19, 0x9c, 0x47, 0xd0, 0x8f, 0xfb, 0x10, 0xd4, 0xb8, 0x02, 0x21, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xba, 0xae, 0xdc, 0xe6, 0xaf, 0x48, 0xa0, 0x3b, 0xbf, 0xd2, 0x5e, 0x8c, 0xd0, 0x36, 0x41, 0x41, 0x02, 0x01, 0x01, 0xa1, 0x44, 0x03, 0x42, 0x00, // public key\n0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00]);\n\nexports.privateKeyExport = function (privateKey, publicKey, compressed) {\n  if (compressed === void 0) {\n    compressed = true;\n  }\n\n  var result = Buffer.from(compressed ? EC_PRIVKEY_EXPORT_DER_COMPRESSED : EC_PRIVKEY_EXPORT_DER_UNCOMPRESSED);\n  privateKey.copy(result, compressed ? 8 : 9);\n  publicKey.copy(result, compressed ? 181 : 214);\n  return result;\n};\n\nexports.privateKeyImport = function (privateKey) {\n  var length = privateKey.length; // sequence header\n\n  var index = 0;\n  if (length < index + 1 || privateKey[index] !== 0x30) return null;\n  index += 1; // sequence length constructor\n\n  if (length < index + 1 || !(privateKey[index] & 0x80)) return null;\n  var lenb = privateKey[index] & 0x7f;\n  index += 1;\n  if (lenb < 1 || lenb > 2) return null;\n  if (length < index + lenb) return null; // sequence length\n\n  var len = privateKey[index + lenb - 1] | (lenb > 1 ? privateKey[index + lenb - 2] << 8 : 0);\n  index += lenb;\n  if (length < index + len) return null; // sequence element 0: version number (=1)\n\n  if (length < index + 3 || privateKey[index] !== 0x02 || privateKey[index + 1] !== 0x01 || privateKey[index + 2] !== 0x01) {\n    return null;\n  }\n\n  index += 3; // sequence element 1: octet string, up to 32 bytes\n\n  if (length < index + 2 || privateKey[index] !== 0x04 || privateKey[index + 1] > 0x20 || length < index + 2 + privateKey[index + 1]) {\n    return null;\n  }\n\n  return privateKey.slice(index + 2, index + 2 + privateKey[index + 1]);\n};\n\nexports.signatureImportLax = function (signature) {\n  var r = Buffer.alloc(32, 0);\n  var s = Buffer.alloc(32, 0);\n  var length = signature.length;\n  var index = 0; // sequence tag byte\n\n  if (signature[index++] !== 0x30) {\n    return null;\n  } // sequence length byte\n\n\n  var lenbyte = signature[index++];\n\n  if (lenbyte & 0x80) {\n    index += lenbyte - 0x80;\n\n    if (index > length) {\n      return null;\n    }\n  } // sequence tag byte for r\n\n\n  if (signature[index++] !== 0x02) {\n    return null;\n  } // length for r\n\n\n  var rlen = signature[index++];\n\n  if (rlen & 0x80) {\n    lenbyte = rlen - 0x80;\n\n    if (index + lenbyte > length) {\n      return null;\n    }\n\n    for (; lenbyte > 0 && signature[index] === 0x00; index += 1, lenbyte -= 1) {\n      ;\n    }\n\n    for (rlen = 0; lenbyte > 0; index += 1, lenbyte -= 1) {\n      rlen = (rlen << 8) + signature[index];\n    }\n  }\n\n  if (rlen > length - index) {\n    return null;\n  }\n\n  var rindex = index;\n  index += rlen; // sequence tag byte for s\n\n  if (signature[index++] !== 0x02) {\n    return null;\n  } // length for s\n\n\n  var slen = signature[index++];\n\n  if (slen & 0x80) {\n    lenbyte = slen - 0x80;\n\n    if (index + lenbyte > length) {\n      return null;\n    }\n\n    for (; lenbyte > 0 && signature[index] === 0x00; index += 1, lenbyte -= 1) {\n      ;\n    }\n\n    for (slen = 0; lenbyte > 0; index += 1, lenbyte -= 1) {\n      slen = (slen << 8) + signature[index];\n    }\n  }\n\n  if (slen > length - index) {\n    return null;\n  }\n\n  var sindex = index;\n  index += slen; // ignore leading zeros in r\n\n  for (; rlen > 0 && signature[rindex] === 0x00; rlen -= 1, rindex += 1) {\n    ;\n  } // copy r value\n\n\n  if (rlen > 32) {\n    return null;\n  }\n\n  var rvalue = signature.slice(rindex, rindex + rlen);\n  rvalue.copy(r, 32 - rvalue.length); // ignore leading zeros in s\n\n  for (; slen > 0 && signature[sindex] === 0x00; slen -= 1, sindex += 1) {\n    ;\n  } // copy s value\n\n\n  if (slen > 32) {\n    return null;\n  }\n\n  var svalue = signature.slice(sindex, sindex + slen);\n  svalue.copy(s, 32 - svalue.length);\n  return {\n    r: r,\n    s: s\n  };\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.KECCAK256_RLP = exports.KECCAK256_RLP_S = exports.KECCAK256_RLP_ARRAY = exports.KECCAK256_RLP_ARRAY_S = exports.KECCAK256_NULL = exports.KECCAK256_NULL_S = exports.TWO_POW256 = exports.MAX_INTEGER = void 0;\n\nvar BN = require(\"bn.js\");\n/**\n * The max integer that this VM can handle\n */\n\n\nexports.MAX_INTEGER = new BN('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff', 16);\n/**\n * 2^256\n */\n\nexports.TWO_POW256 = new BN('10000000000000000000000000000000000000000000000000000000000000000', 16);\n/**\n * Keccak-256 hash of null\n */\n\nexports.KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\n/**\n * Keccak-256 hash of null\n */\n\nexports.KECCAK256_NULL = Buffer.from(exports.KECCAK256_NULL_S, 'hex');\n/**\n * Keccak-256 of an RLP of an empty array\n */\n\nexports.KECCAK256_RLP_ARRAY_S = '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347';\n/**\n * Keccak-256 of an RLP of an empty array\n */\n\nexports.KECCAK256_RLP_ARRAY = Buffer.from(exports.KECCAK256_RLP_ARRAY_S, 'hex');\n/**\n * Keccak-256 hash of the RLP of null\n */\n\nexports.KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421';\n/**\n * Keccak-256 hash of the RLP of null\n */\n\nexports.KECCAK256_RLP = Buffer.from(exports.KECCAK256_RLP_S, 'hex');","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.importPublic = exports.privateToPublic = exports.privateToAddress = exports.publicToAddress = exports.pubToAddress = exports.isValidPublic = exports.isValidPrivate = exports.isPrecompiled = exports.generateAddress2 = exports.generateAddress = exports.isValidChecksumAddress = exports.toChecksumAddress = exports.isZeroAddress = exports.isValidAddress = exports.zeroAddress = void 0;\n\nvar assert = require('assert');\n\nvar ethjsUtil = require('ethjs-util');\n\nvar secp256k1 = require('./secp256k1v3-adapter');\n\nvar BN = require(\"bn.js\");\n\nvar bytes_1 = require(\"./bytes\");\n\nvar hash_1 = require(\"./hash\");\n/**\n * Returns a zero address.\n */\n\n\nexports.zeroAddress = function () {\n  var addressLength = 20;\n  var addr = bytes_1.zeros(addressLength);\n  return bytes_1.bufferToHex(addr);\n};\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too.\n */\n\n\nexports.isValidAddress = function (address) {\n  return /^0x[0-9a-fA-F]{40}$/.test(address);\n};\n/**\n * Checks if a given address is a zero address.\n */\n\n\nexports.isZeroAddress = function (address) {\n  var zeroAddr = exports.zeroAddress();\n  return zeroAddr === bytes_1.addHexPrefix(address);\n};\n/**\n * Returns a checksummed address.\n *\n * If a eip1191ChainId is provided, the chainId will be included in the checksum calculation. This\n * has the effect of checksummed addresses for one chain having invalid checksums for others.\n * For more details, consult EIP-1191.\n *\n * WARNING: Checksums with and without the chainId will differ. As of 2019-06-26, the most commonly\n * used variation in Ethereum was without the chainId. This may change in the future.\n */\n\n\nexports.toChecksumAddress = function (address, eip1191ChainId) {\n  address = ethjsUtil.stripHexPrefix(address).toLowerCase();\n  var prefix = eip1191ChainId !== undefined ? eip1191ChainId.toString() + '0x' : '';\n  var hash = hash_1.keccak(prefix + address).toString('hex');\n  var ret = '0x';\n\n  for (var i = 0; i < address.length; i++) {\n    if (parseInt(hash[i], 16) >= 8) {\n      ret += address[i].toUpperCase();\n    } else {\n      ret += address[i];\n    }\n  }\n\n  return ret;\n};\n/**\n * Checks if the address is a valid checksummed address.\n *\n * See toChecksumAddress' documentation for details about the eip1191ChainId parameter.\n */\n\n\nexports.isValidChecksumAddress = function (address, eip1191ChainId) {\n  return exports.isValidAddress(address) && exports.toChecksumAddress(address, eip1191ChainId) === address;\n};\n/**\n * Generates an address of a newly created contract.\n * @param from The address which is creating this new address\n * @param nonce The nonce of the from account\n */\n\n\nexports.generateAddress = function (from, nonce) {\n  from = bytes_1.toBuffer(from);\n  var nonceBN = new BN(nonce);\n\n  if (nonceBN.isZero()) {\n    // in RLP we want to encode null in the case of zero nonce\n    // read the RLP documentation for an answer if you dare\n    return hash_1.rlphash([from, null]).slice(-20);\n  } // Only take the lower 160bits of the hash\n\n\n  return hash_1.rlphash([from, Buffer.from(nonceBN.toArray())]).slice(-20);\n};\n/**\n * Generates an address for a contract created using CREATE2.\n * @param from The address which is creating this new address\n * @param salt A salt\n * @param initCode The init code of the contract being created\n */\n\n\nexports.generateAddress2 = function (from, salt, initCode) {\n  var fromBuf = bytes_1.toBuffer(from);\n  var saltBuf = bytes_1.toBuffer(salt);\n  var initCodeBuf = bytes_1.toBuffer(initCode);\n  assert(fromBuf.length === 20);\n  assert(saltBuf.length === 32);\n  var address = hash_1.keccak256(Buffer.concat([Buffer.from('ff', 'hex'), fromBuf, saltBuf, hash_1.keccak256(initCodeBuf)]));\n  return address.slice(-20);\n};\n/**\n * Returns true if the supplied address belongs to a precompiled account (Byzantium).\n */\n\n\nexports.isPrecompiled = function (address) {\n  var a = bytes_1.unpad(address);\n  return a.length === 1 && a[0] >= 1 && a[0] <= 8;\n};\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n */\n\n\nexports.isValidPrivate = function (privateKey) {\n  return secp256k1.privateKeyVerify(privateKey);\n};\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\n\n\nexports.isValidPublic = function (publicKey, sanitize) {\n  if (sanitize === void 0) {\n    sanitize = false;\n  }\n\n  if (publicKey.length === 64) {\n    // Convert to SEC1 for secp256k1\n    return secp256k1.publicKeyVerify(Buffer.concat([Buffer.from([4]), publicKey]));\n  }\n\n  if (!sanitize) {\n    return false;\n  }\n\n  return secp256k1.publicKeyVerify(publicKey);\n};\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\n\n\nexports.pubToAddress = function (pubKey, sanitize) {\n  if (sanitize === void 0) {\n    sanitize = false;\n  }\n\n  pubKey = bytes_1.toBuffer(pubKey);\n\n  if (sanitize && pubKey.length !== 64) {\n    pubKey = secp256k1.publicKeyConvert(pubKey, false).slice(1);\n  }\n\n  assert(pubKey.length === 64); // Only take the lower 160bits of the hash\n\n  return hash_1.keccak(pubKey).slice(-20);\n};\n\nexports.publicToAddress = exports.pubToAddress;\n/**\n * Returns the ethereum address of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\n\nexports.privateToAddress = function (privateKey) {\n  return exports.publicToAddress(exports.privateToPublic(privateKey));\n};\n/**\n * Returns the ethereum public key of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\n\n\nexports.privateToPublic = function (privateKey) {\n  privateKey = bytes_1.toBuffer(privateKey); // skip the type flag and use the X, Y points\n\n  return secp256k1.publicKeyCreate(privateKey, false).slice(1);\n};\n/**\n * Converts a public key to the Ethereum format.\n */\n\n\nexports.importPublic = function (publicKey) {\n  publicKey = bytes_1.toBuffer(publicKey);\n\n  if (publicKey.length !== 64) {\n    publicKey = secp256k1.publicKeyConvert(publicKey, false).slice(1);\n  }\n\n  return publicKey;\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hashPersonalMessage = exports.isValidSignature = exports.fromRpcSig = exports.toRpcSig = exports.ecrecover = exports.ecsign = void 0;\n\nvar secp256k1 = require('./secp256k1v3-adapter');\n\nvar BN = require(\"bn.js\");\n\nvar bytes_1 = require(\"./bytes\");\n\nvar hash_1 = require(\"./hash\");\n/**\n * Returns the ECDSA signature of a message hash.\n */\n\n\nexports.ecsign = function (msgHash, privateKey, chainId) {\n  var sig = secp256k1.sign(msgHash, privateKey);\n  var recovery = sig.recovery;\n  var ret = {\n    r: sig.signature.slice(0, 32),\n    s: sig.signature.slice(32, 64),\n    v: chainId ? recovery + (chainId * 2 + 35) : recovery + 27\n  };\n  return ret;\n};\n/**\n * ECDSA public key recovery from signature.\n * @returns Recovered public key\n */\n\n\nexports.ecrecover = function (msgHash, v, r, s, chainId) {\n  var signature = Buffer.concat([bytes_1.setLength(r, 32), bytes_1.setLength(s, 32)], 64);\n  var recovery = calculateSigRecovery(v, chainId);\n\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value');\n  }\n\n  var senderPubKey = secp256k1.recover(msgHash, signature, recovery);\n  return secp256k1.publicKeyConvert(senderPubKey, false).slice(1);\n};\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method.\n * @returns Signature\n */\n\n\nexports.toRpcSig = function (v, r, s, chainId) {\n  var recovery = calculateSigRecovery(v, chainId);\n\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value');\n  } // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n\n\n  return bytes_1.bufferToHex(Buffer.concat([bytes_1.setLengthLeft(r, 32), bytes_1.setLengthLeft(s, 32), bytes_1.toBuffer(v)]));\n};\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n * NOTE: all because of a bug in geth: https://github.com/ethereum/go-ethereum/issues/2053\n */\n\n\nexports.fromRpcSig = function (sig) {\n  var buf = bytes_1.toBuffer(sig); // NOTE: with potential introduction of chainId this might need to be updated\n\n  if (buf.length !== 65) {\n    throw new Error('Invalid signature length');\n  }\n\n  var v = buf[64]; // support both versions of `eth_sign` responses\n\n  if (v < 27) {\n    v += 27;\n  }\n\n  return {\n    v: v,\n    r: buf.slice(0, 32),\n    s: buf.slice(32, 64)\n  };\n};\n/**\n * Validate a ECDSA signature.\n * @param homesteadOrLater Indicates whether this is being used on either the homestead hardfork or a later one\n */\n\n\nexports.isValidSignature = function (v, r, s, homesteadOrLater, chainId) {\n  if (homesteadOrLater === void 0) {\n    homesteadOrLater = true;\n  }\n\n  var SECP256K1_N_DIV_2 = new BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);\n  var SECP256K1_N = new BN('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 16);\n\n  if (r.length !== 32 || s.length !== 32) {\n    return false;\n  }\n\n  if (!isValidSigRecovery(calculateSigRecovery(v, chainId))) {\n    return false;\n  }\n\n  var rBN = new BN(r);\n  var sBN = new BN(s);\n\n  if (rBN.isZero() || rBN.gt(SECP256K1_N) || sBN.isZero() || sBN.gt(SECP256K1_N)) {\n    return false;\n  }\n\n  if (homesteadOrLater && sBN.cmp(SECP256K1_N_DIV_2) === 1) {\n    return false;\n  }\n\n  return true;\n};\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n */\n\n\nexports.hashPersonalMessage = function (message) {\n  var prefix = Buffer.from(\"\\x19Ethereum Signed Message:\\n\" + message.length.toString(), 'utf-8');\n  return hash_1.keccak(Buffer.concat([prefix, message]));\n};\n\nfunction calculateSigRecovery(v, chainId) {\n  return chainId ? v - (2 * chainId + 35) : v - 27;\n}\n\nfunction isValidSigRecovery(recovery) {\n  return recovery === 0 || recovery === 1;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defineProperties = void 0;\n\nvar assert = require('assert');\n\nvar ethjsUtil = require('ethjs-util');\n\nvar rlp = require(\"rlp\");\n\nvar bytes_1 = require(\"./bytes\");\n/**\n * Defines properties on a `Object`. It make the assumption that underlying data is binary.\n * @param self the `Object` to define properties on\n * @param fields an array fields to define. Fields can contain:\n * * `name` - the name of the properties\n * * `length` - the number of bytes the field can have\n * * `allowLess` - if the field can be less than the length\n * * `allowEmpty`\n * @param data data to be validated against the definitions\n * @deprecated\n */\n\n\nexports.defineProperties = function (self, fields, data) {\n  self.raw = [];\n  self._fields = []; // attach the `toJSON`\n\n  self.toJSON = function (label) {\n    if (label === void 0) {\n      label = false;\n    }\n\n    if (label) {\n      var obj_1 = {};\n\n      self._fields.forEach(function (field) {\n        obj_1[field] = \"0x\" + self[field].toString('hex');\n      });\n\n      return obj_1;\n    }\n\n    return bytes_1.baToJSON(self.raw);\n  };\n\n  self.serialize = function serialize() {\n    return rlp.encode(self.raw);\n  };\n\n  fields.forEach(function (field, i) {\n    self._fields.push(field.name);\n\n    function getter() {\n      return self.raw[i];\n    }\n\n    function setter(v) {\n      v = bytes_1.toBuffer(v);\n\n      if (v.toString('hex') === '00' && !field.allowZero) {\n        v = Buffer.allocUnsafe(0);\n      }\n\n      if (field.allowLess && field.length) {\n        v = bytes_1.stripZeros(v);\n        assert(field.length >= v.length, \"The field \" + field.name + \" must not have more \" + field.length + \" bytes\");\n      } else if (!(field.allowZero && v.length === 0) && field.length) {\n        assert(field.length === v.length, \"The field \" + field.name + \" must have byte length of \" + field.length);\n      }\n\n      self.raw[i] = v;\n    }\n\n    Object.defineProperty(self, field.name, {\n      enumerable: true,\n      configurable: true,\n      get: getter,\n      set: setter\n    });\n\n    if (field.default) {\n      self[field.name] = field.default;\n    } // attach alias\n\n\n    if (field.alias) {\n      Object.defineProperty(self, field.alias, {\n        enumerable: false,\n        configurable: true,\n        set: setter,\n        get: getter\n      });\n    }\n  }); // if the constuctor is passed data\n\n  if (data) {\n    if (typeof data === 'string') {\n      data = Buffer.from(ethjsUtil.stripHexPrefix(data), 'hex');\n    }\n\n    if (Buffer.isBuffer(data)) {\n      data = rlp.decode(data);\n    }\n\n    if (Array.isArray(data)) {\n      if (data.length > self._fields.length) {\n        throw new Error('wrong number of fields in data');\n      } // make sure all the items are buffers\n\n\n      data.forEach(function (d, i) {\n        self[self._fields[i]] = bytes_1.toBuffer(d);\n      });\n    } else if (typeof data === 'object') {\n      var keys_1 = Object.keys(data);\n      fields.forEach(function (field) {\n        if (keys_1.indexOf(field.name) !== -1) self[field.name] = data[field.name];\n        if (keys_1.indexOf(field.alias) !== -1) self[field.alias] = data[field.alias];\n      });\n    } else {\n      throw new Error('invalid data');\n    }\n  }\n};"],"sourceRoot":""}