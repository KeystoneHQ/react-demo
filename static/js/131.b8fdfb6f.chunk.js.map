{"version":3,"sources":["../../onboard/dist/esm/trezor-6fb9a8cd.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","_slicedToArray","arr","Array","isArray","_arrayWithHoles","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","err","_iterableToArrayLimit","_unsupportedIterableToArray","TypeError","_nonIterableRest","_toConsumableArray","_arrayLikeToArray","_arrayWithoutHoles","iter","from","_iterableToArray","_nonIterableSpread","o","minLen","n","prototype","toString","slice","constructor","name","test","len","arr2","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","Promise","then","_asyncToGenerator","fn","self","this","args","undefined","trezorProvider","_x2","_trezorProvider","mark","_callee13","options","TrezorConnectLibrary","_yield$import","Transaction","_yield$import2","Common","ethUtil","_yield$import3","createProvider","_yield$import4","generateAddresses","isValidPath","TrezorConnect","DEVICE_EVENT","DEVICE","TREZOR_DEFAULT_PATH","networkId","email","appUrl","rpcUrl","BigNumber","networkName","customNetwork","resetWalletState","dPath","addressToPath","enabled","customPath","account","provider","disconnect","setPath","_setPath","isCustomPath","enable","getAddress","_getAddress","addresses","setPrimaryAccount","getPublicKey","_getPublicKey","getPrimaryAddress","getMoreAccounts","_getMoreAccounts","_getAccounts","_getAccounts2","getBalances","getBalance","trezorSignTransaction","_signTransaction","_signTransaction2","_signMessage","_signMessage2","wrap","_context13","prev","_callee12","message","_","address","path","_context12","size","entries","abrupt","ethereumSignMessage","stripHexPrefix","data","hex","response","success","payload","toChecksumAddress","Error","signature","concat","stop","_x9","_callee11","transactionData","_transactionData$gas","BN","toBuffer","common","transaction","trezorResult","v","rv","cv","_context11","values","chain","fromTxData","gasLimit","gas","freeze","r","s","sent","parseInt","serialize","_x8","nonce","gasPrice","to","ethereumSignTransaction","chainId","sendAsync","jsonrpc","method","params","id","e","res","result","all","map","_ref3","_callee5","balance","_context5","_x7","_callee10","getMore","_context10","t0","_ref4","set","_x6","_callee9","accounts","_context9","_callee8","_context8","coin","publicKey","chainCode","serializedPath","accountIndex","findIndex","_ref","unshift","splice","Map","_callee7","errorMsg","_context7","ethereumGetAddress","showOnTrezor","_x5","_callee6","custom","_context6","_x3","_x4","manifest","getAccounts","callback","signTransaction","processMessage","messageData","processPersonalMessage","signMessage","signPersonalMessage","on","event","type","DISCONNECT","disconnected","walletName","send","preferred","label","iconSrc","svg","wallet","_wallet","_callee4","helpers","_context4","connect","get","_get","_callee","_context","network","_get2","_callee2","_context2","_get3","_callee3","_context3","_x","desktop","mobile","osExclusions"],"mappings":"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","file":"static/js/131.b8fdfb6f.chunk.js","sourcesContent":["import _regeneratorRuntime from \"/Users/sora/keystone/react-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nvar trezorIcon = \"\\n\\t<svg width=\\\"40px\\\" height=\\\"40px\\\" viewBox=\\\"0 0 114 166\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n\\t\\t<g id=\\\"Styles\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n\\t\\t\\t<path d=\\\"M17,51.453125 L17,40 C17,17.90861 34.90861,-1.0658141e-14 57,-1.0658141e-14 C79.09139,-1.0658141e-14 97,17.90861 97,40 L97,51.453125 L113.736328,51.453125 L113.736328,139.193359 L57.5,166 L0,139.193359 L0,51.453125 L17,51.453125 Z M37,51.453125 L77,51.453125 L77,40 L76.9678398,40 C76.3750564,29.406335 67.6617997,21 57,21 C46.3382003,21 37.6249436,29.406335 37.0321602,40 L37,40 L37,51.453125 Z M23,72 L23,125 L56.8681641,140.966797 L91,125 L91,72 L23,72 Z\\\" id=\\\"Trezor-logo\\\" fill=\\\"currentColor\\\"></path>\\n\\t\\t</g>\\n\\t</svg>\\n\";\n\nfunction trezor(options) {\n  var rpcUrl = options.rpcUrl,\n      networkId = options.networkId,\n      email = options.email,\n      appUrl = options.appUrl,\n      preferred = options.preferred,\n      label = options.label,\n      iconSrc = options.iconSrc,\n      svg = options.svg,\n      customNetwork = options.customNetwork;\n  return {\n    name: label || 'Trezor',\n    svg: svg || trezorIcon,\n    iconSrc: iconSrc,\n    wallet: function () {\n      var _wallet = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(helpers) {\n        var BigNumber, networkName, resetWalletState, provider;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                BigNumber = helpers.BigNumber, networkName = helpers.networkName, resetWalletState = helpers.resetWalletState;\n                _context4.next = 3;\n                return trezorProvider({\n                  rpcUrl: rpcUrl,\n                  networkId: networkId,\n                  email: email,\n                  appUrl: appUrl,\n                  BigNumber: BigNumber,\n                  networkName: networkName,\n                  customNetwork: customNetwork,\n                  resetWalletState: resetWalletState\n                });\n\n              case 3:\n                provider = _context4.sent;\n                return _context4.abrupt(\"return\", {\n                  provider: provider,\n                  \"interface\": {\n                    name: 'Trezor',\n                    connect: provider.enable,\n                    disconnect: provider.disconnect,\n                    address: {\n                      get: function () {\n                        var _get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                          return _regeneratorRuntime.wrap(function _callee$(_context) {\n                            while (1) {\n                              switch (_context.prev = _context.next) {\n                                case 0:\n                                  return _context.abrupt(\"return\", provider.getPrimaryAddress());\n\n                                case 1:\n                                case \"end\":\n                                  return _context.stop();\n                              }\n                            }\n                          }, _callee);\n                        }));\n\n                        function get() {\n                          return _get.apply(this, arguments);\n                        }\n\n                        return get;\n                      }()\n                    },\n                    network: {\n                      get: function () {\n                        var _get2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                            while (1) {\n                              switch (_context2.prev = _context2.next) {\n                                case 0:\n                                  return _context2.abrupt(\"return\", networkId);\n\n                                case 1:\n                                case \"end\":\n                                  return _context2.stop();\n                              }\n                            }\n                          }, _callee2);\n                        }));\n\n                        function get() {\n                          return _get2.apply(this, arguments);\n                        }\n\n                        return get;\n                      }()\n                    },\n                    balance: {\n                      get: function () {\n                        var _get3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n                          var address;\n                          return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                            while (1) {\n                              switch (_context3.prev = _context3.next) {\n                                case 0:\n                                  address = provider.getPrimaryAddress();\n                                  return _context3.abrupt(\"return\", address && provider.getBalance(address));\n\n                                case 2:\n                                case \"end\":\n                                  return _context3.stop();\n                              }\n                            }\n                          }, _callee3);\n                        }));\n\n                        function get() {\n                          return _get3.apply(this, arguments);\n                        }\n\n                        return get;\n                      }()\n                    }\n                  }\n                });\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function wallet(_x) {\n        return _wallet.apply(this, arguments);\n      }\n\n      return wallet;\n    }(),\n    type: 'hardware',\n    desktop: true,\n    mobile: true,\n    osExclusions: ['iOS'],\n    preferred: preferred\n  };\n}\n\nfunction trezorProvider(_x2) {\n  return _trezorProvider.apply(this, arguments);\n}\n\nfunction _trezorProvider() {\n  _trezorProvider = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(options) {\n    var TrezorConnectLibrary, _yield$import, Transaction, _yield$import2, Common, ethUtil, _yield$import3, createProvider, _yield$import4, generateAddresses, isValidPath, TrezorConnect, DEVICE_EVENT, DEVICE, TREZOR_DEFAULT_PATH, networkId, email, appUrl, rpcUrl, BigNumber, networkName, customNetwork, resetWalletState, dPath, addressToPath, enabled, customPath, account, provider, disconnect, setPath, _setPath, isCustomPath, enable, getAddress, _getAddress, addresses, setPrimaryAccount, getPublicKey, _getPublicKey, getPrimaryAddress, getMoreAccounts, _getMoreAccounts, _getAccounts, _getAccounts2, getBalances, getBalance, trezorSignTransaction, _signTransaction, _signTransaction2, _signMessage, _signMessage2;\n\n    return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            _signMessage2 = function _signMessage4() {\n              _signMessage2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(message) {\n                var _, address, path;\n\n                return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n                  while (1) {\n                    switch (_context12.prev = _context12.next) {\n                      case 0:\n                        if (!(addressToPath.size === 0)) {\n                          _context12.next = 3;\n                          break;\n                        }\n\n                        _context12.next = 3;\n                        return enable();\n\n                      case 3:\n                        _ = _slicedToArray(_toConsumableArray(addressToPath.entries())[0], 2), address = _[0], path = _[1];\n                        return _context12.abrupt(\"return\", new Promise(function (resolve, reject) {\n                          TrezorConnect.ethereumSignMessage({\n                            path: path,\n                            message: ethUtil.stripHexPrefix(message.data),\n                            hex: true\n                          }).then(function (response) {\n                            if (response.success) {\n                              if (response.payload.address !== ethUtil.toChecksumAddress(address)) {\n                                reject(new Error('signature doesnt match the right address'));\n                              }\n\n                              var signature = \"0x\".concat(response.payload.signature);\n                              resolve(signature);\n                            } else {\n                              reject(new Error(response.payload && response.payload.error || 'There was an error signing a message'));\n                            }\n                          });\n                        }));\n\n                      case 5:\n                      case \"end\":\n                        return _context12.stop();\n                    }\n                  }\n                }, _callee12);\n              }));\n              return _signMessage2.apply(this, arguments);\n            };\n\n            _signMessage = function _signMessage3(_x9) {\n              return _signMessage2.apply(this, arguments);\n            };\n\n            _signTransaction2 = function _signTransaction4() {\n              _signTransaction2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(transactionData) {\n                var _transactionData$gas;\n\n                var path, BN, toBuffer, common, transaction, trezorResult, v, rv, cv;\n                return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n                  while (1) {\n                    switch (_context11.prev = _context11.next) {\n                      case 0:\n                        if (!(addressToPath.size === 0)) {\n                          _context11.next = 3;\n                          break;\n                        }\n\n                        _context11.next = 3;\n                        return enable();\n\n                      case 3:\n                        path = _toConsumableArray(addressToPath.values())[0];\n                        BN = ethUtil.BN, toBuffer = ethUtil.toBuffer;\n                        common = new Common({\n                          chain: customNetwork || networkName(networkId)\n                        });\n                        transaction = Transaction.fromTxData(_objectSpread(_objectSpread({}, transactionData), {}, {\n                          gasLimit: (_transactionData$gas = transactionData.gas) !== null && _transactionData$gas !== void 0 ? _transactionData$gas : transactionData.gasLimit\n                        }), {\n                          common: common,\n                          freeze: false\n                        });\n                        transaction.v = new BN(toBuffer(networkId));\n                        transaction.r = transaction.s = new BN(toBuffer(0));\n                        _context11.next = 11;\n                        return trezorSignTransaction(path, transactionData);\n\n                      case 11:\n                        trezorResult = _context11.sent;\n\n                        if (trezorResult.success) {\n                          _context11.next = 14;\n                          break;\n                        }\n\n                        throw new Error(trezorResult.payload.error);\n\n                      case 14:\n                        v = trezorResult.payload.v.toString(16); // EIP155 support. check/recalc signature v value.\n\n                        rv = parseInt(v, 16);\n                        cv = networkId * 2 + 35;\n\n                        if (rv !== cv && (rv & cv) !== rv) {\n                          cv += 1; // add signature v bit.\n                        }\n\n                        v = cv.toString(16);\n                        transaction.v = new BN(toBuffer(\"0x\".concat(v)));\n                        transaction.r = new BN(toBuffer(\"\".concat(trezorResult.payload.r)));\n                        transaction.s = new BN(toBuffer(\"\".concat(trezorResult.payload.s)));\n                        return _context11.abrupt(\"return\", \"0x\".concat(transaction.serialize().toString('hex')));\n\n                      case 23:\n                      case \"end\":\n                        return _context11.stop();\n                    }\n                  }\n                }, _callee11);\n              }));\n              return _signTransaction2.apply(this, arguments);\n            };\n\n            _signTransaction = function _signTransaction3(_x8) {\n              return _signTransaction2.apply(this, arguments);\n            };\n\n            trezorSignTransaction = function _trezorSignTransactio(path, transactionData) {\n              var nonce = transactionData.nonce,\n                  gasPrice = transactionData.gasPrice,\n                  gas = transactionData.gas,\n                  to = transactionData.to,\n                  value = transactionData.value,\n                  data = transactionData.data;\n              return TrezorConnect.ethereumSignTransaction({\n                path: path,\n                transaction: {\n                  nonce: nonce,\n                  gasPrice: gasPrice,\n                  gasLimit: gas,\n                  to: to,\n                  value: value || '',\n                  data: data || '',\n                  chainId: networkId\n                }\n              });\n            };\n\n            getBalance = function _getBalance(address) {\n              return new Promise(function (resolve, reject) {\n                provider.sendAsync({\n                  jsonrpc: '2.0',\n                  method: 'eth_getBalance',\n                  params: [address, 'latest'],\n                  id: 42\n                }, function (e, res) {\n                  e && reject(e);\n                  var result = res && res.result;\n\n                  if (result != null) {\n                    resolve(new BigNumber(result).toString(10));\n                  } else {\n                    resolve(null);\n                  }\n                });\n              });\n            };\n\n            getBalances = function _getBalances(addresses) {\n              return Promise.all(addresses.map(function (address) {\n                return new Promise( /*#__PURE__*/function () {\n                  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(resolve) {\n                    var balance;\n                    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                      while (1) {\n                        switch (_context5.prev = _context5.next) {\n                          case 0:\n                            _context5.next = 2;\n                            return getBalance(address);\n\n                          case 2:\n                            balance = _context5.sent;\n                            resolve({\n                              address: address,\n                              balance: balance\n                            });\n\n                          case 4:\n                          case \"end\":\n                            return _context5.stop();\n                        }\n                      }\n                    }, _callee5);\n                  }));\n\n                  return function (_x7) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }());\n              }));\n            };\n\n            _getAccounts2 = function _getAccounts4() {\n              _getAccounts2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(getMore) {\n                var addressInfo;\n                return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n                  while (1) {\n                    switch (_context10.prev = _context10.next) {\n                      case 0:\n                        if (enabled) {\n                          _context10.next = 2;\n                          break;\n                        }\n\n                        return _context10.abrupt(\"return\", [undefined]);\n\n                      case 2:\n                        if (!(addressToPath.size > 0 && !getMore)) {\n                          _context10.next = 4;\n                          break;\n                        }\n\n                        return _context10.abrupt(\"return\", addresses());\n\n                      case 4:\n                        if (dPath === '') {\n                          dPath = TREZOR_DEFAULT_PATH;\n                        }\n\n                        if (account) {\n                          _context10.next = 15;\n                          break;\n                        }\n\n                        _context10.prev = 6;\n                        _context10.next = 9;\n                        return getPublicKey();\n\n                      case 9:\n                        account = _context10.sent;\n                        _context10.next = 15;\n                        break;\n\n                      case 12:\n                        _context10.prev = 12;\n                        _context10.t0 = _context10[\"catch\"](6);\n                        throw _context10.t0;\n\n                      case 15:\n                        addressInfo = generateAddresses(account, addressToPath.size);\n                        addressInfo.forEach(function (_ref4) {\n                          var dPath = _ref4.dPath,\n                              address = _ref4.address;\n                          addressToPath.set(address, dPath);\n                        });\n                        return _context10.abrupt(\"return\", addresses());\n\n                      case 18:\n                      case \"end\":\n                        return _context10.stop();\n                    }\n                  }\n                }, _callee10, null, [[6, 12]]);\n              }));\n              return _getAccounts2.apply(this, arguments);\n            };\n\n            _getAccounts = function _getAccounts3(_x6) {\n              return _getAccounts2.apply(this, arguments);\n            };\n\n            _getMoreAccounts = function _getMoreAccounts3() {\n              _getMoreAccounts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n                var accounts;\n                return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n                  while (1) {\n                    switch (_context9.prev = _context9.next) {\n                      case 0:\n                        _context9.next = 2;\n                        return _getAccounts(true);\n\n                      case 2:\n                        accounts = _context9.sent;\n                        return _context9.abrupt(\"return\", getBalances(accounts));\n\n                      case 4:\n                      case \"end\":\n                        return _context9.stop();\n                    }\n                  }\n                }, _callee9);\n              }));\n              return _getMoreAccounts.apply(this, arguments);\n            };\n\n            getMoreAccounts = function _getMoreAccounts2() {\n              return _getMoreAccounts.apply(this, arguments);\n            };\n\n            getPrimaryAddress = function _getPrimaryAddress() {\n              return enabled ? addresses()[0] : undefined;\n            };\n\n            _getPublicKey = function _getPublicKey3() {\n              _getPublicKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n                var result;\n                return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n                  while (1) {\n                    switch (_context8.prev = _context8.next) {\n                      case 0:\n                        if (dPath) {\n                          _context8.next = 2;\n                          break;\n                        }\n\n                        throw new Error('a derivation path is needed to get the public key');\n\n                      case 2:\n                        _context8.prev = 2;\n                        _context8.next = 5;\n                        return TrezorConnect.getPublicKey({\n                          path: dPath,\n                          coin: 'eth'\n                        });\n\n                      case 5:\n                        result = _context8.sent;\n\n                        if (result.success) {\n                          _context8.next = 8;\n                          break;\n                        }\n\n                        throw new Error(result.payload.error);\n\n                      case 8:\n                        account = {\n                          publicKey: result.payload.publicKey,\n                          chainCode: result.payload.chainCode,\n                          path: result.payload.serializedPath\n                        };\n                        return _context8.abrupt(\"return\", account);\n\n                      case 12:\n                        _context8.prev = 12;\n                        _context8.t0 = _context8[\"catch\"](2);\n                        throw new Error('There was an error accessing your Trezor accounts.');\n\n                      case 15:\n                      case \"end\":\n                        return _context8.stop();\n                    }\n                  }\n                }, _callee8, null, [[2, 12]]);\n              }));\n              return _getPublicKey.apply(this, arguments);\n            };\n\n            getPublicKey = function _getPublicKey2() {\n              return _getPublicKey.apply(this, arguments);\n            };\n\n            setPrimaryAccount = function _setPrimaryAccount(address) {\n              // make a copy and put in an array\n              var accounts = _toConsumableArray(addressToPath.entries());\n\n              var accountIndex = accounts.findIndex(function (_ref) {\n                var _ref2 = _slicedToArray(_ref, 1),\n                    accountAddress = _ref2[0];\n\n                return accountAddress === address;\n              }); // pull the item at the account index out of the array and place at the front\n\n              accounts.unshift(accounts.splice(accountIndex, 1)[0]); // reassign addressToPath to new ordered accounts\n\n              addressToPath = new Map(accounts);\n            };\n\n            addresses = function _addresses() {\n              return Array.from(addressToPath.keys());\n            };\n\n            _getAddress = function _getAddress3() {\n              _getAddress = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(path) {\n                var errorMsg, result;\n                return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n                  while (1) {\n                    switch (_context7.prev = _context7.next) {\n                      case 0:\n                        errorMsg = \"Unable to derive address from path \".concat(path);\n                        _context7.prev = 1;\n                        _context7.next = 4;\n                        return TrezorConnect.ethereumGetAddress({\n                          path: path,\n                          showOnTrezor: false\n                        });\n\n                      case 4:\n                        result = _context7.sent;\n\n                        if (result.success) {\n                          _context7.next = 7;\n                          break;\n                        }\n\n                        throw new Error(errorMsg);\n\n                      case 7:\n                        return _context7.abrupt(\"return\", result.payload.address);\n\n                      case 10:\n                        _context7.prev = 10;\n                        _context7.t0 = _context7[\"catch\"](1);\n                        throw new Error(errorMsg);\n\n                      case 13:\n                      case \"end\":\n                        return _context7.stop();\n                    }\n                  }\n                }, _callee7, null, [[1, 10]]);\n              }));\n              return _getAddress.apply(this, arguments);\n            };\n\n            getAddress = function _getAddress2(_x5) {\n              return _getAddress.apply(this, arguments);\n            };\n\n            enable = function _enable() {\n              enabled = true;\n              return _getAccounts();\n            };\n\n            isCustomPath = function _isCustomPath() {\n              return customPath;\n            };\n\n            _setPath = function _setPath3() {\n              _setPath = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(path, custom) {\n                var address;\n                return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                  while (1) {\n                    switch (_context6.prev = _context6.next) {\n                      case 0:\n                        if (isValidPath(path)) {\n                          _context6.next = 2;\n                          break;\n                        }\n\n                        return _context6.abrupt(\"return\", false);\n\n                      case 2:\n                        if (path !== dPath) {\n                          // clear any exsting addresses if different path\n                          addressToPath = new Map();\n                        }\n\n                        if (!custom) {\n                          _context6.next = 17;\n                          break;\n                        }\n\n                        _context6.prev = 4;\n                        _context6.next = 7;\n                        return getAddress(path);\n\n                      case 7:\n                        address = _context6.sent;\n                        addressToPath.set(address, path);\n                        dPath = path;\n                        customPath = true;\n                        return _context6.abrupt(\"return\", true);\n\n                      case 14:\n                        _context6.prev = 14;\n                        _context6.t0 = _context6[\"catch\"](4);\n                        throw new Error(\"There was a problem deriving an address from path \".concat(path));\n\n                      case 17:\n                        customPath = false;\n                        dPath = path;\n                        return _context6.abrupt(\"return\", true);\n\n                      case 20:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }\n                }, _callee6, null, [[4, 14]]);\n              }));\n              return _setPath.apply(this, arguments);\n            };\n\n            setPath = function _setPath2(_x3, _x4) {\n              return _setPath.apply(this, arguments);\n            };\n\n            disconnect = function _disconnect() {\n              dPath = '';\n              addressToPath = new Map();\n              enabled = false;\n              provider.stop();\n            };\n\n            _context13.next = 25;\n            return import('trezor-connect');\n\n          case 25:\n            TrezorConnectLibrary = _context13.sent;\n            _context13.next = 28;\n            return import('@ethereumjs/tx');\n\n          case 28:\n            _yield$import = _context13.sent;\n            Transaction = _yield$import.Transaction;\n            _context13.next = 32;\n            return import('@ethereumjs/common');\n\n          case 32:\n            _yield$import2 = _context13.sent;\n            Common = _yield$import2[\"default\"];\n            _context13.next = 36;\n            return import('ethereumjs-util');\n\n          case 36:\n            ethUtil = _context13.sent;\n            _context13.next = 39;\n            return import('./providerEngine-5fc863b8.js');\n\n          case 39:\n            _yield$import3 = _context13.sent;\n            createProvider = _yield$import3[\"default\"];\n            _context13.next = 43;\n            return import('./hd-wallet-51018814.js');\n\n          case 43:\n            _yield$import4 = _context13.sent;\n            generateAddresses = _yield$import4.generateAddresses;\n            isValidPath = _yield$import4.isValidPath;\n            TrezorConnect = TrezorConnectLibrary[\"default\"], DEVICE_EVENT = TrezorConnectLibrary.DEVICE_EVENT, DEVICE = TrezorConnectLibrary.DEVICE;\n            TREZOR_DEFAULT_PATH = \"m/44'/60'/0'/0\";\n            networkId = options.networkId, email = options.email, appUrl = options.appUrl, rpcUrl = options.rpcUrl, BigNumber = options.BigNumber, networkName = options.networkName, customNetwork = options.customNetwork, resetWalletState = options.resetWalletState;\n            dPath = '';\n            addressToPath = new Map();\n            enabled = false;\n            customPath = false;\n            TrezorConnect.manifest({\n              email: email,\n              appUrl: appUrl\n            });\n            provider = createProvider({\n              getAccounts: function getAccounts(callback) {\n                _getAccounts().then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              signTransaction: function signTransaction(transactionData, callback) {\n                _signTransaction(transactionData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              processMessage: function processMessage(messageData, callback) {\n                _signMessage(messageData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              processPersonalMessage: function processPersonalMessage(messageData, callback) {\n                _signMessage(messageData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              signMessage: function signMessage(messageData, callback) {\n                _signMessage(messageData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              signPersonalMessage: function signPersonalMessage(messageData, callback) {\n                _signMessage(messageData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              rpcUrl: rpcUrl\n            });\n            TrezorConnect.on(DEVICE_EVENT, function (event) {\n              if (event.type === DEVICE.DISCONNECT) {\n                provider.stop();\n                resetWalletState({\n                  disconnected: true,\n                  walletName: 'Trezor'\n                });\n              }\n            });\n            provider.setPath = setPath;\n            provider.dPath = dPath;\n            provider.enable = enable;\n            provider.setPrimaryAccount = setPrimaryAccount;\n            provider.getPrimaryAddress = getPrimaryAddress;\n            provider.getAccounts = _getAccounts;\n            provider.getMoreAccounts = getMoreAccounts;\n            provider.getBalance = getBalance;\n            provider.getBalances = getBalances;\n            provider.send = provider.sendAsync;\n            provider.disconnect = disconnect;\n            provider.isCustomPath = isCustomPath;\n            return _context13.abrupt(\"return\", provider);\n\n          case 69:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13);\n  }));\n  return _trezorProvider.apply(this, arguments);\n}\n\nexport default trezor;"],"sourceRoot":""}